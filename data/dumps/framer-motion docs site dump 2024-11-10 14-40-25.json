[
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# Reduce bundle size\n\nLearn what makes up Motion's bundle size, and how to reduce it.\n\nA great web experience doesn't just look and move beautifully, it should load quickly, too.\n\nWhen measuring the gzipped and minified size of Framer Motion using a bundle analysis website like [Bundlephobia](https://bundlephobia.com/package/framer-motion@7.2.0), you might see big numbers like **50kb** or more!\n\nThis is misleading. Framer Motion exports many functions, most of which you won't import. JavaScript bundlers like [Rollup](https://rollupjs.org/) and [Webpack](https://webpack.js.org/) are capable of \"tree shaking\", which means that only the code you import is shipped to consumers.\n\nYou may only use a single tiny hook from Framer Motion, like `useReducedMotion`. So in that case the size would be closer to **1kb**.\n\nRegardless, the core API is the `motion` component. Because of its declarative, props-driven API, it's impossible for bundlers to tree shake it any smaller than **34kb**.\n\nHowever, by using the `m` and `LazyMotion` components, you can bring this down significantly, to just under **5.5kb** for the initial render.\n\nThen, with lazy-loading, you can defer the loading of animations and interactions until after your site has rendered.\n\n**Note:** All sizes quoted in this guide are from Rollup -generated bundles. Webpack is less effective at tree-shaking and should generate slightly larger bundles.\n\n## [\\#](/motion/guide-reduce-bundle-size/\\#how-to-reduce-the-size-of-the-motion-component) How to reduce the size of the `motion` component\n\nInstead of importing `motion`, import the slimmer `m` component.\n\n```\n\n// React\nimport { m } from \"framer-motion\"\n\n// React Server Components\nimport * as m from \"framer-motion/m\"\n```\n\nCopy\n\n`m` is used in the exact same way as `motion`, but unlike `motion`, the `m` component doesn't come preloaded with features like animations, layout animations, or the drag gesture.\n\nInstead, we load these in manually via the `LazyMotion` component. This lets you choose which features you load in, and whether you load them as part of the main bundle, or lazy load them.\n\n```\n\nimport { LazyMotion, domAnimations } from \"framer-motion\"\n\n// Load only the domAnimation package\nfunction App({ children }) {\n  return (\n    <LazyMotion features={domAnimations}>\n      {children}\n    </LazyMotion>\n  )\n}\n```\n\nCopy\n\n## [\\#](/motion/guide-reduce-bundle-size/\\#available-features) Available features\n\nThere are currently two **feature packages** you can load:\n\n- `domAnimation`: This provides support for animations, variants, exit animations, and tap/hover/focus gestures. ( **+15kb**)\n- `domMax`: This provides support for all of the above, plus pan/drag gestures and layout animations. ( **+25kb**)\n\nIn the future it might be possible to offer more granular feature packages, but for now these were chosen to reduce the amount of duplication between features, which could result in much more data being downloaded ultimately.\n\n## [\\#](/motion/guide-reduce-bundle-size/\\#synchronous-loading) Synchronous loading\n\nBy passing one of these feature packages to `LazyMotion`, they'll be bundled into your main JavaScript bundle.\n\n```\n\nimport { LazyMotion, domAnimation } from \"framer-motion\"\n\nfunction App({ children }) {\n  return (\n    <LazyMotion features={domAnimation}>\n      {children}\n    </LazyMotion>\n  )\n}\n```\n\nCopy\n\n## [\\#](/motion/guide-reduce-bundle-size/\\#lazy-loading) Lazy loading\n\nIf you're using a bundler like Webpack or Rollup, we can pass a dynamic import function to `features` that will fetch features only after we've performed our initial render.\n\nFirst, create a file that exports only the features you want to load.\n\n```\n\n// features.js\nimport { domMax } from \"framer-motion\"\nexport default domMax\n```\n\nCopy\n\nThen, pass `features` a function that will dynamically load that file.\n\n```\n\nimport { LazyMotion, m } from \"framer-motion\"\n\n// Make sure to return the specific export containing the feature bundle.\nconst loadFeatures = () =>\n  import(\"./features.js\").then(res => res.default)\n\n// This animation will run when loadFeatures resolves.\nfunction App() {\n  return (\n    <LazyMotion features={loadFeatures}>\n      <m.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n      />\n    </LazyMotion>\n  )\n}\n```\n\nCopy\n\n## [\\#](/motion/guide-reduce-bundle-size/\\#developer-tools) Developer tools\n\nBecause the normal `motion` component still preloads all of its functionality, including it anywhere will break the benefits of using `LazyMotion`.\n\nTo help prevent this, the `strict` prop can be set on `LazyMotion`. If a `motion` component is loaded anywhere within, it will throw with a reminder to render the `m` component instead.\n\n```\n\nfunction App() {\n  // This will throw!\n  return (\n    <LazyMotion strict>\n      <motion.div />\n    </LazyMotion>\n  )\n}\n```\n\nCopy\n\n## [\\#](/motion/guide-reduce-bundle-size/\\#custom-m-components) Custom `m` components\n\nYou're not limited to just HTML/SVG components. Custom m components can be created using `m.create()`.\n\nThe provided component **must** forward `ref` to the DOM element you want to animate. `m.create()` **cannot** be called within a render function.\n\n```\n\nconst Component = React.forwardRef((props, ref) => (\n    <div ref={ref} />\n))\n\nconst MotionComponent = m.create(Component)\n```\n\nCopy\n\n[PreviousAccessibility](/motion/guide-accessibility/) [NextUpgrade guides](/motion/guide-upgrade/)\n\n##### On this page\n\n- [How to reduce the size of the motion component](/motion/guide-reduce-bundle-size/#how-to-reduce-the-size-of-the-motion-component)\n- [Available features](/motion/guide-reduce-bundle-size/#available-features)\n- [Synchronous loading](/motion/guide-reduce-bundle-size/#synchronous-loading)\n- [Lazy loading](/motion/guide-reduce-bundle-size/#lazy-loading)\n- [Developer tools](/motion/guide-reduce-bundle-size/#developer-tools)\n- [Custom m components](/motion/guide-reduce-bundle-size/#custom-m-components)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).\n\n![](https://t.co/1/i/adsct?bci=4&dv=UTC%26en-US%2Cen%26Google%20Inc.%26Win32%26255%261280%26720%264%2624%261280%26720%260%26na&eci=3&event=%7B%7D&event_id=90d5069f-e92a-46b4-9cd0-ab24712cb72d&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=ee098407-c7bd-4079-a593-f895ab142545&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fguide-reduce-bundle-size%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)![](https://analytics.twitter.com/1/i/adsct?bci=4&dv=UTC%26en-US%2Cen%26Google%20Inc.%26Win32%26255%261280%26720%264%2624%261280%26720%260%26na&eci=3&event=%7B%7D&event_id=90d5069f-e92a-46b4-9cd0-ab24712cb72d&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=ee098407-c7bd-4079-a593-f895ab142545&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fguide-reduce-bundle-size%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)",
    "metadata": {
      "url": "https://www.framer.com/motion/guide-reduce-bundle-size/",
      "ogUrl": "https://www.framer.com/motion/guide-reduce-bundle-size/",
      "title": "Reduce bundle size | Framer for Developers",
      "og:url": "https://www.framer.com/motion/guide-reduce-bundle-size/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "Reduce bundle size | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "Reduce bundle size | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/guide-reduce-bundle-size/",
      "statusCode": 200,
      "description": "Learn what makes up Motion's bundle size, and how to reduce it.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Learn what makes up Motion's bundle size, and how to reduce it.",
      "twitter:title": "Reduce bundle size | Framer for Developers",
      "og:description": "Learn what makes up Motion's bundle size, and how to reduce it.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Learn what makes up Motion's bundle size, and how to reduce it.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# scroll\n\nCreate high performance scroll-linked animations.\n\n`scroll()` creates scroll-linked animations. It uses the [`ScrollTimeline` API](https://developer.mozilla.org/en-US/docs/Web/API/ScrollTimeline) for best performance, including [hardware-accelerated animations](https://www.framer.com/motion/animation/#hardware-accelerated-animations) when possible.\n\n**Note:** `scroll()` is a new function in active development based on upcoming browser APIs. React users are recommended to use [useScroll()](https://www.framer.com/motion/use-scroll/) for currently missing features like element tracking.\n\n## [\\#](https://www.framer.com/motion/scroll-function/\\#usage) Usage\n\n### [\\#](https://www.framer.com/motion/scroll-function/\\#\\#import) Import\n\nImport `scroll` from `\"framer-motion\"`:\n\n```\n\n// React\nimport { scroll } from \"framer-motion\"\n\n// Universal\nimport { scroll } from \"framer-motion/dom\"\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/scroll-function/\\#\\#callbacks) Callbacks\n\n`scroll()` can accept a callback function. This callback will be called when scroll changes with the latest `progress` value, between `0` and `1`.\n\n```\n\nscroll(progress => console.log(progress))\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/scroll-function/\\#\\#animation) Animation\n\n`scroll()` can also accept animations created with the [`animate()` function](https://www.framer.com/animate-function/).\n\n```\n\nscroll(\n  animate(\"div\", { transform: [\"none\", \"rotate(90deg)\"] })\n)\n```\n\nCopy\n\nBrowsers that support the `ScrollTimeline` API will use this to run supported animations off the main thread.\n\n### [\\#](https://www.framer.com/motion/scroll-function/\\#\\#scroll-direction) Scroll direction\n\nBy default, vertical scroll is tracked. By providing an `axis: \"x\"` option, it can instead track horizontal scrolling.\n\n```\n\nscroll(callback, { axis: \"x\" })\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/scroll-function/\\#\\#element-scroll) Element scroll\n\n`scroll()` tracks `window` scroll by default. It can also track the scroll of an `Element`, by passing it in via the `source` option.\n\n```\n\nscroll(callback, { source: document.getElementById(\"scroller\") })\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/scroll-function/\\#\\#cancel-scroll-animation) Cancel scroll animation\n\n`scroll()` returns a cleanup function. Call this to cancel the scroll animation.\n\n```\n\nconst cancel = scroll(callback)\n\ncancel()\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/scroll-function/\\#options) Options\n\n#### [\\#](https://www.framer.com/motion/scroll-function/\\#\\#\\#source) source:Element\n\nThe source element to track.\n\n```\n\nscroll(\n  (progress) => console.log(progress),\n  { source: document.getElementById(\"carousel\") }\n)\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/scroll-function/\\#\\#\\#axis) axis:\"x\" \\| \"y\"\n\nThe axis of scroll to track. Defaults to `\"y\"`.\n\n```\n\nscroll(\n  (progress) => console.log(progress),\n  { axis: \"x\" }\n)\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/scroll-function/\\#examples) Examples\n\n### [\\#](https://www.framer.com/motion/scroll-function/\\#\\#window-scroll-progress) Window scroll progress\n\n### [\\#](https://www.framer.com/motion/scroll-function/\\#\\#element-scroll-progress) Element scroll progress\n\n### [\\#](https://www.framer.com/motion/scroll-function/\\#\\#video-scroll-scrub) Video scroll scrub\n\n[Previousanimate](https://www.framer.com/motion/animate-function/) [NextinView](https://www.framer.com/motion/in-view/)\n\n##### On this page\n\n- [Usage](https://www.framer.com/motion/scroll-function/#usage)\n- [Import](https://www.framer.com/motion/scroll-function/##import)\n- [Callbacks](https://www.framer.com/motion/scroll-function/##callbacks)\n- [Animation](https://www.framer.com/motion/scroll-function/##animation)\n- [Scroll direction](https://www.framer.com/motion/scroll-function/##scroll-direction)\n- [Element scroll](https://www.framer.com/motion/scroll-function/##element-scroll)\n- [Cancel scroll animation](https://www.framer.com/motion/scroll-function/##cancel-scroll-animation)\n- [Options](https://www.framer.com/motion/scroll-function/#options)\n- [Examples](https://www.framer.com/motion/scroll-function/#examples)\n- [Window scroll progress](https://www.framer.com/motion/scroll-function/##window-scroll-progress)\n- [Element scroll progress](https://www.framer.com/motion/scroll-function/##element-scroll-progress)\n- [Video scroll scrub](https://www.framer.com/motion/scroll-function/##video-scroll-scrub)",
    "metadata": {
      "url": "https://www.framer.com/motion/scroll-function/",
      "ogUrl": "https://www.framer.com/motion/scroll-function/",
      "title": "scroll | Framer for Developers",
      "og:url": "https://www.framer.com/motion/scroll-function/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "scroll | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "scroll | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/scroll-function/",
      "statusCode": 200,
      "description": "Create high performance scroll-linked animations.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Create high performance scroll-linked animations.",
      "twitter:title": "scroll | Framer for Developers",
      "og:description": "Create high performance scroll-linked animations.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Create high performance scroll-linked animations.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# Scroll animations\n\nHow to create scroll-linked and scroll-triggered animations in Framer Motion.\n\nThere are two predominant types of scroll animations, both of which can be achieved with Framer Motion.\n\nScroll **-linked** animations are when the progress of an animation is directly tied to scroll progress. Scroll **-triggered** animations are when a normal animation is triggered when an element enters or leaves the viewport.\n\n## [\\#](https://www.framer.com/motion/scroll-animations/\\#scroll-linked-animations) Scroll-linked animations\n\nScroll-linked animations are created using [motion values](https://www.framer.com/docs/motionvalue/) and the `useScroll` hook.\n\n```\n\nimport { motion, useScroll } from \"framer-motion\"\n\nfunction Component() {\n  const { scrollYProgress } = useScroll();\n\n  return (\n    <motion.div style={{ scaleX: scrollYProgress }} />\n  )\n}\n```\n\nCopy\n\nRead the [full useScroll docs](https://www.framer.com/docs/use-scroll/) to discover how to track element scroll, element positions within the viewport, create parallax effects and more.\n\n### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#no-code) No-code\n\nThe easiest API is no API, and that's why Framer Motion is used to create the scroll-linked animations in [Framer](https://www.framer.com/?utm_source=motion-docs), the web builder for creative pros.\n\nYou can create animations in seconds, with no code, using the Scroll Transforms feature.\n\nFramer Update: Scroll Transforms - YouTube\n\nFramer\n\n314K subscribers\n\n[Framer Update: Scroll Transforms](https://www.youtube.com/watch?v=LqmTX8-5bLo)\n\nFramer\n\nSearch\n\nWatch later\n\nShare\n\nCopy link\n\nInfo\n\nShopping\n\nTap to unmute\n\nIf playback doesn't begin shortly, try restarting your device.\n\nMore videos\n\n## More videos\n\nYou're signed out\n\nVideos you watch may be added to the TV's watch history and influence TV recommendations. To avoid this, cancel and sign in to YouTube on your computer.\n\nCancelConfirm\n\nShare\n\nInclude playlist\n\nAn error occurred while retrieving sharing information. Please try again later.\n\n[Watch on](https://www.youtube.com/watch?v=LqmTX8-5bLo&embeds_referring_euri=https%3A%2F%2Fwww.framer.com%2F&embeds_referring_origin=https%3A%2F%2Fwww.framer.com)\n\n0:00\n\n0:00 / 17:07•Live\n\n•\n\n[Watch on YouTube](https://www.youtube.com/watch?v=LqmTX8-5bLo \"Watch on YouTube\")\n\nRemix the [demo site](https://transforms.framer.wiki/) to get started in seconds.\n\n## [\\#](https://www.framer.com/motion/scroll-animations/\\#scroll-triggered-animations) Scroll-triggered animations\n\nScroll-triggered animations are normal animations that start when an element enters or leaves the viewport.\n\nThe `whileInView` prop can be used to create scroll-triggered animations by defining a set of properties and, optionally, a transition, to animate to when the element is in view.\n\n```\n\n<motion.div\n  initial={{ opacity: 0 }}\n  whileInView={{ opacity: 1 }}\n/>\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#props) Props\n\n#### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#\\#whileinview) whileInView:VariantLabels \\| TargetAndTransition\n\nProperties or variant label to animate to while the element is in view.\n\n```\n\n<motion.div whileInView={{ opacity: 1 }} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#\\#viewport) viewport:ViewportOptions\n\nAn object of [viewport options](https://www.framer.com/motion/scroll-animations/##viewport-options) that define how the viewport is detected.\n\n```\n\n<motion.div\n  initial=\"hidden\"\n  whileInView=\"visible\"\n  viewport={{ once: true }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#\\#onviewportenter) onViewportEnter(entry):void\n\nCallback that triggers when the element enters the viewport. Provides the [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry) with details of the intersection event, or `null` if the browser doesn't support `IntersectionObserver`.\n\n#### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#\\#onviewportleave) onViewportLeave(entry):void\n\nCallback that triggers when the element leaves the viewport. Provides the [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry) with details of the intersection event. Will never be called if the browser doesn't support `IntersectionObserver`.\n\n### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#viewport-options) Viewport options\n\n#### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#\\#once) once:boolean\n\nIf `true`, once the element has entered the viewport it will remain in the `whileInView` state. No further viewport callbacks will be triggered.\n\n```\n\n<motion.div\n  initial=\"hidden\"\n  whileInView=\"visible\"\n  viewport={{ once: true }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#\\#root) root:RefObject<Element>\n\nBy default, the element will be considered within the viewport when it enters the window viewport.\n\nPass a `ref` to both an ancestor element and to `viewport.root` to use that ancestor element as the measured viewport instead.\n\n```\n\nfunction Component() {\n  const scrollRef = useRef(null)\n\n  return (\n    <div ref={scrollRef} style={{ overflow: \"scroll\" }}>\n      <motion.div\n        initial={{ opacity: 0 }}\n        whileInView={{ opacity: 1 }}\n        viewport={{ root: scrollRef }}\n      />\n    </div>\n  )\n}\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#\\#margin) margin:string\n\nA margin to add to the viewport when detecting whether the element has entered it.\n\nDefaults to `\"0px\"`. A single value can be used to add a margin on every side, e.g. `\"200px\"`. Or, multiple values can be defined to assign a margin to each axis in the order of top/right/bottom/left, e.g. `\"0px -20px 0px 100px\"`.\n\n#### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#\\#amount) amount:\"some\" \\| \"all\" \\| number\n\nDefaults to `\"some\"`, this option defines the amount of the element that has to intersect with the viewport in order for it to be considered within view.\n\n### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#no-code) No-code\n\nIt's also possible to create scroll-triggered animations in [Framer](https://www.framer.com/https:/www.framer.com?utm_source=motion-docs) with zero code.\n\nFramer Update: Scroll Animations - YouTube\n\nFramer\n\n314K subscribers\n\n[Framer Update: Scroll Animations](https://www.youtube.com/watch?v=aziHin3cZ-E)\n\nFramer\n\nSearch\n\nWatch later\n\nShare\n\nCopy link\n\nInfo\n\nShopping\n\nTap to unmute\n\nIf playback doesn't begin shortly, try restarting your device.\n\nMore videos\n\n## More videos\n\nYou're signed out\n\nVideos you watch may be added to the TV's watch history and influence TV recommendations. To avoid this, cancel and sign in to YouTube on your computer.\n\nCancelConfirm\n\nShare\n\nInclude playlist\n\nAn error occurred while retrieving sharing information. Please try again later.\n\n[Watch on](https://www.youtube.com/watch?v=aziHin3cZ-E&embeds_referring_euri=https%3A%2F%2Fwww.framer.com%2F&embeds_referring_origin=https%3A%2F%2Fwww.framer.com)\n\n0:00\n\n0:00 / 12:48•Live\n\n•\n\n[Watch on YouTube](https://www.youtube.com/watch?v=aziHin3cZ-E \"Watch on YouTube\")\n\nRemix the [demo site](https://topbar-animation.framer.wiki/) to get started in seconds.\n\n## [\\#](https://www.framer.com/motion/scroll-animations/\\#examples) Examples\n\nFramer Motion: whileInView - CodeSandbox\n\n### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#page-scroll-progress) Page scroll progress\n\nFramer Motion: useScroll - CodeSandbox\n\n### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#spring-smoothing) Spring smoothing\n\nFramer Motion: useScroll with spring smoothing - CodeSandbox\n\n### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#element-scroll-progress) Element scroll progress\n\nFramer Motion: useScroll element scrolling - CodeSandbox\n\n### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#track-element-position) Track element position\n\nFramer Motion: Track element position - CodeSandbox\n\n### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#parallax) Parallax\n\nFramer Motion: Parallax - CodeSandbox\n\n### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#3d) 3D\n\nFramer Motion 3D: useScroll - CodeSandbox\n\nCodeSandbox\n\n# Framer Motion 3D: useScroll\n\n![](https://avatars1.githubusercontent.com/u/7850794?v=4)mattgperry\n\n2.8M\n\n18\n\n1.3k\n\n[Edit Sandbox](https://codesandbox.io/p/sandbox/framer-motion-3d-usescroll-xibe0t?from-embed)\n\nFiles\n\n.codesandbox\n\npublic\n\nsrc\n\ntemplate\n\nApp.tsx\n\nindex.tsx\n\nstyles.css\n\npackage.json\n\ntsconfig.json\n\nDependencies\n\n[@react-three/fiber](https://codesandbox.io/examples/package/@react-three/fiber) 7.0.24\n\n[@types/three](https://codesandbox.io/examples/package/@types/three) 0.141.0\n\n[framer-motion](https://codesandbox.io/examples/package/framer-motion) 6.5.1\n\n[framer-motion-3d](https://codesandbox.io/examples/package/framer-motion-3d) 6.5.1\n\n[popmotion](https://codesandbox.io/examples/package/popmotion) 11.0.3\n\n[react](https://codesandbox.io/examples/package/react) 18.0.0\n\n[react-dom](https://codesandbox.io/examples/package/react-dom) 18.0.0\n\n[react-scripts](https://codesandbox.io/examples/package/react-scripts) 4.0.3\n\n[three](https://codesandbox.io/examples/package/three) 0.133.1\n\n[Open Sandbox](https://codesandbox.io/p/sandbox/framer-motion-3d-usescroll-xibe0t?from-embed)\n\nApp.tsx\n\n[iframe](cid:frame-27BD78F8F366367095AACF29847A090A@mhtml.blink)\n\n### [\\#](https://www.framer.com/motion/scroll-animations/\\#\\#scroll-velocity) Scroll velocity\n\n[PreviousGestures](https://www.framer.com/motion/gestures/) [NextTransition](https://www.framer.com/motion/transition/)\n\n##### On this page\n\n- [Scroll-linked animations](https://www.framer.com/motion/scroll-animations/#scroll-linked-animations)\n- [No-code](https://www.framer.com/motion/scroll-animations/##no-code)\n- [Scroll-triggered animations](https://www.framer.com/motion/scroll-animations/#scroll-triggered-animations)\n- [Props](https://www.framer.com/motion/scroll-animations/##props)\n- [Viewport options](https://www.framer.com/motion/scroll-animations/##viewport-options)\n- [No-code](https://www.framer.com/motion/scroll-animations/##no-code)\n- [Examples](https://www.framer.com/motion/scroll-animations/#examples)\n- [Page scroll progress](https://www.framer.com/motion/scroll-animations/##page-scroll-progress)\n- [Spring smoothing](https://www.framer.com/motion/scroll-animations/##spring-smoothing)\n- [Element scroll progress](https://www.framer.com/motion/scroll-animations/##element-scroll-progress)\n- [Track element position](https://www.framer.com/motion/scroll-animations/##track-element-position)\n- [Parallax](https://www.framer.com/motion/scroll-animations/##parallax)\n- [3D](https://www.framer.com/motion/scroll-animations/##3d)\n- [Scroll velocity](https://www.framer.com/motion/scroll-animations/##scroll-velocity)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).\n\n![](https://t.co/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=f5944427-c9b0-4f0d-8943-ec533c6052dd&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=92196528-0706-4480-8cdc-17615eb4f60f&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fscroll-animations%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)td.doubleclick.net\n\n# td.doubleclick.net is blocked\n\nThis page has been blocked by an extension\n\n- Try disabling your extensions.\n\nERR\\_BLOCKED\\_BY\\_CLIENT\n\nnull\n\nReload\n\nThis page has been blocked by an extension\n\n![](<Base64-Image-Removed>)![](<Base64-Image-Removed>)![](https://analytics.twitter.com/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=f5944427-c9b0-4f0d-8943-ec533c6052dd&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=92196528-0706-4480-8cdc-17615eb4f60f&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fscroll-animations%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)",
    "metadata": {
      "url": "https://www.framer.com/motion/scroll-animations/",
      "ogUrl": "https://www.framer.com/motion/scroll-animations/",
      "title": "Scroll animations | Framer for Developers",
      "og:url": "https://www.framer.com/motion/scroll-animations/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "Scroll animations | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "Scroll animations | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/scroll-animations/",
      "statusCode": 200,
      "description": "How to create scroll-linked and scroll-triggered animations in Framer Motion.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "How to create scroll-linked and scroll-triggered animations in Framer Motion.",
      "twitter:title": "Scroll animations | Framer for Developers",
      "og:description": "How to create scroll-linked and scroll-triggered animations in Framer Motion.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "How to create scroll-linked and scroll-triggered animations in Framer Motion.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# useWillChange\n\nAutomatically manage the will-change CSS property to optimise performance.\n\nThe [CSS `will-change` property](https://developer.mozilla.org/en-US/docs/Web/CSS/will-change) can be used to tell the browser which styles it should expect to change, allowing it to optimise for that use-case.\n\n`useWillChange` returns a motion value that will automatically manage the `will-change` style.\n\nHowever, if you encounter [rendering artifacts](https://github.com/framer/motion/issues/934) because the browser is improperly repainting the page, or performance issues related to animating other styles, `useWillChange` can help.\n\n## [\\#](/motion/use-will-change/\\#usage) Usage\n\nImport from Framer Motion.\n\n```\n\nimport { useWillChange } from \"framer-motion\"\n```\n\nCopy\n\nCreate a `willChange` motion value and provide to a `<motion>` component via style:\n\n```\n\nfunction Component() {\n  const willChange = useWillChange()\n\n  return (\n    <motion.div\n      animate={{ scale: 2 }}\n      style={{ willChange }}\n    />\n  )\n}\n```\n\nCopy\n\n## [\\#](/motion/use-will-change/\\#how-it-works) How it works\n\nValues that are capable of hardware acceleration ( `transform`, `opacity`, `clip-path` and `filter`) will be added to `will-change` just before they start animating.\n\n```\n\nfunction Component() {\n  const willChange = useWillChange()\n\n  return (\n    <motion.div\n      animate={{ x: 100 }}\n      style={{ willChange }} // will-change: transform\n    />\n  )\n}\n```\n\nCopy\n\n[NextIntroduction](/motion/introduction/)\n\n##### On this page\n\n- [Usage](/motion/use-will-change/#usage)\n- [How it works](/motion/use-will-change/#how-it-works)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).\n\n![](https://t.co/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=f63f0c54-f6b5-4231-acb1-c26a61392bb0&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=f2081b35-bb40-44c9-bd0f-08bda1cb9f74&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fuse-will-change%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-QZ2MPXED80&gacid=1299825575.1731249510&gtm=45je4b70v9101309483z879263478za200zb79263478&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&_ng=1&aip=1&fledge=1&frm=0&tag_exp=101823848~101925629&z=1666465290)![](https://analytics.twitter.com/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=f63f0c54-f6b5-4231-acb1-c26a61392bb0&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=f2081b35-bb40-44c9-bd0f-08bda1cb9f74&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fuse-will-change%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)",
    "metadata": {
      "url": "https://www.framer.com/motion/use-will-change/",
      "ogUrl": "https://www.framer.com/motion/use-will-change/",
      "title": "useWillChange | Framer for Developers",
      "og:url": "https://www.framer.com/motion/use-will-change/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "useWillChange | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "useWillChange | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/use-will-change/",
      "statusCode": 200,
      "description": "Automatically manage the will-change CSS property to optimise performance.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Automatically manage the will-change CSS property to optimise performance.",
      "twitter:title": "useWillChange | Framer for Developers",
      "og:description": "Automatically manage the will-change CSS property to optimise performance.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Automatically manage the will-change CSS property to optimise performance.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# Animation\n\nHow to animate in Framer Motion.\n\nThere are multiple ways to animate in Framer Motion, scaling to the complexity of your needs.\n\n## [\\#](https://www.framer.com/motion/animation/\\#simple-animations) Simple animations\n\nMost animations will be performed with the `motion` component and the `animate` prop.\n\n```\n\n<motion.div animate={{ x: 100 }} />\n```\n\nCopy\n\nWhen any value in `animate` changes, the component will automatically animate to the updated target.\n\nFramer Motion: Animate on state update - CodeSandbox\n\n### [\\#](https://www.framer.com/motion/animation/\\#\\#transitions) Transitions\n\nBy default, Motion will create an appropriate animation for a snappy transition based on the types of value being animated. For instance, physical properties like `x` or `scale` will be animated via a spring simulation. Whereas values like `opacity` or `color` will be animated with a tween.\n\nHowever, you can define different types of animation by passing [a default transition](https://www.framer.com/docs/transition/) to the `transition` prop.\n\n```\n\n<motion.div\n  animate={{ x: 100 }}\n  transition={{ ease: \"easeOut\", duration: 2 }}\n/>\n```\n\nCopy\n\nFramer Motion: Transition prop - CodeSandbox\n\n### [\\#](https://www.framer.com/motion/animation/\\#\\#enter-animations) Enter animations\n\nWhen a `motion` component is first created, it'll automatically animate to the values in `animate` if they're different from those defined in `style` or `initial`. You can set the `initial` prop to `false` to disable enter animations.\n\n```\n\n<motion.div animate={{ x: 100 }} initial={false} />\n```\n\nCopy\n\nFramer Motion: Enter animation - CodeSandbox\n\n### [\\#](https://www.framer.com/motion/animation/\\#\\#exit-animations) Exit animations\n\nIn React, when a component is removed from the tree, it's removed instantly. Framer Motion provides the [`AnimatePresence component`](https://www.framer.com/docs/animate-presence/) to keep components in the DOM while they perform an exit animation.\n\n```\n\n<AnimatePresence>\n  {isVisible && (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    />\n  )}\n</AnimatePresence>\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/animation/\\#\\#keyframes) Keyframes\n\nValues in `animate` can also be set as a series of keyframes. This will animate through each value in sequence.\n\n```\n\n<motion.div\n  animate={{ x: [0, 100, 0] }}\n/>\n```\n\nCopy\n\nFramer Motion: Keyframes - CodeSandbox\n\nWe can use the current value as the initial keyframe by passing a **wildcard keyframe**, `null`.\n\n```\n\n<motion.div\n  animate={{ x: [null, 100, 0] }}\n/>\n```\n\nCopy\n\nThis way, if a keyframes animation starts while the value is currently animating, the transition will be more natural. It also reduces duplication in our code.\n\nFramer Motion: Wildcard keyframes - CodeSandbox\n\nCodeSandbox\n\n# Framer Motion: Wildcard keyframes\n\n![](https://avatars1.githubusercontent.com/u/7850794?v=4)mattgperry\n\n3.3M\n\n3\n\n745\n\n[Edit Sandbox](https://codesandbox.io/p/sandbox/framer-motion-wildcard-keyframes-dkk0xr?from-embed)\n\nFiles\n\n.codesandbox\n\npublic\n\nsrc\n\ntemplate\n\nApp.tsx\n\nindex.tsx\n\nstyles.css\n\npackage.json\n\ntsconfig.json\n\nDependencies\n\n[framer-motion](https://codesandbox.io/examples/package/framer-motion) 6.5.1\n\n[react](https://codesandbox.io/examples/package/react) 18.0.0\n\n[react-dom](https://codesandbox.io/examples/package/react-dom) 18.0.0\n\n[react-scripts](https://codesandbox.io/examples/package/react-scripts) 4.0.3\n\n[Open Sandbox](https://codesandbox.io/p/sandbox/framer-motion-wildcard-keyframes-dkk0xr?from-embed)\n\nApp.tsx\n\n[iframe](cid:frame-A5723D7B799F2BC74F12009FC9C99B33@mhtml.blink)\n\n```\n\n<motion.circle cx={500} animate={{ cx: [null, 100] }} />\n```\n\nCopy\n\nEach keyframe will be spaced evenly throughout the animaton. You can override this by setting the `times` option via `transition`.\n\n`times` is an array of the same length as the keyframes array, with numbers between `0` and `1` definining where in the animation each keyframe should be hit.\n\n```\n\n<motion.circle\n  cx={500}\n  animate={{ cx: [null, 100, 200] }}\n  transition={{ duration: 3, times: [0, 0.2, 1] }}\n/>\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/animation/\\#gesture-animations) Gesture animations\n\nFramer Motion has shortcuts for animating to a set of values when [gestures start](https://www.framer.com/docs/gestures/#animation-helpers), like `hover`, `tap`, `drag`, `focus` and `inView`:\n\n```\n\n<motion.button\n  initial={{ opacity: 0.6 }}\n  whileHover={{\n    scale: 1.2,\n    transition: { duration: 1 },\n  }}\n  whileTap={{ scale: 0.9 }}\n  whileInView={{ opacity: 1 }}\n/>\n```\n\nCopy\n\nIt'll automatically figure out which values to animate back to when these gestures end.\n\n## [\\#](https://www.framer.com/motion/animation/\\#variants) Variants\n\nSetting `animate` as an object is useful for simple, single-component animations. But sometimes we want to create animations that propagate throughout the DOM, and orchestrate those animations in a declarative way. We can do so with variants.\n\nFramer Motion: Variants - CodeSandbox\n\nCodeSandbox\n\n# Framer Motion: Variants\n\n![](https://avatars1.githubusercontent.com/u/7850794?v=4)mattgperry\n\n2.8M\n\n11\n\n2.4k\n\n[Edit Sandbox](https://codesandbox.io/p/sandbox/framer-motion-variants-rj7ks0?from-embed)\n\nFiles\n\n.codesandbox\n\npublic\n\nsrc\n\ntemplate\n\nApp.tsx\n\nInput.tsx\n\narray.ts\n\nindex.tsx\n\nstyles.css\n\npackage.json\n\ntsconfig.json\n\nDependencies\n\n[framer-motion](https://codesandbox.io/examples/package/framer-motion) 7.2.0\n\n[react](https://codesandbox.io/examples/package/react) 18.0.0\n\n[react-dom](https://codesandbox.io/examples/package/react-dom) 18.0.0\n\n[react-scripts](https://codesandbox.io/examples/package/react-scripts) 4.0.3\n\n[Open Sandbox](https://codesandbox.io/p/sandbox/framer-motion-variants-rj7ks0?from-embed)\n\nApp.tsx\n\n[iframe](cid:frame-2CA20ECD50299DEF90887FF2CCFC3DA8@mhtml.blink)\n\nVariants are sets of pre-defined targets.\n\n```\n\nconst variants = {\n  visible: { opacity: 1 },\n  hidden: { opacity: 0 },\n}\n```\n\nCopy\n\nThey're passed into `motion` components via the `variants` prop.\n\n```\n\n<motion.div variants={variants} />\n```\n\nCopy\n\nThese variants can be referred to by label, wherever you can define an animation object.\n\n```\n\n<motion.div\n  initial=\"hidden\"\n  animate=\"visible\"\n  variants={variants}\n/>\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/animation/\\#\\#propagation) Propagation\n\nIf a `motion` component has children, changes in variant will flow down through the component hierarchy until a child component defines its own `animate` property.\n\n```\n\nconst list = {\n  visible: { opacity: 1 },\n  hidden: { opacity: 0 },\n}\n\nconst item = {\n  visible: { opacity: 1, x: 0 },\n  hidden: { opacity: 0, x: -100 },\n}\n\nreturn (\n  <motion.ul\n    initial=\"hidden\"\n    animate=\"visible\"\n    variants={list}\n  >\n    <motion.li variants={item} />\n    <motion.li variants={item} />\n    <motion.li variants={item} />\n  </motion.ul>\n)\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/animation/\\#\\#orchestration) Orchestration\n\nBy default, all these animations will start simultaneously. But by using variants, we gain access to extra `transition` props like `when`, `delayChildren`, and `staggerChildren` that can let parents orchestrate the execution of child animations.\n\n```\n\nconst list = {\n  visible: {\n    opacity: 1,\n    transition: {\n      when: \"beforeChildren\",\n      staggerChildren: 0.3,\n    },\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      when: \"afterChildren\",\n    },\n  },\n}\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/animation/\\#\\#dynamic-variants) Dynamic variants\n\nEach variant can be defined as a function that resolves when a variant is accessed. These variant functions are provided a single argument, which can be set in a component's `custom` prop.\n\n```\n\nconst variants = {\n  visible: i => ({\n    opacity: 1,\n    transition: {\n      delay: i * 0.3,\n    },\n  }),\n  hidden: { opacity: 0 },\n}\n\nreturn items.map((item, i) => (\n  <motion.li\n    custom={i}\n    animate=\"visible\"\n    variants={variants}\n  />\n))\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/animation/\\#\\#multiple-variants) Multiple variants\n\nProps like `animate`, `whileHover` etc can define one or more variants by passing a string or an array of strings.\n\n```\n\n<motion.ul variants={[\"open\", \"primary\"]} />\n```\n\nCopy\n\nIf variants define the same values, variants appearing later in the array will take precedence over those earlier in the array.\n\n## [\\#](https://www.framer.com/motion/animation/\\#manual-controls) Manual controls\n\nDeclarative animations are ideal for most UI interactions. But sometimes we need to orchestrate more complex sequences.\n\nThe [`useAnimate` hook](https://www.framer.com/docs/use-animate/) can be used to:\n\n- Animate any HTML/SVG element\n- Create complex sequences of animations\n- Control animations with `time`, `speed`, `play()`, `pause()` and other playback controls.\n\n```\n\nconst MyComponent = () => {\n  const [scope, animate] = useAnimate()\n\n  useEffect(() => {\n    const animation = async () => {\n      await animate(scope.current, { x: \"100%\" })\n      animate(\"li\", { opacity: 1 })\n    }\n\n    animation()\n  }, [])\n\n  return (\n    <ul ref={scope}>\n      <li />\n      <li />\n      <li />\n    </ul>\n  )\n}\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/animation/\\#animate-single-values) Animate single values\n\nIt's also possible to use useAnimate to animate single values or a single `MotionValue`.\n\n```\n\nconst [scope, animate]= useAnimate()\nconst x = useMotionValue(0)\n\nuseEffect(() => {\n  const controls = animate(x, 100, {\n    type: \"spring\",\n    stiffness: 2000,\n    onComplete: v => {}\n  })\n\n  return () => controls.stop()\n})\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/animation/\\#animate-content) Animate content\n\nWe can render the current value of a `MotionValue` by passing it as a `motion` component's child.\n\n```\n\nconst count = useMotionValue(0)\nconst rounded = useTransform(count, latest => Math.round(latest))\n\nuseEffect(() => {\n  const controls = animate(count, 100)\n\n  return () => controls.stop()\n}, [])\n\nreturn <motion.div>{rounded}</motion.div>\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/animation/\\#hardware-accelerated-animations) Hardware-accelerated animations\n\nBrowsers are able to run some animations via the GPU using CSS or the Web Animations API (WAAPI).\n\nRunning animations on the GPU enables **smoother performance**, especially in situations where the main JavaScript thread becomes busy. GPU animations are also more **energy efficient**, leading to lower battery usage.\n\nHowever, native browser animation APIs offer fewer features than Framer Motion's JavaScript animations. For this reason, Motion's hybrid engine intelligently decides when an animation can safely run on the GPU, falling back to JavaScript animations when it needs the additional functionality.\n\nIt even does some work to ensure features that don't traditionally work on the GPU are supported, like spring animations, custom easing functions, velocity transfer and animation interruption.\n\n### [\\#](https://www.framer.com/motion/animation/\\#\\#supported-values) Supported values\n\nDifferent browsers are capable of accelerating different values so Framer Motion supports a superset of them.\n\n- `transform`\n- `opacity`\n- `clipPath`\n- `filter`\n\n**Note on `transform`:** Motion allows animating independent transforms like `x` and `scale`, while browsers don't. Therefore, hardware acceleration only works when `transform` itself is animated.\n\n```\n\n<motion.div\n  animate={{ transform: \"translateX(100px)\" }}\n/>\n```\n\nCopy\n\nThe downside to this approach, as is the case with animating `transform` via CSS, is all transform values have to be animated together. So it is recommended to normally use independent transforms for readability and flexibility, using `transform` directly only in situations where you really need the accelerated animations.\n\n### [\\#](https://www.framer.com/motion/animation/\\#\\#unsupported-features) Unsupported features\n\nSupported values will **always** use hardware-accelerated animations, **unless**:\n\n- The `motion` component has on `onUpdate` prop.\n- The value is passed in as a motion value via the `style` prop.\n- `repeatDelay` is set.\n- `repeatType` is set as `\"mirror\"`.\n- `damping` is set to `0`.\n\n## [\\#](https://www.framer.com/motion/animation/\\#auto-will-change) Auto `will-change`\n\nThe [`will-change`](https://developer.mozilla.org/en-US/docs/Web/CSS/will-change) CSS rule allows developers to inform the browser when a style like `transform` and `opacity` are likely to change. The browser uses this information to optimise rendering, for instance by making an element a composited layer and therefore avoiding repaints.\n\nBy providing a `willChange` motion value created by [`useWillChange`](https://www.framer.com/motion/use-will-change/), Framer Motion automatically manages `will-change` by adding style names that can be browser-optimised.\n\nStyle names are added at the start of animations and gestures.\n\n```\n\nconst willChange = useWillChange()\n\n// will-change: transform\n<motion.div animate={{ x: 100 }} style={{ willChange }} />\n```\n\nCopy\n\nOnce added, values aren't removed, to reduce the subtle rendering differences that can occur in Safari between GPU layers and non-layers.\n\n[PreviousExamples](https://www.framer.com/motion/examples/) [NextLayout animations](https://www.framer.com/motion/layout-animations/)\n\n##### On this page\n\n- [Simple animations](https://www.framer.com/motion/animation/#simple-animations)\n- [Transitions](https://www.framer.com/motion/animation/##transitions)\n- [Enter animations](https://www.framer.com/motion/animation/##enter-animations)\n- [Exit animations](https://www.framer.com/motion/animation/##exit-animations)\n- [Keyframes](https://www.framer.com/motion/animation/##keyframes)\n- [Gesture animations](https://www.framer.com/motion/animation/#gesture-animations)\n- [Variants](https://www.framer.com/motion/animation/#variants)\n- [Propagation](https://www.framer.com/motion/animation/##propagation)\n- [Orchestration](https://www.framer.com/motion/animation/##orchestration)\n- [Dynamic variants](https://www.framer.com/motion/animation/##dynamic-variants)\n- [Multiple variants](https://www.framer.com/motion/animation/##multiple-variants)\n- [Manual controls](https://www.framer.com/motion/animation/#manual-controls)\n- [Animate single values](https://www.framer.com/motion/animation/#animate-single-values)\n- [Animate content](https://www.framer.com/motion/animation/#animate-content)\n- [Hardware-accelerated animations](https://www.framer.com/motion/animation/#hardware-accelerated-animations)\n- [Supported values](https://www.framer.com/motion/animation/##supported-values)\n- [Unsupported features](https://www.framer.com/motion/animation/##unsupported-features)\n- [Auto will-change](https://www.framer.com/motion/animation/#auto-will-change)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).\n\n![](https://t.co/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=78dd2006-47f6-49b8-a493-4fec117add8e&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=417ac1ae-435e-43ae-b521-df726b43c866&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fanimation%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)td.doubleclick.net\n\n# td.doubleclick.net is blocked\n\nThis page has been blocked by an extension\n\n- Try disabling your extensions.\n\nERR\\_BLOCKED\\_BY\\_CLIENT\n\nnull\n\nReload\n\nThis page has been blocked by an extension\n\n![](<Base64-Image-Removed>)![](<Base64-Image-Removed>)![](https://analytics.twitter.com/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=78dd2006-47f6-49b8-a493-4fec117add8e&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=417ac1ae-435e-43ae-b521-df726b43c866&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fanimation%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)",
    "metadata": {
      "url": "https://www.framer.com/motion/animation/",
      "ogUrl": "https://www.framer.com/motion/animation/",
      "title": "Animation | Framer for Developers",
      "og:url": "https://www.framer.com/motion/animation/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "Animation | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "Animation | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/animation/",
      "statusCode": 200,
      "description": "How to animate in Framer Motion.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "How to animate in Framer Motion.",
      "twitter:title": "Animation | Framer for Developers",
      "og:description": "How to animate in Framer Motion.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "How to animate in Framer Motion.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# 3D: Introduction\n\nGet started with Framer Motion 3D.\n\n## [\\#](https://www.framer.com/motion/three-introduction/\\#overview) Overview\n\nFramer Motion 3D is a simple yet powerful animation library for [React Three Fiber](https://docs.pmnd.rs/react-three-fiber/getting-started/introduction). It offers most of the same functionality as Framer Motion for declarative 3D scenes.\n\nFramer Motion 3D: Shapes button - CodeSandbox\n\nThis guide will help you create animations with Motion 3D, but assumes you know the basics of both [Framer Motion](https://www.framer.com/docs/) and [React Three Fiber](https://docs.pmnd.rs/react-three-fiber/getting-started/introduction).\n\n## [\\#](https://www.framer.com/motion/three-introduction/\\#installation) Installation\n\nFramer Motion 3D is built upon the [Three.js](https://threejs.org/) and [React Three Fiber](https://docs.pmnd.rs/react-three-fiber/getting-started/introduction) (R3F) libraries. Install all three from npm:\n\n```\n\nnpm install three@0.137.0 @react-three/fiber@8.2.2 framer-motion-3d@11.2.0\n```\n\nCopy\n\n**Warning:** Framer Motion 3D is only compatible with React 18, with no timeline for React 19 compatibility.\n\n## [\\#](https://www.framer.com/motion/three-introduction/\\#usage) Usage\n\n### [\\#](https://www.framer.com/motion/three-introduction/\\#\\#motion-components) `motion` components\n\nFor every R3F component, there's a `motion` equivalent. Import `motion` from `\"framer-motion-3d\"`:\n\n```\n\nimport { motion } from \"framer-motion-3d\"\n```\n\nCopy\n\nAnd use in place of your R3F components:\n\n```\n\n<motion.pointLight animate={{ x: 2 }} />\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/three-introduction/\\#\\#animation) Animation\n\nMotion 3D supports all the same [animation](https://www.framer.com/docs/animation/) options as usual, including the `initial` and `animate` props, variants, and the imperative `useAnimation` controls.\n\n```\n\nconst variants = {\n  hidden: { opacity: 0 },\n  visible: { opacity: 1 },\n}\n\nreturn (\n  <motion.meshStandardMaterial\n    initial=\"hidden\"\n    animate=\"visible\"\n    variants={variants}\n  />\n)\n```\n\nCopy\n\nCurrently, variants can't be automatically passed between the DOM and 3D worlds, but you can still share state to achieve similar results:\n\n```\n\n// index.js\nimport { motion } from \"framer-motion\"\nimport { Scene } from \"./scene\"\n\nexport function App() {\n  const [isHovered, setIsHovered] = useState(false)\n\n  return (\n    <motion.div\n      whileHover={{ scale: 1.2 }}\n      onHoverStart={() => setIsHovered(true)}\n      onHoverEnd={() => setIsHovered(true)}\n    >\n      <Scene isHovered={isHovered} />\n    </motion.div>\n  )\n}\n\n// scene.js\nimport { Canvas } from \"@react-three/fiber\"\nimport { motion } from \"framer-motion-3d\"\n\nexport function Scene({ isHovered }) {\n  return (\n    <Canvas>\n      <motion.group animate={isHovered ? \"hover\" : \"rest\"}>\n        <motion.mesh variants={{ hover: { z: 1 } }} />\n      </motion.group>\n    </Canvas>\n  )\n}\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/three-introduction/\\#\\#supported-values) Supported values\n\n3D `motion` components support most of the the same transforms as their 2D equivalents:\n\n- `x`, `y` and `z`\n- `scale`, `scaleX`, `scaleY` and `scaleZ`\n- `rotateX`, `rotateY` and `rotateZ`\n\nAdditionally, `color` and `opacity` are supported on 3D primitives that support them, like `meshStandardMaterial`, with support for more values coming in the near future.\n\n### [\\#](https://www.framer.com/motion/three-introduction/\\#\\#gestures) Gestures\n\n3D `motion` components support the hover and tap [gestures](https://www.framer.com/docs/gestures/) on R3F with a physical presence (like `mesh`).\n\n```\n\n<motion.mesh\n  whileHover={{ scale: 1.1 }}\n  whileTap={{ scale: 0.9 }}\n  onHoverStart={() => console.log('hover start')}\n  onTap={() => console.log('tapped!')}\n/>\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/three-introduction/\\#\\#motionvalue) `MotionValue`\n\n`MotionValue` s are used to track the state and velocity of animating values, outside of React's render lifecycle.\n\nWith 3D `motion` components, `MotionValue` s are injected via their R3F attribute:\n\n```\n\nimport { useMotionValue, useTransform } from \"framer-motion\"\nimport { motion } from \"framer-motion-3d\"\n\nexport function Box() {\n  const x = useMotionValue(0)\n  const scaleZ = useTransform(x, v => v / 100)\n\n  return (\n    <motion.mesh\n      position-x={x}\n      scale={[1, 1, scaleZ]}\n      animate={{ x: 100 }}\n    />\n  )\n}\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/three-introduction/\\#\\#layout-animations) Layout animations\n\nImages, and therefore 3D scenes, involved in layout animations can exhibit scale distortion. With the [`LayoutCamera`](https://www.framer.com/docs/layoutcamera/) and [`LayoutOrthographicCamera`](https://www.framer.com/docs/layoutorthographiccamera/) components this distortion can be corrected and the 3D scene can be incorporated into the layout animation naturally.\n\nFramer Motion 3D: LayoutCamera - CodeSandbox\n\n## [\\#](https://www.framer.com/motion/three-introduction/\\#examples) Examples\n\nFramer Motion 3D: Star button (forked) - CodeSandbox\n\nFramer Motion 3D: Variants - CodeSandbox\n\n[PreviousEasing functions](https://www.framer.com/motion/easing-functions/) [NextLayoutCamera](https://www.framer.com/motion/layoutcamera/)\n\n##### On this page\n\n- [Overview](https://www.framer.com/motion/three-introduction/#overview)\n- [Installation](https://www.framer.com/motion/three-introduction/#installation)\n- [Usage](https://www.framer.com/motion/three-introduction/#usage)\n- [motion components](https://www.framer.com/motion/three-introduction/##motion-components)\n- [Animation](https://www.framer.com/motion/three-introduction/##animation)\n- [Supported values](https://www.framer.com/motion/three-introduction/##supported-values)\n- [Gestures](https://www.framer.com/motion/three-introduction/##gestures)\n- [MotionValue](https://www.framer.com/motion/three-introduction/##motionvalue)\n- [Layout animations](https://www.framer.com/motion/three-introduction/##layout-animations)\n- [Examples](https://www.framer.com/motion/three-introduction/#examples)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).\n\n![](https://t.co/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=77ffd619-635f-4dd9-af62-57aa291c93e3&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=576eac5b-7d97-4231-9d8c-f77d16f87ff6&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fthree-introduction%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)![](https://analytics.twitter.com/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=77ffd619-635f-4dd9-af62-57aa291c93e3&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=576eac5b-7d97-4231-9d8c-f77d16f87ff6&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fthree-introduction%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)\n\ntd.doubleclick.net\n\n# td.doubleclick.net is blocked\n\nThis page has been blocked by an extension\n\n- Try disabling your extensions.\n\nERR\\_BLOCKED\\_BY\\_CLIENT\n\nnull\n\nReload\n\nThis page has been blocked by an extension\n\n![](<Base64-Image-Removed>)![](<Base64-Image-Removed>)",
    "metadata": {
      "url": "https://www.framer.com/motion/three-introduction/",
      "ogUrl": "https://www.framer.com/motion/three-introduction/",
      "title": "3D: Introduction | Framer for Developers",
      "og:url": "https://www.framer.com/motion/three-introduction/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "3D: Introduction | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "3D: Introduction | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/three-introduction/",
      "statusCode": 200,
      "description": "Get started with Framer Motion 3D.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Get started with Framer Motion 3D.",
      "twitter:title": "3D: Introduction | Framer for Developers",
      "og:description": "Get started with Framer Motion 3D.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Get started with Framer Motion 3D.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# AnimatePresence\n\nAnimate components when they're removed from the React tree.\n\n`AnimatePresence` allows components to animate out when they're removed from the React tree.\n\nIt's required to enable exit animations because React lacks a lifecycle method that:\n\n1. Notifies components when they're going to be unmounted and\n2. Allows them to defer that unmounting until after an operation is complete (for instance an animation).\n\n```\n\nimport { motion, AnimatePresence } from \"framer-motion\"\n\nexport const MyComponent = ({ isVisible }) => (\n  <AnimatePresence>\n    {isVisible && (\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n      />\n    )}\n  </AnimatePresence>\n)\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/animate-presence/\\#usage) Usage\n\n### [\\#](https://www.framer.com/motion/animate-presence/\\#\\#exit-animations) Exit animations\n\n`AnimatePresence` works by detecting when **direct children** are removed from the React tree.\n\nAny `motion` components contained by the removed child that have an `exit` prop will fire that animation before the entire tree is finally removed from the DOM.\n\n**Note:** Direct children must each have a unique `key` prop so `AnimatePresence` can track their presence in the tree.\n\n```\n\nconst MyComponent = ({ isVisible }) => (\n  <AnimatePresence>\n    {isVisible && (\n      <motion.div\n        key=\"modal\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n      />\n    )}\n  </AnimatePresence>\n)\n```\n\nCopy\n\nLike `initial` and `animate`, `exit` can be defined either as a `TargetAndTransition` object of values, or a variant label to animate out a whole tree.\n\nIn React, changing a component's `key` makes React treat it as an entirely new component. So the old one is unmounted before the new one is mounted. So by changing the `key` of a single child of `AnimatePresence`, we can easily make components like slideshows.\n\n```\n\nexport const Slideshow = ({ image }) => (\n  <AnimatePresence>\n    <motion.img\n      key={image.src}\n      src={image.src}\n      initial={{ x: 300, opacity: 0 }}\n      animate={{ x: 0, opacity: 1 }}\n      exit={{ x: -300, opacity: 0 }}\n    />\n  </AnimatePresence>\n)\n```\n\nCopy\n\nFramer Motion: Image gallery - CodeSandbox\n\nCodeSandbox\n\n# Framer Motion: Image gallery\n\n## A live, editable example of the Framer Motion API\n\n![](https://avatars1.githubusercontent.com/u/7850794?v=4)mattgperry\n\n9.7M\n\n94\n\n8.1k\n\n[Edit Sandbox](https://codesandbox.io/p/sandbox/framer-motion-image-gallery-pqvx3?from-embed)\n\nFiles\n\npublic\n\nsrc\n\nExample.tsx\n\nimage-data.ts\n\nindex.tsx\n\nstyles.css\n\npackage.json\n\ntsconfig.json\n\nDependencies\n\n[framer-motion](https://codesandbox.io/examples/package/framer-motion) 5.0.0\n\n[react](https://codesandbox.io/examples/package/react) 16.8.4\n\n[react-dom](https://codesandbox.io/examples/package/react-dom) 16.8.4\n\n[react-scripts](https://codesandbox.io/examples/package/react-scripts) 2.1.3\n\n[Open Sandbox](https://codesandbox.io/p/sandbox/framer-motion-image-gallery-pqvx3?from-embed)\n\nindex.tsx\n\n[iframe](cid:frame-3361090651EA3D987682319A592DAF9E@mhtml.blink)\n\n### [\\#](https://www.framer.com/motion/animate-presence/\\#\\#multiple-children) Multiple children\n\n`AnimatePresence` works the same way with multiple children. Just ensure that each has a unique `key` and components will animate in and out as they're added or removed from the tree.\n\n```\n\nexport const Notifications = ({ messages }) => (\n  <AnimatePresence>\n    {messages.map(({ id, content }) => (\n      <motion.li\n        key={id}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n      >\n        {content}\n      </motion.li>\n    ))}\n  </AnimatePresence>\n)\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/animate-presence/\\#\\#suppressing-initial-animations) Suppressing initial animations\n\nMount animations are already handled by `motion` components via the `initial` and `animate` props.\n\nIf a `motion` component is set to `initial={false}`, it'll start in the state defined in `animate`. But sometimes, for instance a chatbox or a slideshow, we only want to animate in new components, that are added after the initial render.\n\nBy setting `initial={false}` on `AnimatePresence`, components present when `AnimatePresence` first loads will start in their `animate` state. Only components that enter after this initial render will animate in.\n\n```\n\nconst MyComponent = ({ isVisible }) => (\n  <AnimatePresence initial={false}>\n    {isVisible && (\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n      />\n    )}\n  </AnimatePresence>\n)\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/animate-presence/\\#\\#animating-custom-components) Animating custom components\n\nThe children of `AnimatePresence` can also be custom components. The only requirement is that somewhere within this component is at least one `motion` component with an `exit` prop.\n\n**Note:** The custom component being removed from the DOM must still be a **direct descendant** of `AnimatePresence` for the `exit` animation(s) it contains to trigger.\n\n```\n\nconst Item = () => (\n  <div>\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    />\n  </div>\n)\n\n/**\n * The component being removed must be a direct\n * descendant of AnimatePresence due to limitations\n * with React.\n */\nexport const MyComponent = ({ items }) => (\n  <AnimatePresence>\n    {items.map(({ id }) => (\n      <Item key={id} />\n    ))}\n  </AnimatePresence>\n)\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/animate-presence/\\#props) Props\n\n#### [\\#](https://www.framer.com/motion/animate-presence/\\#\\#\\#initial) initial:boolean\n\nBy passing `initial={false}`, `AnimatePresence` will disable any initial animations on children that are present when the component is first rendered.\n\n```\n\n<AnimatePresence initial={false}>\n  {isVisible && (\n    <motion.div\n      key=\"modal\"\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    />\n  )}\n</AnimatePresence>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/animate-presence/\\#\\#\\#custom) custom:any\n\nWhen a component is removed, there's no longer a chance to update its props. So if a component's `exit` prop is defined as a dynamic variant and you want to pass a new `custom` prop, you can do so via `AnimatePresence`. This will ensure all leaving components animate using the latest data.\n\n#### [\\#](https://www.framer.com/motion/animate-presence/\\#\\#\\#mode) mode:\"sync\" \\| \"wait\" \\| \"popLayout\"\n\nDecides how AnimatePresence handles entering and exiting children.\n\n- `\"sync\"`: **(Default)** Children animate in/out as soon as they're added/removed.\n- `\"wait\"`: The entering child will wait until the exiting child has animated out. **Note:** Currently only renders a single child at a time.\n\nFramer Motion: AnimatePresence, wait mode - CodeSandbox\n\nCodeSandbox\n\n# Framer Motion: AnimatePresence, wait mode\n\n![](https://avatars1.githubusercontent.com/u/7850794?v=4)mattgperry\n\n2.1M\n\n4\n\n449\n\n[Edit Sandbox](https://codesandbox.io/p/sandbox/framer-motion-animatepresence-wait-mode-t0mnhu?from-embed)\n\nFiles\n\n.codesandbox\n\npublic\n\nsrc\n\ntemplate\n\nApp.tsx\n\nindex.tsx\n\nstyles.css\n\npackage.json\n\ntsconfig.json\n\nDependencies\n\n[framer-motion](https://codesandbox.io/examples/package/framer-motion) 11.3.23\n\n[gsap](https://codesandbox.io/examples/package/gsap) 3.11.3\n\n[react](https://codesandbox.io/examples/package/react) 18.0.0\n\n[react-dom](https://codesandbox.io/examples/package/react-dom) 18.0.0\n\n[react-scripts](https://codesandbox.io/examples/package/react-scripts) 4.0.3\n\n[Open Sandbox](https://codesandbox.io/p/sandbox/framer-motion-animatepresence-wait-mode-t0mnhu?from-embed)\n\nApp.tsx\n\n```\nimport { AnimatePresence, motion, usePresence } from \"framer-motion\";\n```\n\n[iframe](cid:frame-5FB8E40504E39E596ECF25DA86979607@mhtml.blink)\n\n- `\"popLayout\"`: Exiting children will be \"popped\" out of the page layout. This allows surrounding elements to move to their new layout immediately.\n\nFramer Motion: AnimatePresence, popLayout mode - CodeSandbox\n\nCodeSandbox\n\n# Framer Motion: AnimatePresence, popLayout mode\n\n![](https://avatars1.githubusercontent.com/u/7850794?v=4)mattgperry\n\n2.0M\n\n11\n\n1.2k\n\n[Edit Sandbox](https://codesandbox.io/p/sandbox/framer-motion-animatepresence-poplayout-mode-t7qxhv?from-embed)\n\nFiles\n\n.codesandbox\n\npublic\n\nsrc\n\ntemplate\n\nApp.tsx\n\nInput.tsx\n\narray.ts\n\nindex.tsx\n\nstyles.css\n\npackage.json\n\ntsconfig.json\n\nDependencies\n\n[framer-motion](https://codesandbox.io/examples/package/framer-motion) 7.8.1\n\n[react](https://codesandbox.io/examples/package/react) 18.0.0\n\n[react-dom](https://codesandbox.io/examples/package/react-dom) 18.0.0\n\n[react-scripts](https://codesandbox.io/examples/package/react-scripts) 4.0.3\n\n[Open Sandbox](https://codesandbox.io/p/sandbox/framer-motion-animatepresence-poplayout-mode-t7qxhv?from-embed)\n\nApp.tsx\n\n```\n            onChange={(e) => setPopLayout(e.currentTarget.checked)}\n```\n\n[iframe](cid:frame-FB779F6B48B18CE3466671E8B2539EB1@mhtml.blink)\n\n**Custom component note:** When using `popLayout` mode, any immediate child of AnimatePresence that's a custom component **must** be wrapped in React's `forwardRef` function, forwarding the provided `ref` to the DOM node you wish to pop out of the layout.\n\n#### [\\#](https://www.framer.com/motion/animate-presence/\\#\\#\\#onexitcomplete) onExitComplete():void\n\nFires when all exiting nodes have completed animating out.\n\n## [\\#](https://www.framer.com/motion/animate-presence/\\#usepresence) usePresence\n\n#### [\\#](https://www.framer.com/motion/animate-presence/\\#\\#\\#usepresence) usePresence():AlwaysPresent \\| Present \\| NotPresent\n\nWhen a component is the child of `AnimatePresence`, it can use `usePresence` to access information about whether it's still present in the React tree.\n\nIf `isPresent` is `false`, it means that a component has been removed the tree, but `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n\n```\n\nimport { usePresence } from \"framer-motion\"\n\nexport const Component = () => {\n  const [isPresent, safeToRemove] = usePresence()\n\n  useEffect(() => {\n    !isPresent && setTimeout(safeToRemove, 1000)\n  }, [isPresent])\n\n  return <div />\n}\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/animate-presence/\\#useispresent) useIsPresent\n\n#### [\\#](https://www.framer.com/motion/animate-presence/\\#\\#\\#useispresent) useIsPresent():boolean\n\nSimilar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present. There is no `safeToRemove` function.\n\n```\n\nimport { useIsPresent } from \"framer-motion\"\n\nexport const Component = () => {\n  const isPresent = useIsPresent()\n\n  useEffect(() => {\n    !isPresent && console.log(\"I've been removed!\")\n  }, [isPresent])\n\n  return <div />\n}\n```\n\nCopy\n\n[PreviousMotion components](https://www.framer.com/motion/component/) [NextLayoutGroup](https://www.framer.com/motion/layout-group/)\n\n##### On this page\n\n- [Usage](https://www.framer.com/motion/animate-presence/#usage)\n- [Exit animations](https://www.framer.com/motion/animate-presence/##exit-animations)\n- [Multiple children](https://www.framer.com/motion/animate-presence/##multiple-children)\n- [Suppressing initial animations](https://www.framer.com/motion/animate-presence/##suppressing-initial-animations)\n- [Animating custom components](https://www.framer.com/motion/animate-presence/##animating-custom-components)\n- [Props](https://www.framer.com/motion/animate-presence/#props)\n- [usePresence](https://www.framer.com/motion/animate-presence/#usepresence)\n- [useIsPresent](https://www.framer.com/motion/animate-presence/#useispresent)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).\n\n![](https://t.co/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=c4268c63-730e-4500-a819-c528d69b2c88&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=4b70123c-187f-4b36-90fd-0c26e0d844a3&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fanimate-presence%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)td.doubleclick.net\n\n# td.doubleclick.net is blocked\n\nThis page has been blocked by an extension\n\n- Try disabling your extensions.\n\nERR\\_BLOCKED\\_BY\\_CLIENT\n\nnull\n\nReload\n\nThis page has been blocked by an extension\n\n![](<Base64-Image-Removed>)![](<Base64-Image-Removed>)![](https://analytics.twitter.com/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=c4268c63-730e-4500-a819-c528d69b2c88&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=4b70123c-187f-4b36-90fd-0c26e0d844a3&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fanimate-presence%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)",
    "metadata": {
      "url": "https://www.framer.com/motion/animate-presence/",
      "ogUrl": "https://www.framer.com/motion/animate-presence/",
      "title": "AnimatePresence | Framer for Developers",
      "og:url": "https://www.framer.com/motion/animate-presence/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "AnimatePresence | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "AnimatePresence | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/animate-presence/",
      "statusCode": 200,
      "description": "Animate components when they're removed from the React tree.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Animate components when they're removed from the React tree.",
      "twitter:title": "AnimatePresence | Framer for Developers",
      "og:description": "Animate components when they're removed from the React tree.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Animate components when they're removed from the React tree.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# Examples\n\nSimple examples for animation, gestures, components, transforms and more.\n\n## [\\#](https://www.framer.com/motion/examples/\\#animation) Animation\n\nThe `animate` prop can accept an object of values. When one of them changes, the `motion` component will automatically animate to the new state.\n\nThe animation used can be configured using the `transition` prop.\n\n```\n\nimport { motion } from \"framer-motion\"\n\nexport const MyComponent = () => (\n  <motion.div\n    initial={{ opacity: 0, scale: 0.5 }}\n    animate={{ opacity: 1, scale: 1 }}\n    transition={{ duration: 0.5 }}\n  />\n)\n```\n\nCopy\n\nFramer Motion: Enter animation - CodeSandbox\n\n[Learn more](https://www.framer.com/docs/animation/#simple-animations)\n\n## [\\#](https://www.framer.com/motion/examples/\\#keyframes) Keyframes\n\nSet a value as an array and Motion will animate through each of these values in turn.\n\nBy default, each keyframe will be spaced evenly throughout the animation, but the exact timing and easing can be configured via the `transition` property.\n\n```\n\nimport { motion } from \"framer-motion\"\n\nexport const MyComponent = () => (\n  <motion.div\n    animate={{\n      scale: [1, 2, 2, 1, 1],\n      rotate: [0, 0, 270, 270, 0],\n      borderRadius: [\"20%\", \"20%\", \"50%\", \"50%\", \"20%\"],\n    }}\n  />\n)\n```\n\nCopy\n\nFramer Motion: Keyframes - CodeSandbox\n\n[Learn more](https://www.framer.com/docs/animation/##keyframes)\n\n## [\\#](https://www.framer.com/motion/examples/\\#variants) Variants\n\nVariants are pre-defined visual states that a component can be in. By giving a component and its children `variants` with matching names, whole React trees can be animated by changing a single prop.\n\nBy using variants, a parent can easily orchestrate the animations of its children with special `transition` props like `staggerChildren`.\n\nVariants can also be dynamic functions that return different props based on data passed to each component's `custom` prop.\n\n```\n\nimport { motion } from \"framer-motion\"\n\nconst variants = {\n  open: { opacity: 1, x: 0 },\n  closed: { opacity: 0, x: \"-100%\" },\n}\n\nexport const MyComponent = () => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  return (\n    <motion.nav\n      animate={isOpen ? \"open\" : \"closed\"}\n      variants={variants}\n    >\n      <Toggle onClick={() => setIsOpen(isOpen => !isOpen)} />\n      <Items />\n    </motion.nav>\n  )\n}\n```\n\nCopy\n\nFramer Motion: Side menu - CodeSandbox\n\n[Learn more](https://www.framer.com/docs/animation/#variants)\n\n## [\\#](https://www.framer.com/motion/examples/\\#gesture-animations) Gesture animations\n\nMotion provides `whileHover`, `whileTap`, `whileDrag` and `whileFocus` helper props, that will temporarily animate a component to a visual state while a gesture is active.\n\nLike `animate`, these can either be set as an object of properties (each with their own `transition` prop), or the name of a variant.\n\nMotion will also automatically handle the interplay of the two gestures, so if a component is being pressed while a hover gestures starts/stops, the `whileTap` gesture will take priority.\n\n```\n\nimport { motion } from \"framer-motion\"\n\nexport const MyComponent = () => (\n  <motion.button\n    whileHover={{ scale: 1.1 }}\n    whileTap={{ scale: 0.9 }}\n  />\n)\n```\n\nCopy\n\nFramer Motion: Gesture animations - CodeSandbox\n\n[Learn more](https://www.framer.com/docs/gestures/)\n\n## [\\#](https://www.framer.com/motion/examples/\\#drag) Drag\n\nA [component can be made draggable](https://www.framer.com/examples/drag-handle/) with the addition of the `drag` prop. Lock it to either axis by setting `drag` to `\"x\"` or `\"y\"`.\n\nThe component can be constrained to a specific range, defined either in pixels, or by providing a `ref` to another DOM element.\n\nThese constraints are elastic, and the strength of this elasticity can be configured with the `dragElastic` prop.\n\n```\n\nimport { motion } from \"framer-motion\"\n\nexport const MyComponent = () => (\n  <motion.div\n    drag\n    dragConstraints={{\n      top: -50,\n      left: -50,\n      right: 50,\n      bottom: 50,\n    }}\n  />\n)\n```\n\nCopy\n\nFramer Motion: Drag with constraints - CodeSandbox\n\n[Learn more](https://www.framer.com/docs/gestures/#drag)\n\n## [\\#](https://www.framer.com/motion/examples/\\#motionvalues) MotionValues\n\nMotion uses `MotionValue` s to track the state and velocity of every animating value.\n\nBy making `MotionValue` s yourself, you can create declarative chains of values that map from one into the other.\n\n```\n\nimport {\n  motion,\n  useMotionValue,\n  useTransform,\n} from \"framer-motion\"\n\nexport const MyComponent = () => {\n  const x = useMotionValue(0)\n  const background = useTransform(\n    x,\n    [-100, 0, 100],\n    [\"#ff008c\", \"#7700ff\", \"rgb(230, 255, 0)\"]\n  )\n\n  return (\n    <motion.div style={{ background }}>\n      <motion.div\n        drag=\"x\"\n        dragConstraints={{ left: 0, right: 0 }}\n        style={{ x }}\n      >\n        <Icon x={x} />\n      </motion.div>\n    </motion.div>\n  )\n}\n```\n\nCopy\n\nFramer Motion: Path drawing, drag and useTransform - CodeSandbox\n\n[Learn more](https://www.framer.com/docs/motionvalue/)\n\n## [\\#](https://www.framer.com/motion/examples/\\#scroll-triggered-animations) Scroll-triggered animations\n\nMotion also provides a `whileInView` prop that defines a visual state to animate to while a component is in the viewport.\n\n```\n\n<motion.div\n  initial={{ opacity: 0 }}\n  whileInView={{ opacity: 1 }}\n  viewport={{ once: true }}\n/>\n```\n\nCopy\n\n[Learn more](https://www.framer.com/docs/scroll-animations/#scroll-triggered-animations)\n\n## [\\#](https://www.framer.com/motion/examples/\\#scroll-linked-animations) Scroll-linked animations\n\nThe `useScroll` hook provides four read-only `MotionValue` s, two that return the viewport's x/y scroll position in pixels, and two that return it as progress value between `0` and `1`.\n\nYou can use these `MotionValue` s to declaratively drive features like progress indicators or parallax effects.\n\n```\n\nimport { motion, useScroll } from \"framer-motion\"\n\nexport const CircleIndicator = () => {\n  const { scrollYProgress } = useScroll()\n\n  return (\n    <motion.path\n      d=\"M 0, 20 a 20, 20 0 1,0 40,0 a 20, 20 0 1,0 -40,0\"\n      style={{ pathLength: scrollYProgress }}\n    />\n  )\n}\n```\n\nCopy\n\n[Learn more](https://www.framer.com/docs/scroll-animations/#scroll-linked-animations)\n\n## [\\#](https://www.framer.com/motion/examples/\\#exit-animations) Exit animations\n\nIn React, it's usually difficult to animate components once they've been removed from the DOM.\n\nBy wrapping `motion` components with `AnimatePresence`, they gain the use of an `exit` property that can define either a set of values or a variant name to animate to before being removed.\n\n```\n\nimport { motion, AnimatePresence } from \"framer-motion\"\n\nexport const Slideshow = ({ image }) => (\n  <AnimatePresence>\n    <motion.img\n      key={image.src}\n      src={image.src}\n      initial={{ opacity: 0, y: 200 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    />\n  </AnimatePresence>\n)\n```\n\nCopy\n\n[Learn more](https://www.framer.com/docs/animate-presence/)\n\n## [\\#](https://www.framer.com/motion/examples/\\#layout-animations) Layout animations\n\nTo automatically animate the layout of a `motion` component when its size or position changes, give it a `layout` prop.\n\n```\n\n<motion.div layout />\n```\n\nCopy\n\nIt doesn't matter what causes the layout change, whether it's a parent flexbox direction, width, top/right etc, the animation itself will be performed with transforms for maximum performance.\n\n[Learn more](https://www.framer.com/docs/layout-animations/)\n\n## [\\#](https://www.framer.com/motion/examples/\\#shared-layout-animations) Shared layout animations\n\nWhen a new `motion` component is added, it can be automatically animated from another one by giving them both the same `layoutId` prop.\n\n```\n\nisSelected ? <motion.div layoutId=\"underline\" /> : null\n```\n\nCopy\n\n[Learn more](https://www.framer.com/docs/layout-animations/#shared-layout-animations)\n\n## [\\#](https://www.framer.com/motion/examples/\\#line-drawing) Line drawing\n\nLine drawing animations are made simple with the special `pathLength`, `pathSpacing` and `pathOffset` properties available on many SVG elements.\n\n```\n\n<motion.circle\n  initial={{ pathLength: 0 }}\n  animate={{ pathLength: 1 }}\n/>\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/examples/\\#path-morphing) Path morphing\n\nWith the help of external libraries like [Flubber](https://github.com/veltman/flubber), it's possible to animate between very different SVG shapes.\n\n## [\\#](https://www.framer.com/motion/examples/\\#react-router-6-page-transitions) React Router 6 page transitions\n\nIt's possible to mix [React Router 6](https://reactrouter.com/) with [`AnimatePresence`](https://www.framer.com/docs/animate-presence/) to make these fade-in/fade-out page transitions:\n\nOr we can animate a privacy screen to hide the change of page:\n\n## [\\#](https://www.framer.com/motion/examples/\\#animating-gradients) Animating gradients\n\nFramer Motion can animate properties that CSS can't, like gradients. For instance here we're animating `mask-image` with a `repeating-linear-gradient` to create this image-reveal effect.\n\n## [\\#](https://www.framer.com/motion/examples/\\#more) More\n\n### [\\#](https://www.framer.com/motion/examples/\\#\\#ui-patterns) UI patterns\n\n- [Accordion](https://codesandbox.io/s/framer-motion-accordion-qx958)\n- [App Store-style card expansion](https://codesandbox.io/s/app-store-ui-using-react-and-framer-motion-ecgc2)\n- [Image slideshow](https://codesandbox.io/s/framer-motion-image-gallery-pqvx3)\n- [Notifications](https://codesandbox.io/s/framer-motion-notifications-5cvo9)\n\n### [\\#](https://www.framer.com/motion/examples/\\#\\#techniques) Techniques\n\n- [Directional stagger](https://codesandbox.io/s/framer-motion-directional-stagger-effect-grid-f127v)\n- [Imperative animations](https://codesandbox.io/s/framer-motion-spring-powered-characters-remaining-count-i1wgk)\n- [SVG filter](https://codesandbox.io/s/framer-motion-animated-duotone-o778w)\n- [SVG gradient](https://codesandbox.io/s/elastic-worker-z02ye)\n- [SVG path](https://codesandbox.io/s/framer-motion-svg-checkbox-kqm7y)\n\n### [\\#](https://www.framer.com/motion/examples/\\#\\#third-party-libraries) Third-party libraries\n\n- [Styled Components](https://codesandbox.io/s/framer-motion-simple-animation-o32p0?fontsize=14&module=%2Fsrc%2FExample.tsx)\n\n[PreviousIntroduction](https://www.framer.com/motion/introduction/) [NextAnimation](https://www.framer.com/motion/animation/)\n\n##### On this page\n\n- [Animation](https://www.framer.com/motion/examples/#animation)\n- [Keyframes](https://www.framer.com/motion/examples/#keyframes)\n- [Variants](https://www.framer.com/motion/examples/#variants)\n- [Gesture animations](https://www.framer.com/motion/examples/#gesture-animations)\n- [Drag](https://www.framer.com/motion/examples/#drag)\n- [MotionValues](https://www.framer.com/motion/examples/#motionvalues)\n- [Scroll-triggered animations](https://www.framer.com/motion/examples/#scroll-triggered-animations)\n- [Scroll-linked animations](https://www.framer.com/motion/examples/#scroll-linked-animations)\n- [Exit animations](https://www.framer.com/motion/examples/#exit-animations)\n- [Layout animations](https://www.framer.com/motion/examples/#layout-animations)\n- [Shared layout animations](https://www.framer.com/motion/examples/#shared-layout-animations)\n- [Line drawing](https://www.framer.com/motion/examples/#line-drawing)\n- [Path morphing](https://www.framer.com/motion/examples/#path-morphing)\n- [React Router 6 page transitions](https://www.framer.com/motion/examples/#react-router-6-page-transitions)\n- [Animating gradients](https://www.framer.com/motion/examples/#animating-gradients)\n- [More](https://www.framer.com/motion/examples/#more)\n- [UI patterns](https://www.framer.com/motion/examples/##ui-patterns)\n- [Techniques](https://www.framer.com/motion/examples/##techniques)\n- [Third-party libraries](https://www.framer.com/motion/examples/##third-party-libraries)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/examples/",
      "ogUrl": "https://www.framer.com/motion/examples/",
      "title": "Examples | Framer for Developers",
      "og:url": "https://www.framer.com/motion/examples/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "Examples | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "Examples | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/examples/",
      "statusCode": 200,
      "description": "Simple examples for animation, gestures, components, transforms and more.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Simple examples for animation, gestures, components, transforms and more.",
      "twitter:title": "Examples | Framer for Developers",
      "og:description": "Simple examples for animation, gestures, components, transforms and more.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Simple examples for animation, gestures, components, transforms and more.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# animate\n\nA function to manually start and control animations\n\n`animate()` is used to manually start and control animations. It will dynamically use [hardware-accelerated animations](https://www.framer.com/motion/animation/#hardware-accelerated-animations) for the best performance whenever possible.\n\nIt comes in two sizes, **mini**(2.5kb) and **hybrid**(18kb).\n\n### [\\#](https://www.framer.com/motion/animate-function/\\#\\#mini) Mini\n\nThe mini `animate` function can animate HTML and SVG styles. It's built on the Web Animations API (WAAPI) to deliver hardware accelerated animations for a tiny bundlesize.\n\n### [\\#](https://www.framer.com/motion/animate-function/\\#\\#hybrid) Hybrid\n\nIn addition to running animations via WAAPI, the 17kb hybrid `animate` function also includes a powerful JavaScript engine capable of animating:\n\n- Independent transforms\n- More styles, like `mask-image` and gradients\n- CSS variables\n- SVG paths\n- Single values\n- Motion values\n- Animation sequences\n- Anything!\n\n## [\\#](https://www.framer.com/motion/animate-function/\\#usage) Usage\n\n### [\\#](https://www.framer.com/motion/animate-function/\\#\\#import) Import\n\nImport `animate` from `\"framer-motion\"`:\n\n```\n\n// Mini\nimport { animate } from \"framer-motion/dom/mini\"\n\n// Hybrid\nimport { animate } from \"framer-motion/dom\"\n```\n\nCopy\n\n**Note:** React users are recommended, in most instances, to use `animate` via [`useAnimate`](https://www.framer.com/motion/use-animate/) for composable animations scoped to your component.\n\n### [\\#](https://www.framer.com/motion/animate-function/\\#\\#animate-htmlsvg-elements) Animate HTML/SVG elements\n\n`animate` can accept element(s) and DOM selectors.\n\n```\n\n// Element(s)\nconst box = document.getElementById(\"box\")\n\nanimate(box, { opacity: 0 }, { duration: 0.5 })\n\n// Selectors\nanimate(\"div\", { x: [0, 100] }, { type: \"spring\" })\n```\n\nCopy\n\nWhen possible, animations on DOM elements will be [hardware accelerated](https://www.framer.com/motion/animation/#hardware-accelerated-animations).\n\n### [\\#](https://www.framer.com/motion/animate-function/\\#\\#animate-a-single-value) Animate a single value\n\nBy passing a `to` and `from` value, `animate` will output the latest values to the provided `onUpdate` callback.\n\n```\n\n// Numbers\nanimate(0, 100, {\n  onUpdate: latest => console.log(latest)\n})\n\n// Colors etc\nanimate(\"#fff\", \"#000\", {\n  duration: 2\n  onUpdate: latest => console.log(latest)\n})\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/animate-function/\\#\\#animate-a-motionvalue) Animate a `MotionValue`\n\nBy passing `animate` a `MotionValue`, it'll be automatically updated with the latest values.\n\n```\n\nconst x = motionValue(0)\n\nanimate(x, 200, { duration: 0.5 })\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/animate-function/\\#\\#objects) Objects\n\nObjects can be animated much in the same way as HTML & SVG elements.\n\nAny object can be animated, for instance an `Object3D` from Three.js:\n\n```\n\nconst values = {\n  x: 100,\n  color: \"#f00\"\n}\n\nanimate(values, { x: 200, color: \"#00f\" })\n```\n\nCopy\n\nAny object can be animated, for instance an `Object3D` from Three.js:\n\n```\n\nconst camera = new THREE.Camera()\n\nanimate(camera.rotation, { y: 360 }, { duration: 10 })\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/animate-function/\\#\\#animate-sequences) Animate sequences\n\nThe hybrid `animate` can also accept complex animation sequences.\n\n```\n\nconst sequence = []\n\nanimate(sequence)\n```\n\nCopy\n\nFramer Motion: Sequencing - CodeSandbox\n\nA **sequence** is an array of DOM and/or [`MotionValue`](https://www.framer.com/motion/motionvalue/) `animate` definitions.\n\n```\n\nconst progress = useMotionValue(0)\n\nconst sequence = [\\\n  [\"ul\", { opacity: 1 }, { duration: 0.5 }],\\\n  [progress, 100, { ease: \"easeInOut\" }]\\\n]\n```\n\nCopy\n\nEach definition will, by default, play one after the other.\n\n```\n\nconst sequence = [\\\n  [\"ul\", { opacity: 1 }, { duration: 0.5 }],\\\n  [\"li\", { x: [-100, 0] }, { delay: stagger(0.1) }]\\\n]\n```\n\nCopy\n\nIt's possible to change when a segment will play by passing [an `at` option](https://www.framer.com/motion/animate-function/###at), which can be either an absolute time, relative time, or label.\n\n```\n\nconst sequence = [\\\n  [\"ul\", { opacity: 1 }],\\\n  [\"li\", { x: [-100, 0] }, { at: 1 }]\\\n]\n```\n\nCopy\n\nEach segment can accept all Framer Motion [transition options](https://www.framer.com/motion/transition/) to control the duration and other animation settings of that segment.\n\n```\n\nconst sequence = [\\\n  [\"ul\", { opacity: 1 }, { duration: 1 }]\\\n]\n```\n\nCopy\n\nBoth `type: \"keyframes\"` and `type: \"spring\"` transitions are supported.\n\nIt's also possible to override transitions on a per-value basis.\n\n```\n\nconst sequence = [\\\n  [\\\n    \"ul\",\\\n    { opacity: 1, x: 100 },\\\n    { duration: 1, x: { duration: 2 }}\\\n   ]\\\n]\n```\n\nCopy\n\nSequence durations are automatically calculated, but it's possible to pass animation options to change playback:\n\n```\n\nanimate(sequence, { duration: 10 })\n```\n\nCopy\n\nAny value supported by `animate` can be animated in sequences, mixing HTML & SVGs, motion values and objects in the same animation:\n\n```\n\nconst color = motionValue(\"rgba(255, 0, 0, 1)\")\nconst box = new THREE.BoxGeometry()\n\nconst sequence = [\\\n  [\"li\", { x: 100 }],\\\n  [box.position, { y: 10 }],\\\n  [color, \"#444\"]\\\n]\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/animate-function/\\#stagger) Stagger\n\nWhen animating more than one element, it's possible to stagger animations by passing the [`stagger`](https://www.framer.com/motion/stagger/) function to `delay`.\n\n```\n\nimport { stagger, animate } from \"framer-motion\"\n\nanimate(\".item\", { x: 300 }, { delay: stagger(0.1) })\n```\n\nCopy\n\nFramer Motion: stagger() - CodeSandbox\n\n## [\\#](https://www.framer.com/motion/animate-function/\\#options) Options\n\n`animate()` supports all of Framer Motion's [transition options](https://www.framer.com/docs/transition/).\n\nAdditionally, it accepts these options:\n\n#### [\\#](https://www.framer.com/motion/animate-function/\\#\\#\\#type) type:string \\| spring\n\n`type` decides the type of animation to use.\n\n**Mini** `animate` can either animate with the default keyframes animation, or explicitly import `spring` from Framer Motion.\n\n```\n\nimport { animate } from \"framer-motion/dom/mini\"\nimport { spring } from \"framer-motion/dom\"\n\nanimate(\n  element,\n  { transform: \"translateX(100px)\" },\n  { type: spring, stiffness: 300 }\n)\n```\n\nCopy\n\n**Hybrid** `animate` has all animation types built-in, and can be set to `\"tween\"`, `\"spring\"` or `\"inertia\"`.\n\n**Tween** animations are set with a duration and an easing curve.\n\n**Spring** animations are either physics-based or duration-based.\n\nPhysics-based spring animations are set via `stiffness`, `damping` and `mass`, and these incorporate the velocity of any existing gestures or animations for natural feedback.\n\nDuration-based spring animations are set via a `duration` and `bounce`. These don't incorporate velocity but are easier to understand.\n\n```\n\nimport { animate } from \"framer-motion/dom\"\n\nanimate(\n  element,\n  { transform: \"translateX(100px)\" },\n  { type: \"spring\", stiffness: 300 }\n)\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/animate-function/\\#\\#\\#at) at:string \\| number\n\n**Note:** Animation sequences only.\n\n```\n\nconst sequence = [\\\n  [\"ul\", { opacity: 1 }],\\\n  [\"li\", { x: [-100, 0] }, { at: 1 }]\\\n]\n```\n\nCopy\n\nBy default, animation definitions within a sequence will play one after the other. By passing `at` to a definition's options, this behaviour can be changed.\n\nPass a number to define a specific time:\n\n```\n\nconst sequence = [\\\n  [\"nav\", { opacity: 1 }],\\\n  // This will start 0.5 from the start of the whole timeline:\\\n  [\"nav\", { x: 100 }, { at: 0.5 }],\\\n]\n```\n\nCopy\n\nPass a string starting with `+` or `-` to start relative to the end of the previous animation:\n\n```\n\nconst sequence = [\\\n  [\"nav\", { opacity: 1 }],\\\n  // This will start 0.5 seconds after the previous animation:\\\n  [\"nav\", { x: 100 }, { at: \"+0.5\" }],\\\n  // This will start 0.2 seconds before the end of the previous animation:\\\n  [\"nav li\", { opacity: 1 }, { at: \"-0.2\" }],\\\n]\n```\n\nCopy\n\nPass `\"<\"` to start at the same time as the previous segment:\n\n```\n\nconst sequence = [\\\n  [\"nav\", { x: 100 }, { duration: 1 }],\\\n  // This will start at the same time as the x: 100 animation\\\n  [\"li\", { opacity: 1 }, { at: \"<\" }],\\\n]\n```\n\nCopy\n\nOr pass a label name to start at the same point as the original label definition:\n\n```\n\nconst sequence = [\\\n  [\"nav\", { x: 100 }, { duration: 1 }],\\\n  \"my-label\",\\\n  [\"li\", { opacity: 1 }],\\\n  // my-label was defined at 1 second\\\n  [\"a\", { scale: 1.2 }, { at: \"my-label\" }],\\\n]\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/animate-function/\\#\\#\\#onupdate) onUpdate:(latest) => void\n\n**Note:** For single value and `MotionValue` animations only.\n\nA function that's provided the latest animation values.\n\n```\n\nanimate(\"#fff\", \"#000\", {\n  duration: 2\n  onUpdate: latest => console.log(latest)\n})\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/animate-function/\\#controls) Controls\n\n`animate()` returns the following animation controls:\n\n#### [\\#](https://www.framer.com/motion/animate-function/\\#\\#\\#duration) duration:number\n\nReturns the duration of the animation.\n\nThis is the duration of a single iteration of the animation, without delay or repeat options.\n\n```\n\nconst animation = animate(x, 100, { duration: 1, repeat: 2 })\n\nconst { duration } = animation // 1\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/animate-function/\\#\\#\\#time) time:number\n\nGets and sets the current time of the animation.\n\n```\n\nconst animation = animate(x, 100, { duration: 1 })\n\n// Set animation time to 0.5 seconds\nanimation.time = 0.5\n\n// Get animation time\nconsole.log(animation.time) // 0.5\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/animate-function/\\#\\#\\#then) then():Promise\n\nProvide a function to run when the animation is finished.\n\nThis allows the `animation` to be `await` ed.\n\n```\n\nconst animation = animate(0, 100)\n\n// Callback\nanimation.then(() => {\n  console.log(\"Animation complete!\")\n})\n\n// Async\nawait animation\nconsole.log(\"Animation complete!\")\n```\n\nCopy\n\n**Note:** When an animation finishes, a new `Promise` is created. If the animation is then replayed via the `play()` method, any old callbacks won't fire again.\n\n#### [\\#](https://www.framer.com/motion/animate-function/\\#\\#\\#pause) pause():void\n\nPause an animation.\n\n```\n\nanimation.pause()\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/animate-function/\\#\\#\\#play) play():void\n\nPlay an animation.\n\n- If the animation is **paused**, it will resume from its current `time`.\n- If the animation has **finished**, the animation will restart.\n\n```\n\nanimation.pause()\n\n// Will resume from 1 second\nanimation.time = 1\nanimation.play()\n\n// Will play from start\nawait animation\nanimation.play()\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/animate-function/\\#\\#\\#stop) stop():void\n\nStops the animation.\n\nAny values being animated via the Web Animations API will be committed to the element via `style`.\n\nStopped animations cannot be restarted.\n\n```\n\nanimation.stop()\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/animate-function/\\#\\#\\#complete) complete():void\n\nImmediately completes the animation, running it to the end state.\n\n```\n\nanimation.complete()\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/animate-function/\\#\\#\\#cancel) cancel():void\n\nCancels the animation, running it to the initial state.\n\n```\n\nanimation.cancel()\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/animate-function/\\#\\#\\#speed) speed:number\n\nGets and sets the playback speed of the animation.\n\n```\n\n// Normal speed\nanimation.speed = 1\n\n// Half speed\nanimation.speed = 0.5\n\n// Double speed\nanimation.speed = 2\n\n// Reverse\nanimation.speed = -1\n```\n\nCopy\n\n[PrevioususeReducedMotion](https://www.framer.com/motion/use-reduced-motion/) [Nextscroll](https://www.framer.com/motion/scroll-function/)\n\n##### On this page\n\n- [Mini](https://www.framer.com/motion/animate-function/##mini)\n- [Hybrid](https://www.framer.com/motion/animate-function/##hybrid)\n- [Usage](https://www.framer.com/motion/animate-function/#usage)\n- [Import](https://www.framer.com/motion/animate-function/##import)\n- [Animate HTML/SVG elements](https://www.framer.com/motion/animate-function/##animate-htmlsvg-elements)\n- [Animate a single value](https://www.framer.com/motion/animate-function/##animate-a-single-value)\n- [Animate a MotionValue](https://www.framer.com/motion/animate-function/##animate-a-motionvalue)\n- [Objects](https://www.framer.com/motion/animate-function/##objects)\n- [Animate sequences](https://www.framer.com/motion/animate-function/##animate-sequences)\n- [Stagger](https://www.framer.com/motion/animate-function/#stagger)\n- [Options](https://www.framer.com/motion/animate-function/#options)\n- [Controls](https://www.framer.com/motion/animate-function/#controls)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/animate-function/",
      "ogUrl": "https://www.framer.com/motion/animate-function/",
      "title": "animate | Framer for Developers",
      "og:url": "https://www.framer.com/motion/animate-function/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "animate | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "animate | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/animate-function/",
      "statusCode": 200,
      "description": "A function to manually start and control animations",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "A function to manually start and control animations",
      "twitter:title": "animate | Framer for Developers",
      "og:description": "A function to manually start and control animations",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "A function to manually start and control animations",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# useSpring\n\nA motion value that animates to its target with a spring.\n\nuseSpring creates a [motion value](https://www.framer.com/docs/motionvalue/) that will animate to its latest target with a spring animation. The target can either be set manually, via `.set`, or automatically, by passing in another motion value.\n\n## [\\#](https://www.framer.com/motion/use-spring/\\#usage) Usage\n\nImport from Framer Motion.\n\n```\n\nimport { useSpring } from \"framer-motion\"\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/use-spring/\\#\\#create) Create\n\n`useSpring` can be initialised with a number:\n\n```\n\nconst spring = useSpring(0)\n```\n\nCopy\n\nOr by passing a **numerical** motion value:\n\n```\n\nconst x = useMotionValue(0)\nconst spring = useSpring(x)\n```\n\nCopy\n\nBy passing a motion value, the returned spring will automatically animate to the latest value of that motion value.\n\nBy passing a number, the spring will animate to the latest value passed to `set`.\n\n```\n\nconst x = useSpring(0)\n\nuseEffect(() => {\n  x.set(target)\n}, [target])\n\nreturn <motion.div style={{ x }} />\n```\n\nCopy\n\n**Note:** As a side effect, motion values should only ever be set asynchronously from the main render function, for instance within an effect or event handler.\n\n### [\\#](https://www.framer.com/motion/use-spring/\\#\\#config) Config\n\n`useSpring` can be configured with the [normal spring transition options](https://www.framer.com/docs/transition/#spring).\n\n```\n\nuseSpring(x, { stiffness: 1000, damping: 10 })\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/use-spring/\\#examples) Examples\n\nDrag any of these balls:\n\nFramer Motion: useSpring example - CodeSandbox\n\n[PrevioususeScroll](https://www.framer.com/motion/use-scroll/) [NextuseTime](https://www.framer.com/motion/use-time/)\n\n##### On this page\n\n- [Usage](https://www.framer.com/motion/use-spring/#usage)\n- [Create](https://www.framer.com/motion/use-spring/##create)\n- [Config](https://www.framer.com/motion/use-spring/##config)\n- [Examples](https://www.framer.com/motion/use-spring/#examples)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).\n\n![](https://t.co/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=ca489f3e-f3f7-46b3-a9da-3a81e56380f1&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=e4b82bcf-fae6-4bb6-b242-2666a9bbcd11&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fuse-spring%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)td.doubleclick.net\n\n# td.doubleclick.net is blocked\n\nThis page has been blocked by an extension\n\n- Try disabling your extensions.\n\nERR\\_BLOCKED\\_BY\\_CLIENT\n\nnull\n\nReload\n\nThis page has been blocked by an extension\n\n![](<Base64-Image-Removed>)![](<Base64-Image-Removed>)![](https://analytics.twitter.com/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=ca489f3e-f3f7-46b3-a9da-3a81e56380f1&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=e4b82bcf-fae6-4bb6-b242-2666a9bbcd11&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fuse-spring%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)",
    "metadata": {
      "url": "https://www.framer.com/motion/use-spring/",
      "ogUrl": "https://www.framer.com/motion/use-spring/",
      "title": "useSpring | Framer for Developers",
      "og:url": "https://www.framer.com/motion/use-spring/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "useSpring | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "useSpring | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/use-spring/",
      "statusCode": 200,
      "description": "A motion value that animates to its target with a spring.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "A motion value that animates to its target with a spring.",
      "twitter:title": "useSpring | Framer for Developers",
      "og:description": "A motion value that animates to its target with a spring.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "A motion value that animates to its target with a spring.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# Layout animations\n\nCreate layout and shared layout animations with React and Framer Motion.\n\nCSS layouts are difficult and expensive to animate.\n\nAnimating a style like `height` between `100px` and `500px` is conceptually straightforward, but suffers from poor performance because we're triggering the browser layout systems every animation frame.\n\nSometimes it doesn't even make sense. What does it actually mean to animate `justify-content` between `flex-start` and `flex-end`?\n\nFramer Motion can animate between any CSS layout by using performant transforms instead of the layout system.\n\nFor example, this component is animated by switching `justify-content` between `flex-start` and `flex-end`.\n\nTo enable Framer Motion's layout animations, we simply set the `layout` prop of a `motion` component.\n\n```\n\n<motion.div layout />\n```\n\nCopy\n\nAny layout change that happens as the result of a re-render will be animated. That could be any combination of:\n\n- Reordering of a list.\n- A style set on the component itself, for example a change in `width` or `position`.\n- A change in the parent's layout, e.g. flexbox or grid.\n- Or any other change in the component's layout.\n\n### [\\#](https://www.framer.com/motion/layout-animations/\\#\\#scale-correction) Scale correction\n\nAll layout animations are performed using the `transform` property, resulting in smooth framerates.\n\nAnimating layout using transforms can sometimes visually distort children. To correct this distortion, the first child elements of the element can also be given `layout` property.\n\nTry switching this component between layouts, with and without setting `layout` on the pink dot:\n\nTransforms can also distort `boxShadow` and `borderRadius`. The `motion` component will automatically correct this distortion on both props, as long as they're set as motion values.\n\nIf you're not animating these values, the easiest way to do this is to set them via `style`.\n\n```\n\n<motion.div layout style={{ borderRadius: 20 }} />\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/layout-animations/\\#\\#customising-layout-animations) Customising layout animations\n\nLayout animations can be customised using the `transition` property.\n\n```\n\n<motion.div layout transition={{ duration: 0.3 }} />\n```\n\nCopy\n\nIf you want to set a transition specifically for **only** the layout animation, you can specify a specific `layout` transition.\n\n```\n\n<motion.div\n  layout\n  animate={{ opacity: 0.5 }}\n  transition={{\n    opacity: { ease: \"linear\" },\n    layout: { duration: 0.3 }\n  }}\n/>\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/layout-animations/\\#\\#animating-within-scroll-containers) Animating within scroll containers\n\nTo animate layout correctly within scrollable elements, these elements must be given the `layoutScroll` prop.\n\n```\n\n<motion.div\n  layoutScroll\n  style={{ overflow: \"scroll\" }}\n/>\n```\n\nCopy\n\nThis lets Framer Motion account for this element's scroll offset when measuring children.\n\n### [\\#](https://www.framer.com/motion/layout-animations/\\#\\#coordinating-layout-animations) Coordinating layout animations\n\nLayout animations are triggered when a component re-renders and its layout has changed.\n\n```\n\nfunction Accordion() {\n  const [isOpen, setOpen] = useState(false)\n\n  return (\n    <motion.div\n      layout\n      style={{ height: isOpen ? \"100px\" : \"500px\" }}\n      onClick={() => setOpen(!isOpen)}\n    />\n  )\n}\n```\n\nCopy\n\nBut what happens when we have two or more components that don't re-render at the same time, but **do** affect each other's layout?\n\n```\n\nfunction List() {\n  return (\n    <>\n      <Accordion />\n      <Accordion />\n    </>\n  )\n}\n```\n\nCopy\n\nWhen one re-renders, the other won't be able to detect changes to its layout.\n\nWe can synchronise layout changes across multiple components by wrapping them in the [`LayoutGroup component`](https://www.framer.com/docs/layout-group/).\n\n```\n\nimport { LayoutGroup } from \"framer-motion\"\n\nfunction List() {\n  return (\n    <LayoutGroup>\n      <Accordion />\n      <Accordion />\n    </LayoutGroup>\n  )\n}\n```\n\nCopy\n\nNow, when layout changes are detected in one grouped component, layout animations will happen across all of them. Without any extra re-renders.\n\n## [\\#](https://www.framer.com/motion/layout-animations/\\#shared-layout-animations) Shared layout animations\n\nWhen a new component is added that has a `layoutId` prop that matches an existing component, it will automatically animate out from the old component.\n\n```\n\nisSelected && <motion.div layoutId=\"underline\" />\n```\n\nCopy\n\nIf the old component is still mounted when the new component enters, they will automatically crossfade from the old to the new.\n\n## [\\#](https://www.framer.com/motion/layout-animations/\\#troubleshooting) Troubleshooting\n\n#### [\\#](https://www.framer.com/motion/layout-animations/\\#\\#\\#the-component-isnt-animating) The component isn't animating\n\nEnsure the component is **not** set to `display: inline`, as browsers don't apply `transform` to these elements.\n\n#### [\\#](https://www.framer.com/motion/layout-animations/\\#\\#\\#svg-layout-animations-are-broken) SVG layout animations are broken\n\nSVG components aren't currently supported with layout animations. SVGs don't have layout systems so it's recommended to directly animate their attributes like `cx` etc.\n\n#### [\\#](https://www.framer.com/motion/layout-animations/\\#\\#\\#skew-transforms-arent-taking-effect) Skew transforms aren't taking effect\n\n`skew` transforms are not currently compatible with layout animations.\n\n#### [\\#](https://www.framer.com/motion/layout-animations/\\#\\#\\#the-content-stretches-undesirably) The content stretches undesirably\n\nThis is a natural side-effect of animating width and height with scale. Some elements, like those containing elements changing between different aspect ratios (commonly text elements), might be better animated with `layout=\"position\"`, which only animates the position of the element.\n\n#### [\\#](https://www.framer.com/motion/layout-animations/\\#\\#\\#border-radius-or-box-shadows-are-behaving-strangely) Border radius or box shadows are behaving strangely\n\nAnimating `scale` is performant but can distort some styles like `border-radius` and `box-shadow`.\n\nFramer Motion automatically corrects for this scale distortion but this correction is limited to `border-radius` defined as pixels or percent, and a single `box-shadow`.\n\n#### [\\#](https://www.framer.com/motion/layout-animations/\\#\\#\\#sticky-element-isnt-animating-as-expected) Sticky element isn't animating as expected\n\nElements with `position: sticky` are difficult to animate as they flip between two coordinate spaces (page-relative and viewport-relative) without any way of detecting which should be used.\n\nIf children of the `position: sticky` element are not animating as expected, it's possible to add `layout layoutRoot` props to the sticky element. This will perform all the layout calculations and an instant layout animation on the `sticky` element and all children will perform their layout animations relative to it.\n\n```\n\n<motion.header layout layoutRoot style={{ position: \"sticky\" }}>\n  <motion.h1 layout />\n</motion.header>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/layout-animations/\\#\\#\\#item-is-performing-unwanted-layout-animations-as-surrounding-content-changes) Item is performing unwanted layout animations as surrounding content changes\n\nBy adding `layout layoutRoot` to a parent, children will perform all layout animations relative to the parent. [See example](https://codesandbox.io/s/framer-motion-layoutroot-prop-gc4ckn?file=/src/App.js).\n\n```\n\n<motion.div className=\"switch-container\" layout layoutRoot>\n  <motion.div className=\"switch-handle\" layout />\n</motion.div>\n```\n\nCopy\n\n[PreviousAnimation](https://www.framer.com/motion/animation/) [NextGestures](https://www.framer.com/motion/gestures/)\n\n##### On this page\n\n- [Scale correction](https://www.framer.com/motion/layout-animations/##scale-correction)\n- [Customising layout animations](https://www.framer.com/motion/layout-animations/##customising-layout-animations)\n- [Animating within scroll containers](https://www.framer.com/motion/layout-animations/##animating-within-scroll-containers)\n- [Coordinating layout animations](https://www.framer.com/motion/layout-animations/##coordinating-layout-animations)\n- [Shared layout animations](https://www.framer.com/motion/layout-animations/#shared-layout-animations)\n- [Troubleshooting](https://www.framer.com/motion/layout-animations/#troubleshooting)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/layout-animations/",
      "ogUrl": "https://www.framer.com/motion/layout-animations/",
      "title": "Layout animations | Framer for Developers",
      "og:url": "https://www.framer.com/motion/layout-animations/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "Layout animations | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "Layout animations | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/layout-animations/",
      "statusCode": 200,
      "description": "Create layout and shared layout animations with React and Framer Motion.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Create layout and shared layout animations with React and Framer Motion.",
      "twitter:title": "Layout animations | Framer for Developers",
      "og:description": "Create layout and shared layout animations with React and Framer Motion.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Create layout and shared layout animations with React and Framer Motion.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# Upgrade guides\n\nHow to upgrade to the latest version of Framer Motion.\n\nWe try to keep breaking changes to a minimum. Code written for Framer Motion `1.0` is usually compatible with the latest version, and breaking changes are often very isolated.\n\nThe easiest way to upgrade is to start with the version you're currently on and follow the guide to the next major version, and so on, until you're at the latest version. Changes between major versions are usually very small so this should be a quick process in most cases.\n\n## [\\#](/motion/guide-upgrade/\\#110) 11.0\n\n### [\\#](/motion/guide-upgrade/\\#\\#velocity-calculation-changes) Velocity calculation changes\n\nIn previous versions, setting a `MotionValue` multiple times within the same animation frame would update the value's velocity:\n\n```\n\nconst x = motionValue(0)\n\nrequestAnimationFrame(() => {\n  x.set(100)\n  x.getVelocity() // Velocity of 0 -> 100\n  x.set(200)\n  x.getVelocity() // Velocity of 100 -> 200\n})\n```\n\nCopy\n\nThis behaviour is incorrect. Synchronous code, practically speaking for the purposes of animation, should be considered instantaneous. Therefore, in the above example, `x` was only `100` for a infinitely small amount of time. It essentially never happened.\n\nFrom version 11, subsequent value updates within synchronous blocks of code won't be considered part of a `MotionValue`'s velocity calculations. Therefore, if `getVelocity` is called after the second update, velocity will be calculated between the latest value and the value at the end of the previous frame.\n\n```\n\nconst x = motionValue(0)\n\nrequestAnimationFrame(() => {\n  x.set(100)\n  x.getVelocity() // Velocity of 0 -> 100\n  x.set(200)\n  x.getVelocity() // Velocity of 0 -> 200\n})\n```\n\nCopy\n\n### [\\#](/motion/guide-upgrade/\\#\\#render-scheduling-changes) Render scheduling changes\n\nIn previous versions, `motion` components trigger a render synchronously after mount to ensure dynamically-calculated values are updated on-screen. This process has now been moved to a [microtask](https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask).\n\nThis ensures that if a component is synchronously re-rendered by a `useLayoutEffect`, the first render is swallowed and we only apply the final one (the one that will be used on-screen).\n\nThis is better for performance and in most cases won't have practical ramifications for you as a developer. However, there is a caveat for Jest tests. Previously it could be assumed that updates would have applied synchronously.\n\n```\n\nrender(\n  <motion.div\n    initial={{ opacity: 0 }}\n    animate={{ opacity: 1 }}\n    transition={{ false }}\n  />\n)\n\nexpect(element).toHaveStyle(\"opacity: 1\")\n```\n\nCopy\n\nTests like this should be updated to await an animation frame.\n\n```\n\nrender(\n  <motion.div\n    initial={{ opacity: 0 }}\n    animate={{ opacity: 1 }}\n    transition={{ false }}\n  />\n)\n\nawait nextFrame()\n\nexpect(element).toHaveStyle(\"opacity: 1\")\n\n// utils.js\nimport { frame } from \"framer-motion\"\n\nexport async function nextFrame() {\n    return new Promise<void>((resolve) => {\n        frame.postRender(() => resolve())\n    })\n}\n```\n\nCopy\n\n## [\\#](/motion/guide-upgrade/\\#100) 10.0\n\n### [\\#](/motion/guide-upgrade/\\#\\#intersectionobserver-fallback) `IntersectionObserver` fallback\n\nThis version removes the `IntersectionObserver` fallback behaviour for `whileInView`.\n\n`IntersectionObserver` is supported by all modern browsers, representing over 99% of visitors to sites built in [Framer](https://framer.com). If you require support for legacy browsers like Internet Explorer or Safari 12, we recommend adding an `IntersectionObserver` polyfill.\n\n### [\\#](/motion/guide-upgrade/\\#\\#animatepresence-exitbeforeenter-prop) `AnimatePresence exitBeforeEnter` prop\n\nThis prop was deprecated in `7.2.0`. Usage will now throw an error with upgrade instructions (swap to `mode=\"wait\"`).\n\n## [\\#](/motion/guide-upgrade/\\#90) 9.0\n\nThis version makes **tap events keyboard-accessible**.\n\nAs a result, all elements with tap listeners or `whileTap` will receive `tabindex=\"0\"`. Reverting this behaviour is discouraged, but can be achieved by passing `tabIndex={-1}`.\n\nAdditionally, `whileFocus` now behaves like `:focus-visible` rather than `:focus`. Loosely, this means that elements receiving focus via pointer **won't trigger** focus animations, with the exception of input elements which will trigger focus from any input.\n\n## [\\#](/motion/guide-upgrade/\\#80) 8.0\n\nFramer Motion uses pointer events to detect tap, drag and hover gestures. In previous versions, these were polyfilled with mouse and touch events in legacy browsers. Version 8 removes this polyfill.\n\nAs a result, while [DragControls.start](/docs/use-drag-controls/) was always only documented to work with events from `onPointerDown`, it was **typed** to also accept `onMouseDown` and `onTouchStart` events. These will now throw a type error for TypeScript users and should be converted to `onPointerDown`.\n\n## [\\#](/motion/guide-upgrade/\\#70) 7.0\n\nFramer Motion 7 makes `react@18` the minimum supported version.\n\nFramer Motion 3D users should also [upgrade React Three Fiber](https://docs.pmnd.rs/react-three-fiber/tutorials/v8-migration-guide) to `^8.2.2`.\n\n## [\\#](/motion/guide-upgrade/\\#60) 6.0\n\nFramer Motion 3D now lives in the `framer-motion-3d` package. So to upgrade to `6.0` simply change imports from `\"framer-motion/three\"` to `\"framer-motion-3d\"`.\n\n## [\\#](/motion/guide-upgrade/\\#50) 5.0\n\n### [\\#](/motion/guide-upgrade/\\#\\#shared-layout-animations) Shared layout animations\n\nFramer Motion 5 removes the `AnimateSharedLayout` component.\n\nNow, you can use the `layoutId` prop and components will animate from one to another without the need for the `AnimateSharedLayout` wrapper.\n\n### [\\#](/motion/guide-upgrade/\\#\\#measuring-layout-changes) Measuring layout changes\n\nLayout changes are detected when a component with a `layout` or `layoutId` prop re-renders. But it isn't performant to measure **all** components when just **one** changes.\n\n`AnimateSharedLayout` could be used to group components that affected each other's layout. When one rerendered, `AnimateSharedLayout` would force them all to rerender.\n\nThis was not a performant approach because all grouped components would perform a re-render. Now, components that affect each other's layout can be grouped [with LayoutGroup](/docs/layout-group/):\n\n```\n\nimport { LayoutGroup, motion } from \"framer-motion\"\n\nexport function App() {\n  return (\n    <LayoutGroup>\n      <Submenu />\n      <Submenu />\n    </LayoutGroup>\n  )\n}\n\nfunction Submenu({ children }) {\n  const [isOpen, setIsOpen] = useState(false)\n\n  return (\n    <motion.ul\n      layout\n      style={{ height: isOpen ? \"auto\" : 40 }}\n    >\n      {children}\n    </motion.ul>\n  )\n}\n```\n\nCopy\n\nGrouped components will be measured whenever one of them renders, but they won't be forced to render themselves.\n\n### [\\#](/motion/guide-upgrade/\\#\\#scoped-layout-animations) Scoped layout animations\n\nPreviously, because `AnimateSharedLayout` was required, it would naturally scope shared layout animations. So animating between components with the same `layoutId` would only happen within the same `AnimateSharedLayout`:\n\n```\n\n/**\n * These items share the same layoutId but won't animate\n * between each other because they're children of different\n * AnimateSharedLayout components.\n */\n<AnimateSharedLayout>\n  {isVisible ? <motion.div layoutId=\"modal\" /> : null}\n</AnimateSharedLayout>\n<AnimateSharedLayout>\n  {isVisible ? <motion.div layoutId=\"modal\" /> : null}\n</AnimateSharedLayout>\n```\n\nCopy\n\nThis could lead to very poor performance. `AnimateSharedLayout` reduces layout thrashing within itself by batching layout measurements. But it had no way of batching between many `AnimateSharedLayout` components. The more you add, the more layout thrashing will occur.\n\nNow, there is one global tree throughout your app so all layout measurements are batched. But this means all `layoutId` s share the same global context. To bring back this old behaviour you can namespace `layoutId` by providing a `id` prop to `LayoutGroup`:\n\n```\n\n/**\n * These layoutIds are now namespaced with\n * the id provided to LayoutGroup.\n */\n<LayoutGroup id=\"a\">\n  {isVisible ? <motion.div layoutId=\"modal\" /> : null}\n</LayoutGroup>\n<LayoutGroup id=\"b\">\n {isVisible ? <motion.div layoutId=\"modal\" /> : null}\n</LayoutGroup>\n```\n\nCopy\n\n### [\\#](/motion/guide-upgrade/\\#\\#drag-to-reorder) Drag to reorder\n\nPrevious drag-to-reorder implementations were ad-hoc, usually adapted from an old proof-of-concept sandbox that relied on the (now removed) `onViewportBoxUpdate` prop. These solutions should be reimplemented with the [new Reorder components](/docs/reorder/).\n\n### [\\#](/motion/guide-upgrade/\\#\\#esm-and-create-react-app) ESM and `create-react-app`\n\nTo enable our new [Handshake](/developers/handshake/) features, that allow you to publish no-code components straight from Framer into production, we've moved Framer Motion to ESM modules. Some build environments like `create-react-app` might have some trouble mixing ES modules (like Framer Motion) and CJS modules (like React).\n\nTo fix, either upgrade to `create-react-app@next`, or downgrade to `framer-motion@4.1.17`.\n\n## [\\#](/motion/guide-upgrade/\\#40) 4.0\n\nFramer Motion 4 introduces a brand new `LazyMotion` component to help reduce bundle size.\n\nPreviously, a subset of `motion` functionality could be loaded in synchronously or asynchronously via `MotionConfig`'s `features` prop. This functionality has been removed in favour of the new `LazyMotion` component.\n\nCheck out the new reduce bundle size guide to find out how to use this new API.\n\n```\n\nimport { LazyMotion, domAnimation, m } from \"framer-motion\"\n\nexport const MyComponent = ({ isVisible }) => (\n  <LazyMotion features={domAnimation}>\n    <m.div animate={{ opacity: 1 }} />\n  </LazyMotion>\n)\n```\n\nCopy\n\n### [\\#](/motion/guide-upgrade/\\#\\#other-breaking-changes) Other breaking changes\n\n`4` also removes `motion.custom()`, which was previously deprecated in favour of `motion()`.\n\n`motion.custom()` had the default behaviour of forwarding all of Framer Motion's props to the underlying component. To replicate this, the `forwardMotionProps` option can be used.\n\n```\n\nconst MotionComponent = motion(Component, {\n    forwardMotionProps: true\n})\n```\n\nCopy\n\n## [\\#](/motion/guide-upgrade/\\#30) 3.0\n\nFramer Motion 3 is major release but the type of breaking change is very specific and very small. It's unlikely, though possible, to change the way your animations function.\n\n### [\\#](/motion/guide-upgrade/\\#\\#the-changing-behaviour) The changing behaviour\n\nMotion 3 features a centralisation of how animation states are computed.\n\nAll animation props are now ranked in terms of priority (left being lowest, right being highest).\n\nWhen one of those props changes, or becomes active/inactive, we will recompute the necessary animations. This is an extension and codification of a behaviour that was partially implemented only for the `while` props, leading to a more consistent and predictable experience.\n\n```\n\nconst priority = [\"animate\", \"while-\", \"exit\"]\n```\n\nCopy\n\n### [\\#](/motion/guide-upgrade/\\#\\#removing-animation-values) Removing animation values\n\n**Before**, if a value was outright removed from an animation prop, nothing would happen.\n\n**Now**, if a value is removed, we check for it in the next highest-priority animation state. For instance, if `opacity` is removed from `whileHover`, Motion will check for it in `animate` and animate to that.\n\nIf we don't find one in `animate`, it'll check in `style`, or fallback to its initially-recorded value (for instance if the value was initially read from the DOM because none was explicitly defined).\n\n## [\\#](/motion/guide-upgrade/\\#20) 2.0\n\nFramer Motion 2 is major release and that means there's API changes. In this guide we'll take a look at how you can upgrade your code to ensure it continues to work as expected, and highlight some features that will be broken in the new version of Motion.\n\n### [\\#](/motion/guide-upgrade/\\#\\#layout-animations) Layout animations\n\nFramer Motion 1 supported a couple of ways to perform layout animations, the `positionTransition` and `layoutTransition` props.\n\n```\n\n// Before\n<motion.div layoutTransition />\n```\n\nCopy\n\nIn Framer Motion 2, these have both been superseded by the `layout` prop.\n\n```\n\n// After\n<motion.div layout />\n```\n\nCopy\n\nBoth of the old props used to take a transition as an argument.\n\n```\n\n// Before\n<motion.div layoutTransition={{ duration: 2 }} />\n```\n\nCopy\n\nNow, layout animations use the same default `transition` prop as other animations.\n\n```\n\n// After\n<motion.div layout transition={{ duration: 2 }} />\n```\n\nCopy\n\nIn Framer Motion 1, layout animations could distort `borderRadius` and `boxShadow` properties on components that were changing size. This is now fixed if either property is animated.\n\n```\n\n<motion.div layout initial={{ borderRadius: 20 }} />\n```\n\nCopy\n\nLayout animations that changed size could also distort child components. This can now be corrected by providing them with a `layout` prop, too.\n\nOnly immediate children will need to be corrected for scale.\n\n```\n\n<motion.div layout>\n  <motion.div layout />\n</motion.div>\n```\n\nCopy\n\n### [\\#](/motion/guide-upgrade/\\#\\#breaking-changes) Breaking changes\n\nThere are some changes that don't have an immediate fix that you should be aware of before upgrading.\n\n#### [\\#](/motion/guide-upgrade/\\#\\#\\#drag) Drag\n\nDrag has been refactored to use the same layout projection rendering methodology that powers Motion 2's layout animations to ensure the two features are fully compatible with each other.\n\nThis has lead to some breaking changes:\n\n- Drag listeners (like `onDrag`) now report the `point` relative to the viewport, moving in line with other pointer gestures in Motion.\n- `dragOriginX` and `dragOriginY` have been removed. These were added to allow a hacky way to make `positionTransition` compatible with `drag`, but `layout` is compatible with `drag` by default.\n\n#### [\\#](/motion/guide-upgrade/\\#\\#\\#useanimatedstate) useAnimatedState\n\nThe `useAnimatedState` API was an experimental and undocumented API for use in Framer X. This has now been removed.\n\n[PreviousReduce bundle size](/motion/guide-reduce-bundle-size/)\n\n##### On this page\n\n- [11.0](/motion/guide-upgrade/#110)\n- [Velocity calculation changes](/motion/guide-upgrade/##velocity-calculation-changes)\n- [Render scheduling changes](/motion/guide-upgrade/##render-scheduling-changes)\n- [10.0](/motion/guide-upgrade/#100)\n- [IntersectionObserver fallback](/motion/guide-upgrade/##intersectionobserver-fallback)\n- [AnimatePresence exitBeforeEnter prop](/motion/guide-upgrade/##animatepresence-exitbeforeenter-prop)\n- [9.0](/motion/guide-upgrade/#90)\n- [8.0](/motion/guide-upgrade/#80)\n- [7.0](/motion/guide-upgrade/#70)\n- [6.0](/motion/guide-upgrade/#60)\n- [5.0](/motion/guide-upgrade/#50)\n- [Shared layout animations](/motion/guide-upgrade/##shared-layout-animations)\n- [Measuring layout changes](/motion/guide-upgrade/##measuring-layout-changes)\n- [Scoped layout animations](/motion/guide-upgrade/##scoped-layout-animations)\n- [Drag to reorder](/motion/guide-upgrade/##drag-to-reorder)\n- [ESM and create-react-app](/motion/guide-upgrade/##esm-and-create-react-app)\n- [4.0](/motion/guide-upgrade/#40)\n- [Other breaking changes](/motion/guide-upgrade/##other-breaking-changes)\n- [3.0](/motion/guide-upgrade/#30)\n- [The changing behaviour](/motion/guide-upgrade/##the-changing-behaviour)\n- [Removing animation values](/motion/guide-upgrade/##removing-animation-values)\n- [2.0](/motion/guide-upgrade/#20)\n- [Layout animations](/motion/guide-upgrade/##layout-animations)\n- [Breaking changes](/motion/guide-upgrade/##breaking-changes)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/guide-upgrade/",
      "ogUrl": "https://www.framer.com/motion/guide-upgrade/",
      "title": "Upgrade guides | Framer for Developers",
      "og:url": "https://www.framer.com/motion/guide-upgrade/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "Upgrade guides | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "Upgrade guides | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/guide-upgrade/",
      "statusCode": 200,
      "description": "How to upgrade to the latest version of Framer Motion.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "How to upgrade to the latest version of Framer Motion.",
      "twitter:title": "Upgrade guides | Framer for Developers",
      "og:description": "How to upgrade to the latest version of Framer Motion.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "How to upgrade to the latest version of Framer Motion.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# LayoutOrthographicCamera\n\nAn orthographic camera that integrates with Framer Motion's layout animations.\n\nFramer Motion's [layout animations](https://www.framer.com/docs/animation/#layout-animations) work via the `transform` style for the best possible performance. When HTML elements are transformed with a `scale`, they can become distorted.\n\nWith `LayoutOrthographicCamera`, we can pre-distort a 3D scene so that when the CSS `transform` is applied, it looks correct throughout the layout animation.\n\nFramer Motion 3D: LayoutOrthographicCamera - CodeSandbox\n\n## [\\#](https://www.framer.com/motion/layoutorthographiccamera/\\#usage) Usage\n\nTo implement `LayoutOrthographicCamera`, we first need to replace `Canvas` from `@react-three/fiber` with `MotionCanvas` from `framer-motion-3d`.\n\nThen, `LayoutOrthographicCamera` can be added anywhere within [`MotionCanvas`](https://www.framer.com/docs/motioncanvas/):\n\n```\n\n// index.js\nimport { motion } from \"framer-motion\"\nimport { Scene } from \"./scene\"\n\nconst fullscreen = { position: \"fixed\", inset: 0 }\n\nexport function App({ isFullscreen }) {\n  return (\n    <motion.div\n      layout\n      style={isFullscreen ? fullscreen : {}}\n    >\n      <Scene />\n    </motion.div>\n  )\n}\n\n// scene.js\nimport { MotionCanvas, LayoutCamera } from \"framer-motion-3d\"\n\nexport function Scene() {\n  <MotionCanvas>\n    <LayoutOrthographicCamera position={[0, 0, 5]} zoom={40} />\n    <Box />\n  </MotionCanvas>\n}\n```\n\nCopy\n\nWhen a parent HTML `motion` component performs a layout animation, the rendered image will be automatically corrected.\n\n## [\\#](https://www.framer.com/motion/layoutorthographiccamera/\\#props) Props\n\nInternally, `LayoutOrthographicCamera` renders a `<motion.orthographicCamera />` component, so it can accept all the usual React Three Fiber props like `position` and `zoom`, as well as `motion` props like `initial` and `animate`.\n\n```\n\n<LayoutCamera\n  position={[0, 0, 5]}\n  zoom={20}\n  animate={{ zoom: 100 }}\n  transition={{ duration: 2 }}\n/>\n```\n\nCopy\n\n[PreviousLayoutCamera](https://www.framer.com/motion/layoutcamera/) [NextMotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### On this page\n\n- [Usage](https://www.framer.com/motion/layoutorthographiccamera/#usage)\n- [Props](https://www.framer.com/motion/layoutorthographiccamera/#props)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/layoutorthographiccamera/",
      "ogUrl": "https://www.framer.com/motion/layoutorthographiccamera/",
      "title": "LayoutOrthographicCamera | Framer for Developers",
      "og:url": "https://www.framer.com/motion/layoutorthographiccamera/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "LayoutOrthographicCamera | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "LayoutOrthographicCamera | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/layoutorthographiccamera/",
      "statusCode": 200,
      "description": "An orthographic camera that integrates with Framer Motion's layout animations.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "An orthographic camera that integrates with Framer Motion's layout animations.",
      "twitter:title": "LayoutOrthographicCamera | Framer for Developers",
      "og:description": "An orthographic camera that integrates with Framer Motion's layout animations.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "An orthographic camera that integrates with Framer Motion's layout animations.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# useVelocity\n\nCreate a motion value that tracks the velocity of another.\n\n`useVelocity` accepts a [motion value](https://www.framer.com/docs/motionvalue/) and returns a new one that updates with the provided motion value's velocity.\n\n## [\\#](https://www.framer.com/motion/use-velocity/\\#usage) Usage\n\nImport `useVelocity` from Framer Motion.\n\n```\n\nimport { useVelocity } from \"framer-motion\"\n```\n\nCopy\n\nPass any numerical motion value to `useVelocity`. It'll return a new motion value that updates with the velocity of the original value.\n\n```\n\nimport { useMotionValue, useVelocity } from \"framer-motion\"\n\nfunction Component() {\n  const x = useMotionValue(0)\n  const xVelocity = useVelocity(x)\n\n  useEffect(() => {\n    return xVelocity.onChange((latestVelocity) => {\n      console.log(\"Velocity\", latestVelocity)\n    })\n  }, [])\n\n  return <motion.div style={{ x }} />\n}\n```\n\nCopy\n\nAny numerical motion value will work. Even one returned from `useVelocity`.\n\n```\n\nconst x = useMotionValue(0)\nconst xVelocity = useVelocity(x)\nconst xAcceleration = useVelocity(xVelocity)\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/use-velocity/\\#examples) Examples\n\nDrag this box fast or slow to see how velocity can be used to affect size and color:\n\n[PrevioususeTransform](https://www.framer.com/motion/use-transform/) [NextuseAnimate](https://www.framer.com/motion/use-animate/)\n\n##### On this page\n\n- [Usage](https://www.framer.com/motion/use-velocity/#usage)\n- [Examples](https://www.framer.com/motion/use-velocity/#examples)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/use-velocity/",
      "ogUrl": "https://www.framer.com/motion/use-velocity/",
      "title": "useVelocity | Framer for Developers",
      "og:url": "https://www.framer.com/motion/use-velocity/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "useVelocity | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "useVelocity | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/use-velocity/",
      "statusCode": 200,
      "description": "Create a motion value that tracks the velocity of another.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Create a motion value that tracks the velocity of another.",
      "twitter:title": "useVelocity | Framer for Developers",
      "og:description": "Create a motion value that tracks the velocity of another.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Create a motion value that tracks the velocity of another.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# useAnimationFrame\n\nAn animation loop that outputs the latest frame time to the provided callback.\n\nRuns a callback once every animation frame.\n\nThe callback is provided two arguments:\n\n- `time`, the total duration of time since the callback was first called.\n- `delta`, the total duration of time since the last animation frame.\n\n```\n\nimport { useAnimationFrame } from \"framer-motion\"\n\nfunction Component() {\n  const ref = useRef(null)\n\n  useAnimationFrame((time, delta) => {\n    ref.current.style.transform = `rotateY(${time}deg)`\n  })\n\n  return <div ref={ref} />\n}\n```\n\nCopy\n\nuseAnimationFrame() - CodeSandbox\n\n[PrevioususeAnimate](https://www.framer.com/motion/use-animate/) [NextuseDragControls](https://www.framer.com/motion/use-drag-controls/)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/use-animation-frame/",
      "ogUrl": "https://www.framer.com/motion/use-animation-frame/",
      "title": "useAnimationFrame | Framer for Developers",
      "og:url": "https://www.framer.com/motion/use-animation-frame/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "useAnimationFrame | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "useAnimationFrame | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/use-animation-frame/",
      "statusCode": 200,
      "description": "An animation loop that outputs the latest frame time to the provided callback.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "An animation loop that outputs the latest frame time to the provided callback.",
      "twitter:title": "useAnimationFrame | Framer for Developers",
      "og:description": "An animation loop that outputs the latest frame time to the provided callback.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "An animation loop that outputs the latest frame time to the provided callback.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# useTransform\n\nCreate a new motion value that transforms the output of one or more other motion values.\n\n`useTransform` creates a `MotionValue` that takes the output of one or more other `MotionValue` s and changes it some way.\n\n## [\\#](https://www.framer.com/motion/use-transform/\\#usage) Usage\n\nImport from Framer Motion.\n\n```\n\nimport { useTransform } from \"framer-motion\"\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/use-transform/\\#\\#transform-function) Transform function\n\n`useTransform` can accept a function which returns a new value.\n\n```\n\nconst x = useMotionValue(1)\nconst y = useMotionValue(1)\n\nconst z = useTransform(() => x.get() + y.get()) // 2\n```\n\nCopy\n\nAny `MotionValue` s read in this function via the `get()` method will be subscribed to automatically. If these `MotionValue` s change, the function will be run on the following frame to calculate a new value.\n\n```\n\nimport { frame } from \"framer-motion\"\n\nconst x = useMotionValue(1)\nconst y = useMotionValue(1)\n\nconst z = useTransform(() => x.get() + y.get()) // 2\n\nx.set(2)\n\nframe.render(() => console.log(z.get())) // 3\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/use-transform/\\#\\#mapping) Mapping\n\n`useTransform` can also map a motion value from one range of values to another.\n\nTo illustrate, look at this `x` motion value:\n\n```\n\nconst x = useMotionValue(0)\n```\n\nCopy\n\nWe can use `useTransform` to create a new motion value called `opacity`. By defining an **input range** and an **output range** we can say, \"when `x` is `0`, `opacity` should be `1`. When `x` is `100`, `opacity` should be 0.\"\n\n```\n\nconst opacity = useTransform(\n  x,\n  // Map x from these values:\n  [0, 100],\n  // Into these values:\n  [1, 0]\n)\n```\n\nCopy\n\nNow, if `x` gets set to `50`, `opacity` will be `0.5`.\n\nBoth ranges **must always be the same length**.\n\nThe **input range** must always be a linear series of numbers, either counting up or counting down.\n\nThe **output range** must all be of the same type, but can be any type supported by Framer Motion, for instance numbers, colors, shadows etc.\n\n```\n\nconst backgroundColor = useTransform(\n  x,\n  [0, 100],\n  [\"#f00\", \"#00f\"]\n)\n```\n\nCopy\n\nIt's possible to provide more than two values to each range. For instance, with the following mapping, we fade `opacity` out whenever `x` goes outside of the `0-100` range.\n\n```\n\nconst opacity = useTransform(\n  x,\n  [-100, 0, 100, 200],\n  [0, 1, 1, 0]\n)\n```\n\nCopy\n\nBy setting `clamp: false`, the ranges will map perpetually. For instance, in this example we're saying \"for every 100px scrolled, rotate another 360deg\":\n\n```\n\nconst { scrollY } = useScroll()\nconst rotate = useTransform(\n  scrollY,\n  [0, 100],\n  [0, 360],\n  { clamp: false }\n)\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/use-transform/\\#options) Options\n\nWhen passing ranges, we can also pass an object of options as the final argument.\n\n```\n\nuseTransform(value, input, output, options)\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/use-transform/\\#\\#\\#clamp) clamp:boolean\n\n**Default:** `true`\n\nIf `true`, will clamp output to within the provided range. If `false`, will carry on mapping even when the input falls outside the provided range.\n\n```\n\nconst y = useTransform(x, [0, 1], [0, 2])\nconst z = useTransform(x, [0, 1], [0, 2], { clamp: false })\n\nuseEffect(() => {\n  x.set(2)\n  console.log(y.get()) // 2, input clamped\n  console.log(z.get()) // 4\n})\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/use-transform/\\#\\#\\#ease) ease:EasingFunction \\| EasingFunction\\[\\]\n\nAn easing function, or list of easing functions, to use to ease the mixing between each value in the provided ranges.\n\nThese must be JavaScript functions. All [named easings](https://www.framer.com/docs/transition/###ease) can be imported from `\"framer-motion\"`:\n\n```\n\nimport { cubicBezier, circOut } from \"framer-motion\"\n\n// In your component\nconst y = useTransform(x, [0, 1], [0, 2], { ease: circOut })\n\nconst z = useTransform(\n  x,\n  [0, 1],\n  [0, 2],\n  { ease: cubicBezier(0.17, 0.67, 0.83, 0.67) }\n)\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/use-transform/\\#\\#\\#mixer) mixer:(from: T, to: T) => (p: number) => any\n\nA function to use to mix between each set of output value.\n\nThis can be used to inject more advanced mixers than Framer Motion's default, for instance [Flubber](https://github.com/veltman/flubber) for morphing SVG paths.\n\n`from` and `to` will be each set of values, for instance given an output range `[\"#000\", \"#f00\", \"#333\"]` two mixers will be created, one between `\"#000\"` and `\"#f00\"` and one between `\"#f00\"` and `\"#333\"`.\n\n`p` is an eased progress value between `0` and `1` that defines how much we should mix between `from` and `to`.\n\n## [\\#](https://www.framer.com/motion/use-transform/\\#examples) Examples\n\nFramer Motion: Path drawing, drag and useTransform - CodeSandbox\n\nFramer Motion: MorphSVG example - CodeSandbox\n\n[PrevioususeTime](https://www.framer.com/motion/use-time/) [NextuseVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### On this page\n\n- [Usage](https://www.framer.com/motion/use-transform/#usage)\n- [Transform function](https://www.framer.com/motion/use-transform/##transform-function)\n- [Mapping](https://www.framer.com/motion/use-transform/##mapping)\n- [Options](https://www.framer.com/motion/use-transform/#options)\n- [Examples](https://www.framer.com/motion/use-transform/#examples)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/use-transform/",
      "ogUrl": "https://www.framer.com/motion/use-transform/",
      "title": "useTransform | Framer for Developers",
      "og:url": "https://www.framer.com/motion/use-transform/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "useTransform | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "useTransform | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/use-transform/",
      "statusCode": 200,
      "description": "Create a new motion value that transforms the output of one or more other motion values. ",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Create a new motion value that transforms the output of one or more other motion values. ",
      "twitter:title": "useTransform | Framer for Developers",
      "og:description": "Create a new motion value that transforms the output of one or more other motion values. ",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Create a new motion value that transforms the output of one or more other motion values. ",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# Easing functions\n\nA powerful set of easing functions that can be used with any animation library\n\nFramer Motion supports a number of built-in [easing functions](/motion/transition/###ease). It also exports these easing functions, and some related utilities, for use with any animation library or in your own custom functions.\n\n## [\\#](/motion/easing-functions/\\#import) Import\n\n```\n\n// React\nimport { cubicBezier } from \"framer-motion\"\n\n// Universal\nimport { cubicBezier } from \"framer-motion/dom\"\n```\n\nCopy\n\n## [\\#](/motion/easing-functions/\\#easing-functions) Easing functions\n\nAll of Framer Motion's [named easings](/motion/transition/###ease) can be exported as functions using their name.\n\n```\n\n// React\nimport { easeIn } from \"framer-motion\"\n\n// Universal\nimport { easeIn } from \"framer-motion/dom\"\n```\n\nCopy\n\nBy passing a progress value to these functions, you'll receive an eased progress back.\n\n```\n\nconst eased = easedIn(0.5)\n```\n\nCopy\n\nExported easing functions are:\n\n- `cubicBezier`\n- `easeIn`/ `easeOut`/ `easeInOut`\n- `backIn`/ `backOut`/ `backInOut`\n- `circIn`/ `circOut`/ `circInOut`\n- `anticipate`\n- `linear`\n- `steps`\n\n### [\\#](/motion/easing-functions/\\#\\#cubicbezier) cubicBezier\n\n`cubicBezier` provides very precise control over the easing curve.\n\n```\n\nconst easing = cubicBezier(.35,.17,.3,.86)\n\nconst easedProgress = easing(0.5)\n```\n\nCopy\n\nNew easing curve definitions can be generated on [cubic-bezier.com](https://cubic-bezier.com).\n\n### [\\#](/motion/easing-functions/\\#\\#steps) steps\n\n`steps` creates an easing with evenly-spaced, discrete steps. It is spec-compliant with CSS `steps` easing.\n\n```\n\nimport { steps } from \"framer-motion/dom\"\n\nconst easing = steps(4)\n\neasing(0.2) // 0\neasing(0.25) // 0.25\n```\n\nCopy\n\nBy default, the \"steps\" change at the end of a step, this can be changed by passing `\"start\"` to `steps`:\n\n```\n\nimport { steps } from \"framer-motion/dom\"\n\nconst easing = steps(4)\n\neasing(0.2) // 0\neasing(0.25) // 0.25\n```\n\nCopy\n\nThe distribution of steps is linear by default but can be adjusted by passing `progress` through another easing function first.\n\n```\n\nconst easing = steps(4)\n\neasing(circInOut(0.2))\n```\n\nCopy\n\n## [\\#](/motion/easing-functions/\\#modifiers) Modifiers\n\nEasing modifiers accept an easing function and return a new one, modified.\n\n#### [\\#](/motion/easing-functions/\\#\\#\\#mirroreasing) mirrorEasing(EasingFunction):EasingFunction\n\n`mirrorEasing` accepts an easing function and returns a version that mirrors it half way. For instance, an `easeIn` becomes an `easeInOut`.\n\n```\n\nconst easeIn = (progress) => progress * progress\n\nconst easeInOut = mirrorEasing(easeIn)\n```\n\nCopy\n\n#### [\\#](/motion/easing-functions/\\#\\#\\#reverseeasing) reverseEasing(EasingFunction):EasingFunction\n\n`reverseEasing` accepts an easing function and returns a version that reverses it. For instance, an `easeIn` becomes an easeOut.\n\n```\n\nconst easeIn = (progress) => progress * progress\n\nconst easeOut = reverseEasing(easeIn)\n```\n\nCopy\n\n[Previousframe](/motion/frame/) [Next3D: Introduction](/motion/three-introduction/)\n\n##### On this page\n\n- [Import](/motion/easing-functions/#import)\n- [Easing functions](/motion/easing-functions/#easing-functions)\n- [cubicBezier](/motion/easing-functions/##cubicbezier)\n- [steps](/motion/easing-functions/##steps)\n- [Modifiers](/motion/easing-functions/#modifiers)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/easing-functions/",
      "ogUrl": "https://www.framer.com/motion/easing-functions/",
      "title": "Easing functions | Framer for Developers",
      "og:url": "https://www.framer.com/motion/easing-functions/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "Easing functions | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "Easing functions | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/easing-functions/",
      "statusCode": 200,
      "description": "A powerful set of easing functions that can be used with any animation library",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "A powerful set of easing functions that can be used with any animation library",
      "twitter:title": "Easing functions | Framer for Developers",
      "og:description": "A powerful set of easing functions that can be used with any animation library",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "A powerful set of easing functions that can be used with any animation library",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# Accessibility\n\nHow to design accessible animations with Framer Motion.\n\nAnimations can have serious usability implications, even inducing motion sickness in some people.\n\nAll modern operating systems provide a setting called \"Reduced Motion\", where people can indicate they prefer less physical motion, either because of personal preference or because they can suffer from motion sickness.\n\nThere are already some excellent guides about _why_ and _how_ we should design accessible animations, like those at [A List Apart](http://alistapart.com/article/designing-safer-web-animation-for-motion-sensitivity/) and [Smashing Magazine](https://www.smashingmagazine.com/2018/04/designing-accessibility-inclusion/). The main takeaways are that for users with \"Reduced Motion\" enabled, we should keep educational transitions but be aware of motion sickness. So that means replacing transform animations on large elements with opacity transitions, disabling auto-playing videos, and disabling parallax animations.\n\nFramer Motion provides APIs that make it simple to respect these people's preferences. In this guide, we'll learn how to use the `reducedMotion` option and `useReducedMotion` hook to make our animations accessible.\n\n## [\\#](/motion/guide-accessibility/\\#reducedmotion) `reducedMotion`\n\nThe [`reducedMotion option`](/docs/motion-config/###reducedmotion) can be set on `MotionConfig` to define how you want to adhere to the Reduced Motion setting.\n\nBy setting `reducedMotion` it to `\"user\"`, all `motion` components will automatically disable transform and layout animations, while preserving the animation of other values like `opacity` and `backgroundColor`.\n\n```\n\nimport { MotionConfig } from \"framer-motion\"\n\nexport function App({ children }) {\n  return (\n    <MotionConfig reducedMotion=\"user\">\n      {children}\n    </MotionConfig>\n  )\n}\n```\n\nCopy\n\nIn Framer, you can set this by going to `Site Settings > Accessibility` and checking the \"Disable transform and layout animations if user prefers reduced motion\" checkbox.\n\nAdditionally, you can allow a user to override Reduced Motion for just your site by setting reducedMotion to `\"always\"` or `\"never\"`.\n\n## [\\#](/motion/guide-accessibility/\\#usereducedmotion) `useReducedMotion`\n\nWhile `reducedMotion` is a great blanket tool for ensuring accessible animations across your whole site, more bespoke solutions can be created with the `useReducedMotion` hook.\n\nThis hook returns `true`/ `false` depending on whether your visitor has Reduced Motion enabled.\n\n```\n\nimport { useReducedMotion } from \"framer-motion\"\n\n// In your component\nconst shouldReduceMotion = useReducedMotion()\n```\n\nCopy\n\nWe can use this boolean to fix some of the common accessibility problems identified at the start of this guide.\n\n### [\\#](/motion/guide-accessibility/\\#\\#replace-transitions-with-opacity) Replace transitions with opacity\n\nWhen Reduced Motion is enabled on iOS, the operating system still animates between states to help users transition between each context. But instead of the default scale and x/y animations, it fades content in and out.\n\nWe can achieve this in Framer Motion by passing different values to `animate` based on whether `useReducedMotion` returns `true` or not.\n\n```\n\nfunction Sidebar({ isOpen }) {\n  const shouldReduceMotion = useReducedMotion()\n  let animate\n\n  if (isOpen) {\n    animate = shouldReduceMotion ? { opacity: 1 } : { x: 0 }\n  } else {\n    animate = shouldReduceMotion\n      ? { opacity: 0 }\n      : { x: \"-100%\" }\n  }\n\n  return <motion.div animate={animate} />\n}\n```\n\nCopy\n\n### [\\#](/motion/guide-accessibility/\\#\\#disable-auto-playing-videos) Disable auto-playing videos\n\n`useReducedMotion` isn’t only compatible with the Framer Motion. It returns a simple boolean, so you can use it for any purpose, like disabling the autoplay of a background `video` element:\n\n```\n\nfunction BackgroundVideo() {\n  const shouldReduceMotion = useReducedMotion()\n\n  return <video autoplay={!shouldReduceMotion} />\n}\n```\n\nCopy\n\n### [\\#](/motion/guide-accessibility/\\#\\#disable-parallax-animations) Disable parallax animations\n\nParallax animations can be very unpleasant for people pre-disposed to motion sickness.\n\nTo build parallax, we usually get `scrollY` from `useViewportScroll`, and create a new `MotionValue` via passing that to `useTransform` which will update's a `motion` component's `y` position as the scroll value changes.\n\nTo disable this for reduced motion devices, we can conditionally pass this `MotionValue` to the animating element.\n\n```\n\nfunction Parallax() {\n  const shouldReduceMotion = useReducedMotion()\n  const { scrollY } = useViewportScroll()\n\n  const y = useTransform(scrollY, [0, 1], [0, -0.2], {\n    clamp: false,\n  })\n\n  return (\n    <motion.div style={{ y: shouldReduceMotion ? 0 : y }} />\n  )\n}\n```\n\nCopy\n\n## [\\#](/motion/guide-accessibility/\\#conclusion) Conclusion\n\nWe've learned to respect people's Reduced Motion setting with Framer Motion. The `reducedMotion` option makes it simple to implement across a whole site, while `useReducedMotion` can help us create bespoke accessibility strategies with any React API.\n\nIn the future, we'd like to set `reducedMotion=\"user\"` by default, so let us know via [our Twitter](https://twitter.com/framer) if you think we can improve way it affects animation accessibility.\n\n[PreviousMotionCanvas](/motion/motioncanvas/) [NextReduce bundle size](/motion/guide-reduce-bundle-size/)\n\n##### On this page\n\n- [reducedMotion](/motion/guide-accessibility/#reducedmotion)\n- [useReducedMotion](/motion/guide-accessibility/#usereducedmotion)\n- [Replace transitions with opacity](/motion/guide-accessibility/##replace-transitions-with-opacity)\n- [Disable auto-playing videos](/motion/guide-accessibility/##disable-auto-playing-videos)\n- [Disable parallax animations](/motion/guide-accessibility/##disable-parallax-animations)\n- [Conclusion](/motion/guide-accessibility/#conclusion)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/guide-accessibility/",
      "ogUrl": "https://www.framer.com/motion/guide-accessibility/",
      "title": "Accessibility | Framer for Developers",
      "og:url": "https://www.framer.com/motion/guide-accessibility/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "Accessibility | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "Accessibility | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/guide-accessibility/",
      "statusCode": 200,
      "description": "How to design accessible animations with Framer Motion.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "How to design accessible animations with Framer Motion.",
      "twitter:title": "Accessibility | Framer for Developers",
      "og:description": "How to design accessible animations with Framer Motion.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "How to design accessible animations with Framer Motion.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# useAnimate\n\nCreate an animate function with scoped selectors and automatic cleanup.\n\n`useAnimate` provides a way of using the [`animate` function](/motion/animate-function/) that is scoped to the elements within your component.\n\nThis allows you to use manual animation controls, timelines, selectors scoped to your component, and automatic cleanup.\n\nIt provides a `scope` ref, and an `animate` function where every DOM selector is scoped to this ref.\n\n```\n\nfunction Component() {\n  const [scope, animate] = useAnimate()\n\n  useEffect(() => {\n    // This \"li\" selector will only select children\n    // of the element that receives `scope`.\n    animate(\"li\", { opacity: 1 })\n  })\n\n  return <ul ref={scope}>{children}</ul>\n}\n```\n\nCopy\n\nAdditionally, when the component calling `useAnimate` is removed, all animations started with its returned `animate` function will be cleaned up automatically.\n\n### [\\#](/motion/use-animate/\\#\\#useanimate-vs-motiondiv) `useAnimate()` vs `<motion.div />`\n\nDeclarative animations via [`motion components`](/motion/component/) tend to be simpler to write and maintain. However, imperative animations via `useAnimate()` are very powerful, allowing:\n\n- Complex animation sequencing\n- Playback controls ( `pause`/ `play` etc)\n- Animate [`MotionValue`](/motion/motionvalue/) s directly\n- Animating \"black box\" components, where you don't have direct access to rendered components, via DOM selectors\n\nUltimately which you use depends on your needs and usecase.\n\n## [\\#](/motion/use-animate/\\#usage) Usage\n\nImport from `\"framer-motion\"`.\n\n```\n\n// Mini (2.5kb)\nimport { useAnimate } from \"framer-motion/mini\"\n\n// Hybrid (17kb)\nimport { useAnimate } from \"framer-motion\"\n```\n\nCopy\n\n`useAnimate` returns two arguments, a `scope` ref and an [`animate` function](/motion/animate-function/).\n\n```\n\nfunction Component() {\n  const [scope, animate] = useAnimate()\n```\n\nCopy\n\nThis `scope` ref must be passed to either a regular HTML/SVG element or a `motion` component.\n\n```\n\nfunction Component({ children }) {\n  const [scope, animate] = useAnimate()\n\n  return <ul ref={scope}>{children}</ul>\n}\n```\n\nCopy\n\nThis scoped [`animate` function](/motion/animate-function/) can now be used in effects and event handlers to animate elements.\n\nWe can either use the scoped element directly:\n\n```\n\nanimate(scope.current, { opacity: 1 }, { duration: 1 })\n```\n\nCopy\n\nOr by passing it a selector.\n\n```\n\nanimate(\"li\", { backgroundColor: \"#000\" }, { ease: \"linear\" })\n```\n\nCopy\n\nThis selector is `\"li\"`, but we're not selecting all `li` elements on the page, only those that are a child of the scoped element.\n\n### [\\#](/motion/use-animate/\\#\\#scroll-triggered-animations) Scroll-triggered animations\n\nAnimations can be triggered when the scope scrolls into view by using `useAnimate` with [`useInView`](/motion/use-in-view/).\n\n```\n\nimport { useAnimate, useInView } from \"framer-motion\"\n\nfunction Component() {\n  const [scope, animate] = useAnimate()\n  const isInView = useInView(scope)\n\n  useEffect(() => {\n     if (isInView) {\n       animate(scope.current, { opacity: 1 })\n     }\n  }, [isInView])\n\n  return (\n    <ul ref={scope}>\n      <li />\n      <li />\n      <li />\n    </ul>\n  )\n}\n```\n\nCopy\n\n### [\\#](/motion/use-animate/\\#\\#exit-animations) Exit animations\n\nIt's possible to compose your own exit animations when a component is removed using `useAnimate` in conjunction with [`usePresence`](/motion/animate-presence/#usepresence).\n\n```\n\nimport { useAnimate, usePresence } from \"framer-motion\"\n\nfunction Component() {\n  const [isPresent, safeToRemove] = usePresence()\n  const [scope, animate] = useAnimate()\n\n  useEffect(() => {\n     if (isPresent) {\n       const enterAnimation = async () => {\n         await animate(scope.current, { opacity: 1 })\n         await animate(\"li\", { opacity: 1, x: 0 })\n       }\n       enterAnimation()\n\n     } else {\n       const exitAnimation = async () => {\n         await animate(\"li\", { opacity: 0, x: -100 })\n         await animate(scope.current, { opacity: 0 })\n         safeToRemove()\n       }\n\n       exitAnimation()\n     }\n  }, [isPresent])\n\n  return (\n    <ul ref={scope}>\n      <li />\n      <li />\n      <li />\n    </ul>\n  )\n}\n```\n\nCopy\n\nThis component can now be conditionally rendered as a child of `AnimatePresence`.\n\n```\n\n<AnimatePresence>\n  {show ? <Component key=\"dialog\" /> : null}\n</AnimatePresence>\n```\n\nCopy\n\n[PrevioususeVelocity](/motion/use-velocity/) [NextuseAnimationFrame](/motion/use-animation-frame/)\n\n##### On this page\n\n- [useAnimate() vs <motion.div />](/motion/use-animate/##useanimate-vs-motiondiv)\n- [Usage](/motion/use-animate/#usage)\n- [Scroll-triggered animations](/motion/use-animate/##scroll-triggered-animations)\n- [Exit animations](/motion/use-animate/##exit-animations)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/use-animate/",
      "ogUrl": "https://www.framer.com/motion/use-animate/",
      "title": "useAnimate | Framer for Developers",
      "og:url": "https://www.framer.com/motion/use-animate/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "useAnimate | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "useAnimate | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/use-animate/",
      "statusCode": 200,
      "description": "Create an animate function with scoped selectors and automatic cleanup.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Create an animate function with scoped selectors and automatic cleanup.",
      "twitter:title": "useAnimate | Framer for Developers",
      "og:description": "Create an animate function with scoped selectors and automatic cleanup.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Create an animate function with scoped selectors and automatic cleanup.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# Motion values overview\n\nMotion values track the state and velocity of animating values.\n\nAll `motion` components internally use `MotionValue` s to track the state and velocity of an animating value.\n\nUsually, these are created automatically. But for advanced use-cases, it is possible to create them manually and provide them to `motion` components.\n\n```\n\nimport { motion, useMotionValue } from \"framer-motion\"\n\nexport function MyComponent() {\n  const x = useMotionValue(0)\n  return <motion.div style={{ x }} />\n}\n```\n\nCopy\n\nBy manually creating `MotionValue` s you can:\n\n- Set and get their state.\n- Pass to multiple components to synchronise motion across them.\n- Chain `MotionValue` s via the `useTransform` hook.\n- Update visual properties without triggering React's render cycle.\n- Subscribe to updates.\n\n```\n\nconst x = useMotionValue(0)\nconst input = [-200, 0, 200]\nconst output = [0, 1, 0]\nconst opacity = useTransform(x, input, output)\n\nreturn <motion.div drag=\"x\" style={{ x, opacity }} />\n```\n\nCopy\n\n## [\\#](/motion/motionvalue/\\#overview) Overview\n\n`MotionValue` s can be created with the `useMotionValue` hook.\n\nThe value passed to `useMotionValue` will act as the **initial state** of the `MotionValue`.\n\n```\n\nconst x = useMotionValue(0)\n```\n\nCopy\n\nIt can be updated with the `set` method. This **won't** trigger a React re-render.\n\n```\n\nx.set(100)\n```\n\nCopy\n\nA `MotionValue` can be **any string or number**. We can read the value with the `get` method.\n\n```\n\nx.get() // 100\n```\n\nCopy\n\n`MotionValue` s containing a single number can return a velocity via the `getVelocity` method. This returns the velocity as calculated **per second** to account for variations in frame rate across devices.\n\n```\n\nx.getVelocity()\n```\n\nCopy\n\nIf a `MotionValue` contains a color, or more than one number, `getVelocity` will always return `0`.\n\n### [\\#](/motion/motionvalue/\\#\\#injecting-motionvalues) Injecting `MotionValue` s\n\nOnce a `MotionValue` has been created, it can be injected into the `motion` component in the same way you'd usually set that visual property.\n\nFor HTML components, that's via the `style` attribute.\n\n```\n\nconst x = useMotionValue(0)\n\nreturn <motion.div style={{ x }} />\n```\n\nCopy\n\nFor SVG components, that's directly into the attribute itself.\n\n```\n\nconst cx = useMotionValue(0)\n\nreturn <motion.circle cx={cx} />\n```\n\nCopy\n\nIt is possible to inject a single `MotionValue` into **one or more components**. Changes in the `MotionValue` will be reflected in all the components.\n\n### [\\#](/motion/motionvalue/\\#\\#responding-to-changes) Responding to changes\n\nListeners can be added to `MotionValue` s with the `onChange` method. `onChange` returns an unsubscribe method, so it works quite naturally with `useEffect`.\n\n```\n\nuseEffect(() => x.onChange(latest => {}), [])\n```\n\nCopy\n\n### [\\#](/motion/motionvalue/\\#\\#composing-motionvalues) Composing MotionValues\n\nFramer Motion provides multiple hooks for composing motion values, like [useSpring](/docs/use-spring/) and [useTransform](/docs/use-transform/).\n\nUsing the `useTransform` hook, we can pass the latest value through an update function that can take the latest parent value and transform it before returning it to update the child.\n\n```\n\nconst y = useTransform(x, latest => latest * 2)\n```\n\nCopy\n\n`useTransform` can also accept value ranges that can map from a linear series of numbers into non-linear series of numbers, colors or a complex string.\n\n```\n\nconst xInput = [-100, 0, 100]\nconst opacityOutput = [0, 1, 0]\nconst colorOutput = [\"#f00\", \"#fff\", \"#0f0\"]\n\nconst opacity = useTransform(x, xInput, opacityOutput)\nconst color = useTransform(x, xInput, colorOutput)\n```\n\nCopy\n\nThese child components can be used exactly like the parents. They can be passed to the same component, a different component, or multiple other components.\n\n## [\\#](/motion/motionvalue/\\#motionvalue) `MotionValue`\n\nA `MotionValue` has the following methods, with which you can query use to affect its state.\n\n#### [\\#](/motion/motionvalue/\\#\\#\\#get) get():V\n\nReturns the latest state of `MotionValue`.\n\nreturns:V\n\nThe latest state of `MotionValue`\n\n#### [\\#](/motion/motionvalue/\\#\\#\\#getvelocity) getVelocity():number\n\nReturns the latest velocity of `MotionValue`.\n\nreturns:number\n\nThe latest velocity of `MotionValue`. Returns `0` if the state is nonnumerical\n\n#### [\\#](/motion/motionvalue/\\#\\#\\#set) set(newValue):void\n\nSets the `MotionValue` to a new value.\n\n```\n\nconst x = useMotionValue(0)\nx.set(10)\n```\n\nCopy\n\n#### [\\#](/motion/motionvalue/\\#\\#\\#jump) jump(newValue):void\n\n`jump` sets the `MotionValue` in a way that breaks continuity from previous values:\n\n1. Resets `velocity` to `0`\n2. Ends any active animation\n3. Ignores attached effects (for instance the spring attached to `MotionValue` s returned from `useSpring`)\n\n```\n\nconst x = useSpring(0)\nx.jump(10)\nx.getVelocity() // 0\n```\n\nCopy\n\n#### [\\#](/motion/motionvalue/\\#\\#\\#isanimating) isAnimating():boolean\n\nReturns `true` if this value is currently animating.\n\nreturns:boolean\n\n#### [\\#](/motion/motionvalue/\\#\\#\\#stop) stop():void\n\nStop the currently active animation.\n\n#### [\\#](/motion/motionvalue/\\#\\#\\#on) on(eventName, subscription):() =\\> void\n\n`on` is used to subscribe to events on the `MotionValue`.\n\n```\n\nx.on(\"change\", latest => console.log(latest))\n```\n\nCopy\n\nAvailable events are:\n\n- `change`\n- `animationStart`\n- `animationCancel`\n- `animationComplete`\n\nIt returns a function that, when called, will unsubscribe the listener.\n\n```\n\nconst unsubscribe = x.on(\"change\", latest => console.log(latest))\n```\n\nCopy\n\nWhen calling `on` inside a React component, it should be wrapped with a `useEffect` hook.\n\nsubscription:Subscriber<V>\n\nA function that receives the latest value\n\nreturns:() =\\> void\n\nA function that, when called, will cancel this subscription\n\n```\n\nexport const MyComponent = () => {\n  const x = useMotionValue(0)\n  const y = useMotionValue(0)\n  const opacity = useMotionValue(1)\n\n  useEffect(() => {\n    function updateOpacity() {\n      const maxXY = Math.max(x.get(), y.get())\n      const newOpacity = transform(maxXY, [0, 100], [1, 0])\n      opacity.set(newOpacity)\n    }\n\n    const unsubscribeX = x.on(\"change\", updateOpacity)\n    const unsubscribeY = y.on(\"change\", updateOpacity)\n\n    return () => {\n      unsubscribeX()\n      unsubscribeY()\n    }\n  }, [])\n\n  return <motion.div style={{ x }} />\n}\n```\n\nCopy\n\nAlternatively, the [useMotionValueEvent hook](/docs/use-motion-value-event/) can be used to do this automatically.\n\n```\n\nuseMotionValueEvent(x, \"change\", latest => console.log(latest))\n```\n\nCopy\n\n#### [\\#](/motion/motionvalue/\\#\\#\\#destroy) destroy():void\n\nDestroy and clean up subscribers to this `MotionValue`.\n\nThe `MotionValue` hooks like `useMotionValue` and `useTransform` automatically handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually created a `MotionValue` via the `motionValue` function.\n\n[PreviousReorder](/motion/reorder/) [NextuseMotionValueEvent](/motion/use-motion-value-event/)\n\n##### On this page\n\n- [Overview](/motion/motionvalue/#overview)\n- [Injecting MotionValues](/motion/motionvalue/##injecting-motionvalues)\n- [Responding to changes](/motion/motionvalue/##responding-to-changes)\n- [Composing MotionValues](/motion/motionvalue/##composing-motionvalues)\n- [MotionValue](/motion/motionvalue/#motionvalue)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/motionvalue/",
      "ogUrl": "https://www.framer.com/motion/motionvalue/",
      "title": "Motion values overview | Framer for Developers",
      "og:url": "https://www.framer.com/motion/motionvalue/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "Motion values overview | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "Motion values overview | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/motionvalue/",
      "statusCode": 200,
      "description": "Motion values track the state and velocity of animating values.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Motion values track the state and velocity of animating values.",
      "twitter:title": "Motion values overview | Framer for Developers",
      "og:description": "Motion values track the state and velocity of animating values.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Motion values track the state and velocity of animating values.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# MotionCanvas\n\nA Canvas component for linking Framer Motion with Framer Motion 3D.\n\nReact Three Fiber (R3F) uses the [Canvas component](https://docs.pmnd.rs/react-three-fiber/api/canvas) to establish a 3D scene. Using this component will break context with parent components.\n\nTo link Framer Motion 3D context with Framer Motion, for instance to share a default transition or link the [LayoutCamera](/docs/layoutcamera/) with layout animations, the `MotionCanvas` component can be used instead.\n\n```\n\nimport { MotionConfig, motion } from \"framer-motion\"\nimport { MotionCanvas, motion as motion3d } from \"framer-motion-3d\"\n\nexport function App() {\n  return (\n    <MotionConfig transition={{ type: \"spring\" }}>\n      <motion.div animate={{ scale: 2 }}>\n        <MotionCanvas>\n          <motion3d.boxGeometry animate={{ x: 1 }} />\n        </MotionCanvas>\n      </motion.div>\n    </MotionConfig>\n  )\n}\n```\n\nCopy\n\nIt shares all the same props as R3F's `Canvas` component, with the omission of `resize`, as `MotionCanvas` implements its own resize options to sync with Framer Motion's layout animations.\n\n[PreviousLayoutOrthographicCamera](/motion/layoutorthographiccamera/) [NextAccessibility](/motion/guide-accessibility/)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/motioncanvas/",
      "ogUrl": "https://www.framer.com/motion/motioncanvas/",
      "title": "MotionCanvas | Framer for Developers",
      "og:url": "https://www.framer.com/motion/motioncanvas/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "MotionCanvas | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "MotionCanvas | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/motioncanvas/",
      "statusCode": 200,
      "description": "A Canvas component for linking Framer Motion with Framer Motion 3D.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "A Canvas component for linking Framer Motion with Framer Motion 3D.",
      "twitter:title": "MotionCanvas | Framer for Developers",
      "og:description": "A Canvas component for linking Framer Motion with Framer Motion 3D.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "A Canvas component for linking Framer Motion with Framer Motion 3D.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# Introduction\n\nGet started with Framer Motion and learn by exploring interactive examples.\n\n## [\\#](https://www.framer.com/motion/introduction/\\#overview) Overview\n\nFramer Motion is a simple yet powerful motion library for React.\n\nIt powers the amazing animations and interactions in [Framer](https://www.framer.com/?utm_source=motion-introduction), the web builder for creative pros. Zero code, maximum speed.\n\n## [\\#](https://www.framer.com/motion/introduction/\\#install) Install\n\nFramer Motion requires React 18. Install `framer-motion` from npm:\n\n```\n\nnpm install framer-motion\n```\n\nCopy\n\nUsers already upgrading to React 19 can install the Framer Motion 12 alpha, which currently works with the React 19 RC:\n\n```\n\nnpm install framer-motion@12.0.0-alpha.0\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/introduction/\\#\\#importing) Importing\n\nOnce installed, you can import Framer Motion via `framer-motion`.\n\n```\n\n// React\nimport { motion } from \"framer-motion\"\n\n// React Server Components\nimport * as motion from \"framer-motion/client\"\n```\n\nCopy\n\nIn this quick overview, we'll take a look at some of the APIs that Motion offers.\n\n## [\\#](https://www.framer.com/motion/introduction/\\#usage) Usage\n\n### [\\#](https://www.framer.com/motion/introduction/\\#\\#the-motion-component) The `<motion />` component\n\nThe core of Motion is [the motion component](https://www.framer.com/docs/component/). Think of it as a plain HTML or SVG element, supercharged with animation capabilities.\n\n```\n\n<motion.div />\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/introduction/\\#\\#animations) Animations\n\nAnimating a `motion` component is as straightforward as setting values on [the animate prop](https://www.framer.com/docs/animation/).\n\n```\n\n<motion.div animate={{ x: 100 }} />\n```\n\nCopy\n\nWhen these values change, Framer Motion will automatically generate an animation to the latest values. This animation will feel great by default, but it can be configured with the [flexible transition prop](https://www.framer.com/docs/transition/).\n\n### [\\#](https://www.framer.com/motion/introduction/\\#\\#gestures) **Gestures**\n\n`<motion />` extends React's event system with [powerful gesture recognisers](https://www.framer.com/docs/gestures/). It supports hover, tap, pan and drag.\n\n```\n\n<motion.div\n  whileHover={{ scale: 1.2 }}\n  whileTap={{ scale: 1.1 }}\n  drag=\"x\"\n  dragConstraints={{ left: -100, right: 100 }}\n/>\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/introduction/\\#\\#variants) **Variants**\n\n[Variants](https://www.framer.com/docs/animation/#variants) can be used to animate entire sub-trees of components with a single `animate` prop. Options like `when` and `staggerChildren` can be used to declaratively orchestrate these animations.\n\n```\n\nconst list = { hidden: { opacity: 0 } }\nconst item = { hidden: { x: -10, opacity: 0 } }\n\nreturn (\n  <motion.ul animate=\"hidden\" variants={list}>\n    <motion.li variants={item} />\n    <motion.li variants={item} />\n    <motion.li variants={item} />\n  </motion.ul>\n)\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/introduction/\\#\\#scroll-triggered-animations) Scroll-triggered animations\n\nElements can animate as they [enter and leave the viewport](https://www.framer.com/docs/scroll-animations/#scroll-triggered-animations) with the handy `whileInView` prop.\n\n```\n\n<motion.div\n  initial={{ opacity: 0 }}\n  whileInView={{ opacity: 1 }}\n/>\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/introduction/\\#\\#server-side-rendering) **Server-side rendering**\n\nThe animated state of a component will be rendered server-side to prevent flashes of re-styled content after your JavaScript loads.\n\n```\n\n<motion.div initial={false} animate={{ x: 100 }} />\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/introduction/\\#\\#motionvalues) **MotionValues**\n\n[`MotionValues`](https://www.framer.com/docs/motionvalue/) are used to track the state and velocity of animating values, outside of React's render lifecycle.\n\nThey're created automatically and used internally by `motion` components. But they can also be created manually and chained together to create performant, declarative effects.\n\n```\n\nconst x = useMotionValue(0)\nconst opacity = useTransform(x, [-100, 0, 100], [0, 1, 0])\n\nreturn <motion.div drag=\"x\" style={{ x, opacity }} />\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/introduction/\\#\\#layout-animations) Layout animations\n\nFramer Motion is capable of animating [changes in layout](https://www.framer.com/docs/layout-animations/) using performant transforms.\n\n```\n\n<motion.div layout />\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/introduction/\\#\\#manual-animations) Manual animations\n\nThe [`useAnimate`](https://www.framer.com/motion/use-animate/) hook can be used to manually trigger animations in effects and event handlers. It can also be used to orchestrate more complex animations.\n\n```\n\n<div onClick={() => animate(\".boxes\", { opacity: 0 })} />\n```\n\nCopy\n\n[NextExamples](https://www.framer.com/motion/examples/)\n\n##### On this page\n\n- [Overview](https://www.framer.com/motion/introduction/#overview)\n- [Install](https://www.framer.com/motion/introduction/#install)\n- [Importing](https://www.framer.com/motion/introduction/##importing)\n- [Usage](https://www.framer.com/motion/introduction/#usage)\n- [The <motion /> component](https://www.framer.com/motion/introduction/##the-motion-component)\n- [Animations](https://www.framer.com/motion/introduction/##animations)\n- [Gestures](https://www.framer.com/motion/introduction/##gestures)\n- [Variants](https://www.framer.com/motion/introduction/##variants)\n- [Scroll-triggered animations](https://www.framer.com/motion/introduction/##scroll-triggered-animations)\n- [Server-side rendering](https://www.framer.com/motion/introduction/##server-side-rendering)\n- [MotionValues](https://www.framer.com/motion/introduction/##motionvalues)\n- [Layout animations](https://www.framer.com/motion/introduction/##layout-animations)\n- [Manual animations](https://www.framer.com/motion/introduction/##manual-animations)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/introduction/",
      "ogUrl": "https://www.framer.com/motion/introduction/",
      "title": "Introduction | Framer for Developers",
      "og:url": "https://www.framer.com/motion/introduction/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "Introduction | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "Introduction | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/introduction/",
      "statusCode": 200,
      "description": "Get started with Framer Motion and learn by exploring interactive examples.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Get started with Framer Motion and learn by exploring interactive examples.",
      "twitter:title": "Introduction | Framer for Developers",
      "og:description": "Get started with Framer Motion and learn by exploring interactive examples.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Get started with Framer Motion and learn by exploring interactive examples.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# frame\n\nSchedule a function to run on Motion's animation loop.\n\nFramer Motion uses an animation loop to batch **reads**, **updates** and **renders** once every animation frame. `frame` allows access to this animation loop.\n\nUsing `frame`:\n\n- Prevents [layout thrashing](https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/#avoid-layout-thrashing),\n- Provides an easy keep-alive API for creating your own animation loop,\n- Avoids the performance overhead of multiple `requestAnimationFrame` calls.\n\n## [\\#](/motion/frame/\\#usage) Usage\n\n### [\\#](/motion/frame/\\#\\#import) Import\n\n```\n\n// React\nimport { frame } from \"framer-motion\"\n\n// Universal\nimport { frame } from \"framer-motion/dom\"\n```\n\nCopy\n\n### [\\#](/motion/frame/\\#\\#schedule-a-callback) Schedule a callback\n\n`frame` works like [`requestAnimationFrame`](https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame), whereby callbacks provided will execute on the next animation frame.\n\n`frame` splits the animation frame into three steps:\n\n- `read`: Read values from or measure the DOM.\n- `update`: Amend values once all values have been read.\n- `render`: Apply updated values to DOM once all values have been updated.\n\nA function can be scheduled to run at each step:\n\n```\n\nlet width = 0\n\nframe.read(() => {\n  width = element.getBoundingClientRect().width\n})\n\nframe.update(() => {\n  width = width * 2\n})\n\nframe.render(() => {\n  element.style.width = width + \"px\"\n})\n```\n\nCopy\n\n### [\\#](/motion/frame/\\#\\#cancel-a-callback) Cancel a callback\n\n`cancelFrame` can be used to cancel a callback.\n\n```\n\nimport { frame, cancelFrame } from \"framer-motion\"\n\nframe.read(measureElement)\ncancelFrame(measureElement)\n```\n\nCopy\n\n### [\\#](/motion/frame/\\#\\#keep-alive) Keep-alive\n\nOften, you'll want to run a function every frame. You can do so by passing `true` as the second argument.\n\n```\n\nlet x = 0\n\nframe.update(() => x++, true)\n```\n\nCopy\n\n[Previousstagger](/motion/stagger/) [NextEasing functions](/motion/easing-functions/)\n\n##### On this page\n\n- [Usage](/motion/frame/#usage)\n- [Import](/motion/frame/##import)\n- [Schedule a callback](/motion/frame/##schedule-a-callback)\n- [Cancel a callback](/motion/frame/##cancel-a-callback)\n- [Keep-alive](/motion/frame/##keep-alive)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/frame/",
      "ogUrl": "https://www.framer.com/motion/frame/",
      "title": "frame | Framer for Developers",
      "og:url": "https://www.framer.com/motion/frame/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "frame | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "frame | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/frame/",
      "statusCode": 200,
      "description": "Schedule a function to run on Motion's animation loop.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Schedule a function to run on Motion's animation loop.",
      "twitter:title": "frame | Framer for Developers",
      "og:description": "Schedule a function to run on Motion's animation loop.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Schedule a function to run on Motion's animation loop.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# Reorder\n\nCreate drag-to-reorder effects with a simple set of components.\n\nThe `Reorder` components can be used to create drag-to-reorder lists, like reorderable tabs or todo items.\n\n```\n\nimport { Reorder } from \"framer-motion\"\nimport { useState } from \"react\"\n\nfunction List() {\n  const [items, setItems] = useState([0, 1, 2, 3])\n\n  return (\n    <Reorder.Group axis=\"y\" values={items} onReorder={setItems}>\n      {items.map((item) => (\n        <Reorder.Item key={item} value={item}>\n          {item}\n        </Reorder.Item>\n      ))}\n    </Reorder.Group>\n  )\n}\n```\n\nCopy\n\nFramer Motion 5: Drag to reorder lists - CodeSandbox\n\n## [\\#](https://www.framer.com/motion/reorder/\\#usage) Usage\n\nEvery reorderable list is wrapped in the `Reorder.Group` component.\n\n```\n\nimport { Reorder } from \"framer-motion\"\n\nfunction List() {\n  return (\n    <Reorder.Group>\n\n    </Reorder.Group>\n  )\n}\n```\n\nCopy\n\nBy default, this is rendered as a `<ul>`, but this can be changed with the `as` prop.\n\n```\n\n<Reorder.Group as=\"ol\">\n```\n\nCopy\n\n`Reorder.Group` must be passed the array of values in your reorderable list via the `values` prop.\n\nAdditionally, a `onReorder` event will fire with the latest calculated order. For items to reorder, this must update the `values` state.\n\n```\n\nimport { Reorder } from \"framer-motion\"\n\nfunction List() {\n  const [items, setItems] = useState([0, 1, 2, 3])\n\n  return (\n    <Reorder.Group values={items} onReorder={setItems}>\n\n    </Reorder.Group>\n  )\n}\n```\n\nCopy\n\nTo render each reorderable item, use `Reorder.Item`, passing it the value it represents via the `value` prop.\n\n```\n\nimport { Reorder } from \"framer-motion\"\n\nfunction List() {\n  const [items, setItems] = useState([0, 1, 2, 3])\n\n  return (\n    <Reorder.Group values={items} onReorder={setItems}>\n      {items.map(item => (\n        <Reorder.Item key={item} value={item}>\n          {item}\n        </Reorder.Item>\n      ))}\n    </Reorder.Group>\n  )\n}\n```\n\nCopy\n\nNow, when items are dragged, `onReorder` will fire with a new order.\n\n### [\\#](https://www.framer.com/motion/reorder/\\#\\#layout-animations) Layout animations\n\n`Reorder.Item` components are already configured to perform layout animations, so if new items are added or removed to the reorderable list, surrounding items will animate to their new position automatically.\n\nFramer Motion 5: Drag to reorder tabs - CodeSandbox\n\n### [\\#](https://www.framer.com/motion/reorder/\\#\\#exit-animations) Exit animations\n\n`AnimatePresence` can be used as normal to animate items as they enter/leave the React tree.\n\n```\n\n<AnimatePresence>\n  {items.map(item => (\n    <Reorder.Item\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      key={item}\n    />\n  ))\n</AnimatePresence>\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/reorder/\\#\\#drag-triggers) Drag triggers\n\nBy default, all of a `Reorder.Item` will be draggable. [`useDragControls`](https://www.framer.com/docs/utilities/#usedragcontrols) can be used to define a different component to act as a drag trigger\n\n```\n\nimport { Reorder, useDragControls } from \"framer-motion\"\n\nfunction Item({ value }) {\n  const controls = useDragControls()\n\n  return (\n    <Reorder.Item\n      value={value}\n      dragListener={false}\n      dragControls={controls}\n    >\n      <div\n        className=\"reorder-handle\"\n        onPointerDown={(e) => controls.start(e)}\n      />\n    </Reorder.Item>\n  )\n}\n```\n\nCopy\n\nFramer Motion 5: Drag to reorder lists with drag handle - CodeSandbox\n\n### [\\#](https://www.framer.com/motion/reorder/\\#\\#scrollable-lists) Scrollable lists\n\nIf `Reorder.Item` components are within a scrollable container, that container needs a `layoutScroll` prop so Framer Motion can correctly measure its scroll offset.\n\nIn this example, the scrollable container is the `Reorder.Group`:\n\n```\n\n<Reorder.Group\n  axis=\"y\"\n  onReorder={setItems}\n  layoutScroll\n  style={{ overflowY: \"scroll\" }}\n>\n  {items.map((item) => (\n    <Item key={item} item={item} />\n  ))}\n</Reorder.Group>\n```\n\nCopy\n\nFramer Motion 5: Drag to reorder lists (forked) - CodeSandbox\n\nIf the scrollable container is a normal HTML component it'll need to be converted to a `motion` component with `layoutScroll`.\n\n### [\\#](https://www.framer.com/motion/reorder/\\#\\#z-index) z-index\n\n`Reorder.Item` will automatically set a `z-index` style on the currently dragged item so it appears above the surrounding items.\n\nHowever, `z-index` only affects items with `position !== \"static\"`. So to enable this effect ensure the position of the `Reorder.Item` to `relative` or `absolute`.\n\n## [\\#](https://www.framer.com/motion/reorder/\\#reordergroup-props) Reorder.Group props\n\n#### [\\#](https://www.framer.com/motion/reorder/\\#\\#\\#as) as:string\n\nThe underlying component for `Reorder.Group` to render.\n\nCurrently, this only accepts the name of a HTML element, but in the future will accept any HTML-rendering React component.\n\nDefaults to `\"ul\"`\n\n#### [\\#](https://www.framer.com/motion/reorder/\\#\\#\\#axis) axis:\"x\" \\| \"y\"\n\n**Required**\n\nThe direction of reorder detection.\n\n**Note:** By default, all `Reorder.Item` components will visibly move only on this axis. To allow visual motion (but **not** reordering) on both axes, pass the `drag` prop to child `Reorder.Item` components.\n\n#### [\\#](https://www.framer.com/motion/reorder/\\#\\#\\#values) values:any\\[\\]\n\n**Required**\n\nThe values array used as the source for the rendered `Reorder.Item` components.\n\n#### [\\#](https://www.framer.com/motion/reorder/\\#\\#\\#onreorder) onReorder(newOrder):void\n\n**Required**\n\nA callback that will fire when items are detected to have reordered. The provided `newOrder` should be passed to a `values` state update function.\n\n## [\\#](https://www.framer.com/motion/reorder/\\#reorderitem-props) Reorder.Item props\n\n`Reorder.Item` components accept all [motion component props](https://www.framer.com/docs/component/#props) in addition to the following:\n\n#### [\\#](https://www.framer.com/motion/reorder/\\#\\#\\#as) as:string\n\nThe underlying component for `Reorder.Item` to render.\n\nCurrently, this only accepts the name of a HTML element, but in the future will accept any HTML-rendering React component.\n\nDefaults to `\"li\"`\n\n#### [\\#](https://www.framer.com/motion/reorder/\\#\\#\\#value) value:any\n\n**Required**\n\nWhen `onReorder` is called, this is the value that will be passed through in the newly ordered array.\n\n[PreviousMotionConfig](https://www.framer.com/motion/motion-config/) [NextMotion values overview](https://www.framer.com/motion/motionvalue/)\n\n##### On this page\n\n- [Usage](https://www.framer.com/motion/reorder/#usage)\n- [Layout animations](https://www.framer.com/motion/reorder/##layout-animations)\n- [Exit animations](https://www.framer.com/motion/reorder/##exit-animations)\n- [Drag triggers](https://www.framer.com/motion/reorder/##drag-triggers)\n- [Scrollable lists](https://www.framer.com/motion/reorder/##scrollable-lists)\n- [z-index](https://www.framer.com/motion/reorder/##z-index)\n- [Reorder.Group props](https://www.framer.com/motion/reorder/#reordergroup-props)\n- [Reorder.Item props](https://www.framer.com/motion/reorder/#reorderitem-props)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).\n\n![](https://t.co/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=df9fa3f1-7da6-4f25-be3e-ade76449e47a&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=e016ef6b-e8df-4d27-b5fa-6a8d88e89253&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Freorder%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)td.doubleclick.net\n\n# td.doubleclick.net is blocked\n\nThis page has been blocked by an extension\n\n- Try disabling your extensions.\n\nERR\\_BLOCKED\\_BY\\_CLIENT\n\nnull\n\nReload\n\nThis page has been blocked by an extension\n\n![](<Base64-Image-Removed>)![](<Base64-Image-Removed>)![](https://analytics.twitter.com/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=df9fa3f1-7da6-4f25-be3e-ade76449e47a&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=e016ef6b-e8df-4d27-b5fa-6a8d88e89253&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Freorder%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)",
    "metadata": {
      "url": "https://www.framer.com/motion/reorder/",
      "ogUrl": "https://www.framer.com/motion/reorder/",
      "title": "Reorder | Framer for Developers",
      "og:url": "https://www.framer.com/motion/reorder/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "Reorder | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "Reorder | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/reorder/",
      "statusCode": 200,
      "description": "Create drag-to-reorder effects with a simple set of components.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Create drag-to-reorder effects with a simple set of components.",
      "twitter:title": "Reorder | Framer for Developers",
      "og:description": "Create drag-to-reorder effects with a simple set of components.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Create drag-to-reorder effects with a simple set of components.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# LayoutCamera\n\nA perspective camera that integrates React Three Fiber with Framer Motion's layout animations.\n\nFramer Motion's [layout animations](https://www.framer.com/docs/animation/#layout-animations) work via the `transform` style for the best possible performance. When HTML elements are transformed with a `scale`, they can become distorted.\n\nWith `LayoutCamera`, we can pre-distort a 3D scene so that when the CSS `transform` is applied, it looks correct throughout the layout animation.\n\n## [\\#](https://www.framer.com/motion/layoutcamera/\\#usage) Usage\n\nTo implement `LayoutCamera`, we first need to replace `Canvas` from `@react-three/fiber` with `MotionCanvas` from `framer-motion-3d`.\n\nThen, `LayoutCamera` can be added anywhere within [`MotionCanvas`](https://www.framer.com/docs/motioncanvas/):\n\n```\n\n// index.js\nimport { motion } from \"framer-motion\"\nimport { Scene } from \"./scene\"\n\nconst fullscreen = { position: \"fixed\", inset: 0 }\n\nexport function App({ isFullscreen }) {\n  return (\n    <motion.div\n      layout\n      style={isFullscreen ? fullscreen : {}}\n    >\n      <Scene />\n    </motion.div>\n  )\n}\n\n// scene.js\nimport { MotionCanvas, LayoutCamera } from \"framer-motion-3d\"\n\nexport function Scene() {\n  <MotionCanvas>\n    <LayoutCamera position={[0, 0, 5]} />\n    <Box />\n  </MotionCanvas>\n}\n```\n\nCopy\n\nWhen a parent HTML `motion` component performs a layout animation, the perspective will be automatically corrected.\n\n## [\\#](https://www.framer.com/motion/layoutcamera/\\#props) Props\n\nInternally, `LayoutCamera` renders a `<motion.perspectiveCamera />` component, so it can accept all the usual React Three Fiber props like `position` and `fov`, as well as `motion` props like `initial` and `animate`.\n\n```\n\n<LayoutCamera\n  position={[0, 0, 5]}\n  animate={{ fov: 45 }}\n  transition={{ duration: 2 }}\n/>\n```\n\nCopy\n\n[Previous3D: Introduction](https://www.framer.com/motion/three-introduction/) [NextLayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n\n##### On this page\n\n- [Usage](https://www.framer.com/motion/layoutcamera/#usage)\n- [Props](https://www.framer.com/motion/layoutcamera/#props)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/layoutcamera/",
      "ogUrl": "https://www.framer.com/motion/layoutcamera/",
      "title": "LayoutCamera | Framer for Developers",
      "og:url": "https://www.framer.com/motion/layoutcamera/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "LayoutCamera | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "LayoutCamera | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/layoutcamera/",
      "statusCode": 200,
      "description": "A perspective camera that integrates React Three Fiber with Framer Motion's layout animations.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "A perspective camera that integrates React Three Fiber with Framer Motion's layout animations.",
      "twitter:title": "LayoutCamera | Framer for Developers",
      "og:description": "A perspective camera that integrates React Three Fiber with Framer Motion's layout animations.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "A perspective camera that integrates React Three Fiber with Framer Motion's layout animations.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# useReducedMotion\n\nA hook that determines whether the user prefers reduced motion.\n\nA hook that returns `true` if the current device has Reduced Motion setting enabled.\n\nThis can be used to implement changes to your UI based on Reduced Motion. For instance, replacing potentially motion-sickness inducing `x`/ `y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\n\nIt will actively respond to changes and re-render your components with the latest setting.\n\n```\n\nexport function Sidebar({ isOpen }) {\n  const shouldReduceMotion = useReducedMotion()\n  const closedX = shouldReduceMotion ? 0 : \"-100%\"\n\n  return (\n    <motion.div animate={{\n      opacity: isOpen ? 1 : 0,\n      x: isOpen ? 0 : closedX\n    }} />\n  )\n}\n```\n\nCopy\n\n## [\\#](/motion/use-reduced-motion/\\#usage) Usage\n\nImport `useReducedMotion` from Framer Motion.\n\n```\n\nimport { useReducedMotion } from \"framer-motion\"\n```\n\nCopy\n\nIn any component, call `useReducedMotion` to check whether the device's Reduced Motion setting is enabled.\n\n```\n\nconst prefersReducedMotion = useReducedMotion()\n```\n\nCopy\n\nYou can then use this `true`/ `false` value to change your application logic.\n\n[PrevioususeInView](/motion/use-in-view/) [Nextanimate](/motion/animate-function/)\n\n##### On this page\n\n- [Usage](/motion/use-reduced-motion/#usage)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/use-reduced-motion/",
      "ogUrl": "https://www.framer.com/motion/use-reduced-motion/",
      "title": "useReducedMotion | Framer for Developers",
      "og:url": "https://www.framer.com/motion/use-reduced-motion/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "useReducedMotion | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "useReducedMotion | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/use-reduced-motion/",
      "statusCode": 200,
      "description": "A hook that determines whether the user prefers reduced motion.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "A hook that determines whether the user prefers reduced motion.",
      "twitter:title": "useReducedMotion | Framer for Developers",
      "og:description": "A hook that determines whether the user prefers reduced motion.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "A hook that determines whether the user prefers reduced motion.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# stagger\n\nA function for staggering animations across elements.\n\nWhen animating elements with the [animate](https://www.framer.com/motion/animate-function/) function, it's possible to stagger animations across them using stagger().\n\n## [\\#](https://www.framer.com/motion/stagger/\\#usage) Usage\n\nImport from `\"framer-motion\"`.\n\n```\n\n// React\nimport { useAnimate, stagger } from \"framer-motion\"\n\n// Universal\nimport { animate, stagger } from \"framer-motion/dom\"\n```\n\nCopy\n\nWhen animating more than one element, pass `stagger` to the `delay` option.\n\n```\n\nanimate(\"li\", { opacity: 1 }, { delay: stagger(0.1) })\n```\n\nCopy\n\nBy passing a duration, in seconds, to `stagger`, the `delay` of each element will be increased by that amount for each.\n\n## [\\#](https://www.framer.com/motion/stagger/\\#options) Options\n\n`stagger` can accept options as the second argument.\n\n```\n\nstagger(0.1, { from: \"center\" })\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/stagger/\\#\\#\\#from) from:\"first\" \\| \"last\" \\| \"center\" \\| number\n\nThe element to stagger out from. This can either be the `\"first\"`, `\"last\"` or `\"center\"` element. Or, by passing a number, animations can stagger out from a custom index.\n\n```\n\n// Stagger out from the third element (index: 2)\nstagger(0.1, { from: 2 })\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/stagger/\\#\\#\\#ease) ease:Easing\n\nBy passing an easing function, staggers can be redistributed through the total stagger time.\n\nAny valid Framer Motion easing is accepted, like a cubic bezier defintion:\n\n```\n\nstagger(0.1, { ease: [.32, .23, .4, .9] })\n```\n\nCopy\n\nName of an easing function:\n\n```\n\nstagger(0.1, { ease: \"easeOut\" })\n```\n\nCopy\n\nOr an easing function:\n\n```\n\nstagger(0.1, { ease: p => Math.sin(p) })\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/stagger/\\#\\#\\#startdelay) startDelay:number\n\nA delay, in seconds, from which to start the stagger from.\n\n```\n\nstagger(0.5, { startDelay: 1 }) // 1, 1.5, 2...\n```\n\nCopy\n\n[Previoustransform](https://www.framer.com/motion/transform-function/) [Nextframe](https://www.framer.com/motion/frame/)\n\n##### On this page\n\n- [Usage](https://www.framer.com/motion/stagger/#usage)\n- [Options](https://www.framer.com/motion/stagger/#options)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/stagger/",
      "ogUrl": "https://www.framer.com/motion/stagger/",
      "title": "stagger | Framer for Developers",
      "og:url": "https://www.framer.com/motion/stagger/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "stagger | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "stagger | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/stagger/",
      "statusCode": 200,
      "description": "A function for staggering animations across elements.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "A function for staggering animations across elements.",
      "twitter:title": "stagger | Framer for Developers",
      "og:description": "A function for staggering animations across elements.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "A function for staggering animations across elements.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# Transition\n\nA transition defines how values animate from one state to another.\n\nA `transition` defines the type of animation used when animating between two values.\n\n```\n\n<motion.div\n  animate={{ x: 100 }}\n  transition={{ delay: 1 }}\n/>\n```\n\nCopy\n\nFramer Motion: Transition prop - CodeSandbox\n\nIt can also accept props that define which type of animation to use a `Tween`, `Spring` or `Inertia`.\n\n```\n\n<motion.div\n  animate={{ x: 100 }}\n  transition={{ type: \"spring\", stiffness: 100 }}\n/>\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/transition/\\#\\#value-specific-transitions) Value-specific transitions\n\nA different set of transition settings can be defined for each specific value.\n\n```\n\ntransition={{\n  ease: \"linear\",\n  duration: 2,\n  x: { duration: 1 }\n}}\n```\n\nCopy\n\nFramer Motion: Value-specific transitions - CodeSandbox\n\n## [\\#](https://www.framer.com/motion/transition/\\#orchestration) Orchestration\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#delay) delay:number\n\nDelay the animation by this duration (in seconds). Defaults to `0`.\n\n```\n\nconst transition = {\n  delay: 0.2\n}\n```\n\nCopy\n\nBy setting `delay` to a negative value, the animation will start that long into the animation. For instance to start 1 second in, `delay` can be set to - `1`.\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#delaychildren) delayChildren:number\n\nWhen using variants, children animations will start after this duration (in seconds). You can add the `transition` property to both the `Frame` and the `variant` directly. Adding it to the `variant` generally offers more flexibility, as it allows you to customize the delay per visual state.\n\n```\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      delayChildren: 0.5\n    }\n  }\n}\n\nconst item = {\n  hidden: { opacity: 0 },\n  show: { opacity: 1 }\n}\n\nreturn (\n  <motion.ul\n    variants={container}\n    initial=\"hidden\"\n    animate=\"show\"\n  >\n    <motion.li variants={item} />\n    <motion.li variants={item} />\n  </motion.ul>\n)\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#staggerchildren) staggerChildren:number\n\nWhen using variants, animations of child components can be staggered by this duration (in seconds).\n\nFor instance, if `staggerChildren` is `0.01`, the first child will be delayed by `0` seconds, the second by `0.01`, the third by `0.02` and so on.\n\nThe calculated stagger delay will be added to `delayChildren`.\n\n```\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.5\n    }\n  }\n}\n\nconst item = {\n  hidden: { opacity: 0 },\n  show: { opacity: 1 }\n}\n\nreturn (\n  <motion.ol\n    variants={container}\n    initial=\"hidden\"\n    animate=\"show\"\n  >\n    <motion.li variants={item} />\n    <motion.li variants={item} />\n  </motion.ol>\n)\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#staggerdirection) staggerDirection:number\n\nThe direction in which to stagger children.\n\nA value of `1` staggers from the first to the last while `-1` staggers from the last to the first.\n\n```\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      delayChildren: 0.5,\n      staggerDirection: -1\n    }\n  }\n}\n\nconst item = {\n  hidden: { opacity: 0 },\n  show: { opacity: 1 }\n}\n\nreturn (\n  <motion.ul\n    variants={container}\n    initial=\"hidden\"\n    animate=\"show\"\n  >\n    <motion.li variants={item} size={50} />\n    <motion.li variants={item} size={50} />\n  </motion.ul>\n)\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#when) when:false \\| \"beforeChildren\" \\| \"afterChildren\" \\| string\n\nDescribes the relationship between the transition and its children. Set to `false` by default.\n\nWhen using variants, the transition can be scheduled in relation to its children with either `\"beforeChildren\"` to finish this transition before starting children transitions, `\"afterChildren\"` to finish children transitions before starting this transition.\n\n```\n\nconst list = {\n  hidden: {\n    opacity: 0,\n    transition: { when: \"afterChildren\" }\n  }\n}\n\nconst item = {\n  hidden: {\n    opacity: 0,\n    transition: { duration: 2 }\n  }\n}\n\nreturn (\n  <motion.ul variants={list} animate=\"hidden\">\n    <motion.li variants={item} />\n    <motion.li variants={item} />\n  </motion.ul>\n)\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#repeat) repeat:number\n\nThe number of times to repeat the transition. Set to `Infinity` for perpetual repeating.\n\nWithout setting `repeatType`, this will loop the animation.\n\n```\n\n<motion.div\n  animate={{ rotate: 180 }}\n  transition={{ repeat: Infinity, duration: 2 }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#repeattype) repeatType:\"loop\" \\| \"reverse\" \\| \"mirror\"\n\nHow to repeat the animation. This can be either:\n\n- `loop`: Repeats the animation from the start\n- `reverse`: Alternates between forward and backwards playback\n- `mirror`: Switches `from` and `to` alternately\n\n```\n\n<motion.div\n  animate={{ rotate: 180 }}\n  transition={{\n    repeat: 1,\n    repeatType: \"reverse\",\n    duration: 2\n  }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#repeatdelay) repeatDelay:number\n\nWhen repeating an animation, `repeatDelay` will set the duration of the time to wait, in seconds, between each repetition.\n\n```\n\n<motion.div\n  animate={{ rotate: 180 }}\n  transition={{ repeat: Infinity, repeatDelay: 1 }}\n/>\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/transition/\\#tween) Tween\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#type) type:\"tween\"\n\nSet `type` to `\"tween\"` to use a duration-based animation. If any non-orchestration `transition` values are set without a `type` property, this is used as the default animation.\n\n```\n\n<motion.path\n  animate={{ pathLength: 1 }}\n  transition={{ duration: 2, type: \"tween\" }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#duration) duration:number\n\nThe duration of the tween animation. Set to `0.3` by default, 0r `0.8` if animating a series of keyframes.\n\n```\n\nconst variants = {\n  visible: {\n    opacity: 1,\n    transition: { duration: 2 }\n  }\n}\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#ease) ease:Easing \\| Easing\\[\\]\n\nThe easing function to use. Set as one of the below.\n\n- The name of an existing easing function.\n- An array of four numbers to define a cubic bezier curve.\n- An easing function, that accepts and returns a value `0-1`.\n\nIf the animating value is set as an array of multiple values for a keyframes animation, `ease` can be set as an array of easing functions to set different easings between each of those values.\n\n```\n\n<motion.div\n  animate={{ opacity: 0 }}\n  transition={{ ease: [0.17, 0.67, 0.83, 0.67] }}\n/>\n```\n\nCopy\n\nThese strings are the built-in named easing functions in Framer.\n\n- `\"linear\"`\n- `\"easeIn\"`, `\"easeOut\"`, `\"easeInOut\"`\n- `\"circIn\"`, `\"circOut\"`, `\"circInOut\"`\n- `\"backIn\"`, `\"backOut\"`, `\"backInOut\"`\n- `\"anticipate\"`\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#from) from:number \\| string\n\nThe value to animate from. By default, this is the current state of the animating value.\n\n```\n\n<motion.div\n  animate={{ rotate: 180 }}\n  transition={{ from: 90, duration: 2 }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#times) times:number\\[\\]\n\nWhen animating keyframes, `times` can be used to determine where in the animation each keyframe is reached. Each value in `times` is a value between `0` and `1`, representing `duration`.\n\nThere must be the same number of `times` as there are keyframes. Defaults to an array of evenly-spread durations.\n\n```\n\n<motion.div\n  animate={{ scale: [0, 1, 0.5, 1] }}\n  transition={{ times: [0, 0.1, 0.9, 1] }}\n/>\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/transition/\\#spring) Spring\n\nAn animation that simulates spring physics for realistic motion.\n\nThis is the default animation for physical values like `x`, `y`, `scale` and `rotate`.\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#type) type:\"spring\"\n\nSet `type` to `\"spring\"` to animate using spring physics for natural movement. Type is set to `\"spring\"` by default.\n\n```\n\n<motion.div\n  animate={{ rotate: 180 }}\n  transition={{ type: 'spring' }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#duration) duration:number\n\nThe duration of the animation, defined in seconds. Spring animations can be a maximum of 10 seconds.\n\nIf `bounce` is set, this defaults to `0.8`.\n\nNote: `duration` and `bounce` will be overridden if `stiffness`, `damping` or `mass` are set.\n\n```\n\n<motion.div\n  animate={{ x: 100 }}\n  transition={{ type: \"spring\", duration: 0.8 }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#bounce) bounce:number\n\n`bounce` determines the \"bounciness\" of a spring animation.\n\n`0` is no bounce, and `1` is extremely bouncy.\n\nIf `duration` is set, this defaults to `0.25`.\n\n**Note:** `bounce` and `duration` will be overridden if `stiffness`, `damping` or `mass` are set.\n\n```\n\n<motion.div\n  animate={{ x: 100 }}\n  transition={{ type: \"spring\", bounce: 0.25 }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#damping) damping:number\n\nStrength of opposing force. If set to 0, spring will oscillate indefinitely. Set to `10` by default.\n\n```\n\n<motion.a\n  animate={{ rotate: 180 }}\n  transition={{ type: 'spring', damping: 300 }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#mass) mass:number\n\nMass of the moving object. Higher values will result in more lethargic movement. Set to `1` by default.\n\n```\n\n<motion.feTurbulence\n  animate={{ baseFrequency: 0.5 } as any}\n  transition={{ type: \"spring\", mass: 0.5 }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#stiffness) stiffness:number\n\nStiffness of the spring. Higher values will create more sudden movement. Set to `100` by default.\n\n```\n\n<motion.section\n  animate={{ rotate: 180 }}\n  transition={{ type: 'spring', stiffness: 50 }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#velocity) velocity:number\n\nThe initial velocity of the spring. By default this is the current velocity of the component.\n\n```\n\n<motion.div\n  animate={{ rotate: 180 }}\n  transition={{ type: 'spring', velocity: 2 }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#restspeed) restSpeed:number\n\nEnd animation if absolute speed (in units per second) drops below this value and delta is smaller than `restDelta`. Set to `0.01` by default.\n\n```\n\n<motion.div\n  animate={{ rotate: 180 }}\n  transition={{ type: 'spring', restSpeed: 0.5 }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#restdelta) restDelta:number\n\nEnd animation if distance is below this value and speed is below `restSpeed`. When animation ends, spring gets “snapped” to. Set to `0.01` by default.\n\n```\n\n<motion.div\n  animate={{ rotate: 180 }}\n  transition={{ type: 'spring', restDelta: 0.5 }}\n/>\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/transition/\\#inertia) Inertia\n\nAn animation that decelerates a value based on its initial velocity, usually used to implement inertial scrolling.\n\nOptionally, `min` and `max` boundaries can be defined, and inertia will snap to these with a spring animation.\n\nThis animation will automatically precalculate a target value, which can be modified with the `modifyTarget` property.\n\nThis allows you to add snap-to-grid or similar functionality.\n\nInertia is also the animation used for `dragTransition`, and can be configured via that prop.\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#type) type:\"inertia\"\n\nSet `type` to animate using the inertia animation. Set to `\"tween\"` by default. This can be used for natural deceleration, like momentum scrolling.\n\n```\n\n<motion.div\n  animate={{ rotate: 180 }}\n  transition={{ type: \"inertia\", velocity: 50 }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#modifytarget) modifyTarget(v):number\n\nA function that receives the automatically-calculated target and returns a new one. Useful for snapping the target to a grid.\n\n```\n\n<motion.div\n  drag\n  dragTransition={{\n    power: 0,\n    // Snap calculated target to nearest 50 pixels\n    modifyTarget: target => Math.round(target / 50) * 50\n  }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#bouncestiffness) bounceStiffness:number\n\nIf `min` or `max` is set, this affects the stiffness of the bounce spring. Higher values will create more sudden movement. Set to `500` by default.\n\n```\n\n<motion.div\n  drag\n  dragTransition={{\n    min: 0,\n    max: 100,\n    bounceStiffness: 100\n  }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#bouncedamping) bounceDamping:number\n\nIf `min` or `max` is set, this affects the damping of the bounce spring. If set to `0`, spring will oscillate indefinitely. Set to `10` by default.\n\n```\n\n<motion.div\n  drag\n  dragTransition={{\n    min: 0,\n    max: 100,\n    bounceDamping: 8\n  }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#power) power:number\n\nA higher power value equals a further target. Set to `0.8` by default.\n\n```\n\n<motion.div\n  drag\n  dragTransition={{ power: 0.2 }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#timeconstant) timeConstant:number\n\nAdjusting the time constant will change the duration of the deceleration, thereby affecting its feel. Set to `700` by default.\n\n```\n\n<motion.div\n  drag\n  dragTransition={{ timeConstant: 200 }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#restdelta) restDelta:number\n\nEnd the animation if the distance to the animation target is below this value, and the absolute speed is below `restSpeed`. When the animation ends, the value gets snapped to the animation target. Set to `0.01` by default. Generally the default values provide smooth animation endings, only in rare cases should you need to customize these.\n\n```\n\n<motion.div\n  drag\n  dragTransition={{ restDelta: 10 }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#min) min:number\n\nMinimum constraint. If set, the value will \"bump\" against this value (or immediately spring to it if the animation starts as less than this value).\n\n```\n\n<motion.div\n  drag\n  dragTransition={{ min: 0, max: 100 }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#max) max:number\n\nMaximum constraint. If set, the value will \"bump\" against this value (or immediately snap to it, if the initial animation value exceeds this value).\n\n```\n\n<motion.div\n  drag\n  dragTransition={{ min: 0, max: 100 }}\n/>\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/transition/\\#miscellaneous) Miscellaneous\n\n#### [\\#](https://www.framer.com/motion/transition/\\#\\#\\#targetandtransition) TargetAndTransition\n\nAn object that specifies values to animate to. Each value may be set either as a single value, or an array of values.\n\nIt may also option contain these properties:\n\n- `transition`: Specifies transitions for all or individual values.\n- `transitionEnd`: Specifies values to set when the animation finishes.\n\n```\n\nconst target = {\n  x: \"0%\",\n  opacity: 0,\n  transition: { duration: 1 },\n  transitionEnd: { display: \"none\" }\n}\n```\n\nCopy\n\n[PreviousScroll animations](https://www.framer.com/motion/scroll-animations/) [NextMotion components](https://www.framer.com/motion/component/)\n\n##### On this page\n\n- [Value-specific transitions](https://www.framer.com/motion/transition/##value-specific-transitions)\n- [Orchestration](https://www.framer.com/motion/transition/#orchestration)\n- [Tween](https://www.framer.com/motion/transition/#tween)\n- [Spring](https://www.framer.com/motion/transition/#spring)\n- [Inertia](https://www.framer.com/motion/transition/#inertia)\n- [Miscellaneous](https://www.framer.com/motion/transition/#miscellaneous)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/transition/",
      "ogUrl": "https://www.framer.com/motion/transition/",
      "title": "Transition | Framer for Developers",
      "og:url": "https://www.framer.com/motion/transition/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "Transition | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "Transition | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/transition/",
      "statusCode": 200,
      "description": "A transition defines how values animate from one state to another.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "A transition defines how values animate from one state to another.",
      "twitter:title": "Transition | Framer for Developers",
      "og:description": "A transition defines how values animate from one state to another.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "A transition defines how values animate from one state to another.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# Motion components\n\nMotion components are DOM primitives optimised for 60fps animation and gestures.\n\nThere's a `motion` component for every HTML and SVG element, for instance `motion.div`, `motion.circle` etc.\n\nThese work exactly like their static counterparts, but offer props that allow you to:\n\n- [Animate](https://www.framer.com/motion/animation/)\n- [Add drag, pan, hover and tap gestures](https://www.framer.com/motion/gestures/)\n- Respond to gestures and [elements entering the viewport](https://www.framer.com/motion/scroll-animations/) with animation\n- Deeply animate throughout React trees via [variants](https://www.framer.com/motion/animation/#variants)\n\nAnd much more.\n\n## [\\#](https://www.framer.com/motion/component/\\#import) Import\n\nImport `motion` from `\"framer-motion\"`:\n\n```\n\n// React\nimport { motion } from \"framer-motion\"\n\n// React Server Components\nimport * as motion from \"framer-motion/client\"\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/component/\\#supported-values) Supported values\n\n### [\\#](https://www.framer.com/motion/component/\\#\\#value-types) Value types\n\nMotion can animate:\n\n- Numbers: `0`, `10` etc.\n- Strings containing numbers: `\"0vh\"`, `\"10px\"` etc.\n- Colors: Hex, RGB, HSLA.\n- Complex strings containing multiple numbers and/or colors (ie `\"10px 0 #000\"`)\n\nWhen animating to a non-animatable value like `\"block\"`, this value will be set instantly. By setting this value within `transitionEnd`, this value will be set at the end of the animation.\n\n```\n\n<motion.div\n  animate={{\n    x: 0,\n    backgroundColor: \"#000\",\n    boxShadow: \"10px 10px 0 rgba(0, 0, 0, 0.2)\",\n    position: \"fixed\",\n    transitionEnd: {\n      display: \"none\",\n    },\n  }}\n/>\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/component/\\#\\#value-type-conversion) Value type conversion\n\nIn general, values can only be animated between two of the same type (ie two `px`, two `%` etc).\n\nHowever, HTML component's `x`, `y`, `width`, `height`, `top`, `left`, `right` and `bottom` values have enhanced support and can all be animated freely between different value types.\n\n```\n\n<motion.div\n  initial={{ x: \"100%\" }}\n  animate={{ x: \"calc(100vw - 50%)\" }}\n/>\n```\n\nCopy\n\nAdditionally, any color type (hex, HSL, RGB) can animate between each other.\n\n### [\\#](https://www.framer.com/motion/component/\\#\\#transform) Transform\n\nTransform properties are accelerated by the GPU, and therefore animate smoothly. They can be set and animated individually as:\n\n- Translate shortcuts: `x`, `y`, `z`\n- Translate: `translateX`, `translateY`, `translateZ`\n- Scale: `scale`, `scaleX`, `scaleY`\n- Rotate: `rotate`, `rotateX`, `rotateY`, `rotateZ`\n- Skew: `skew`, `skewX`, `skewY`\n- Perspective: `transformPerspective`\n\n`motion` components have enhanced `style` props, allowing you to set them individually there, too.\n\n```\n\n<motion.a\n  whileHover={{ scale: 1.2 }}\n  whileTap={{ scale: 0.8 }}\n  style={{ x: 100 }}\n/>\n```\n\nCopy\n\nFor convenience, transform values are applied in a specific order: translate, scale, rotate, skew.\n\nHowever, you can customize this default order using the [`transformTemplate`](https://www.framer.com/motion/component/###transformtemplate) prop.\n\n```\n\nfunction template({ rotate, x }) {\n  return `rotate(${rotate}) translateX(${x})`\n}\n\nreturn (\n  <motion.div\n    transformTemplate={template}\n    animate={{ rotate: 360 }}\n    style={{ rotate: 0, x: \"calc(50vh - 100px)\" }}\n  />\n)\n```\n\nCopy\n\n**SVG note:** For SVG components, `x`, `y` and `scale` **attributes** (as opposed to the `transform` style) can be set using `attrX`, `attrY` and `attrScale` within animation props.\n\n### [\\#](https://www.framer.com/motion/component/\\#\\#transform-origin) Transform origin\n\n`transform-origin` has three shortcut values that can be set and animated individually:\n\n- `originX`\n- `originY`\n- `originZ`\n\nIf set as numbers, `originX` and `Y` default to a progress value between `0` and `1`. `originZ` defaults to pixels.\n\n```\n\n<motion.div style={{ originX: 0.5 }} />\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/component/\\#\\#css-variables) CSS variables\n\nMotion can animate the value of CSS variables, and also read CSS variables as animation targets.\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#using-pre-defined-css-variables-in-animation) Using pre-defined CSS variables in animation\n\nHTML `motion` components can animate to and from CSS variables, as long as that variable is defined on a component ancestor.\n\n```\n\n<motion.li animate={{ background: \"var(--action)\" }} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#animating-css-variables) Animating CSS variables\n\nBy defining and animating CSS variables, we can use a parent `motion` component to declaratively animate multiple DOM children.\n\nCSS variables are also of an arbitary type, so Motion can't infer their default type. You're able to animate `rotate` as a number because Motion understands that it should be set as `deg`, whereas `'--rotate'` needs to be explicitly set with the unit type, e.g. `'360deg'`.\n\n```\n\n<motion.ul\n  initial={{ '--rotate': '0deg' }}\n  animate={{ '--rotate': '360deg' }}\n  transition={{ duration: 2, repeat: Infinity }}\n>\n  <li style={{ transform: 'rotate(var(--rotate))' }} />\n  <li style={{ transform: 'rotate(var(--rotate))' }} />\n  <li style={{ transform: 'rotate(var(--rotate))' }} />\n</motion.ul>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#svg-line-drawing) SVG line drawing\n\nLine drawing animations can be created with many SVG elements using three special properties: `pathLength`, `pathSpacing` and `pathOffset`.\n\nFramer Motion 5.1 line drawing - CodeSandbox\n\nThese are all set as a value between `0` and `1`, where `1` is the measured length of the path.\n\nPath animations are compatible with `circle`, `ellipse`, `line`, `path`, `polygon`, `polyline` and `rect` elements.\n\n## [\\#](https://www.framer.com/motion/component/\\#custom-components) Custom components\n\nAny component can be turned into a `motion` component by wrapping it with the `motion.create()` function.\n\nThe provided component **must** forward `ref` to the DOM element you want to animate.\n\nIn addition, `motion.create()` **must not** be called inside a React render function.\n\n```\n\nconst Component = React.forwardRef((props, ref) => (\n    <div ref={ref} />\n))\n\nconst MotionComponent = motion.create(Component)\n```\n\nCopy\n\nIt's also possible to pass strings to `motion`, which will create custom DOM elements.\n\n```\n\n// Will render <custom-element /> into HTML\nconst MotionComponent = motion.create('custom-element')\n```\n\nCopy\n\nBy default, all `motion` props (like `animate` etc) are filtered out of the `props` forwarded to the provided component. By providing a `forwardMotionProps` config, the provided component will receive these props.\n\n```\n\nmotion.create(Component, { forwardMotionProps: true })\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/component/\\#\\#performance) Performance\n\nMotion animates values outside the React render cycle for increased performance.\n\nUsing `MotionValues instead of state to update visual properties will also avoid re-renders.`\n\nWhere possible, animate just [transform values](https://www.framer.com/motion/component/##transform) and opacity, as they are GPU-accelerated. This way, you can animate hundreds of layers on modern mobile devices.\n\n```\n\n// GPU accelerated (fast)\n<motion.div style={{ x: 0 }} animate={{ x: 100 }} />\n\n// CPU drawing (slower)\n<motion.div style={{ left: 0 }} animate={{ left: 100 }} />\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/component/\\#\\#server-side-rendering) Server-side rendering\n\n`motion` components are fully compatible with server-side rendering, meaning the initial state of a component will be reflected in the server-generated output.\n\n```\n\n// Server will output `translateX(100px)`\n<motion.div initial={false} animate={{ x: 100 }} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#exceptions) Exceptions\n\nThe following SVG values are not currently compatible with server-side rendering: `scale`, `rotate`, `pathLength`, `pathOffset` and `pathSpacing`.\n\n`scale` and `rotate` rely on the dynamic calculation of `transformOrigin` \\- `originX` and `originY` should be set as strings (either `px` or `%`) to support these server side.\n\n```\n\n<motion.circle\n  style={{ scale: 2, originX: \"100px\", originY: \"100px\" }}\n/>\n```\n\nCopy\n\n`path` values rely on the measurement of the overall path length. Setting `strokeDasharray` to `\"0 1\"` will hide the path until Motion can measure it.\n\n```\n\n<motion.path strokeDasharray=\"0 1\" />\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/component/\\#props) Props\n\n**Note:** Additional props can be found on the [gestures](https://www.framer.com/motion/gestures/) and [scroll animation](https://www.framer.com/motion/scroll-animations/) pages.\n\n### [\\#](https://www.framer.com/motion/component/\\#\\#animation) Animation\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#initial) initial:boolean \\| Target \\| VariantLabels\n\nProperties, variant label or array of variant labels to start in.\n\nSet to `false` to initialise with the values in `animate` (disabling the mount animation).\n\n```\n\n// As values\n<motion.div initial={{ opacity: 1 }} />\n\n// As variant\n<motion.div initial=\"visible\" variants={variants} />\n\n// Multiple variants\n<motion.div initial={[\"visible\", \"active\"]} variants={variants} />\n\n// As false (disable mount animation)\n<motion.div initial={false} animate={{ opacity: 0 }} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#animate) animate:AnimationControls \\| TargetAndTransition \\| VariantLabels \\| boolean\n\nValues to animate to, variant label(s), or `AnimationControls`.\n\n```\n\n// As values\n<motion.div animate={{ opacity: 1 }} />\n\n// As variant\n<motion.div animate=\"visible\" variants={variants} />\n\n// Multiple variants\n<motion.div animate={[\"visible\", \"active\"]} variants={variants} />\n\n// AnimationControls\n<motion.div animate={animation} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#exit) exit:TargetAndTransition \\| VariantLabels\n\nA target to animate to when this component is removed from the tree.\n\nThis component **must** be the first animatable child of an `AnimatePresence` to enable this exit animation.\n\nThis limitation exists because React doesn't allow components to defer unmounting until after an animation is complete. Once this limitation is fixed, the `AnimatePresence` component will be unnecessary.\n\n```\n\nimport { AnimatePresence, motion } from 'framer-motion'\n\nexport const MyComponent = ({ isVisible }) => {\n  return (\n    <AnimatePresence>\n       {isVisible && (\n         <motion.div\n           initial={{ opacity: 0 }}\n           animate={{ opacity: 1 }}\n           exit={{ opacity: 0 }}\n         />\n       )}\n    </AnimatePresence>\n  )\n}\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#transition) transition:Transition\n\nDefault transition. If no `transition` is defined in `animate`, it will use the transition defined here.\n\n```\n\nconst spring = {\n  type: \"spring\",\n  damping: 10,\n  stiffness: 100\n}\n\n<motion.div transition={spring} animate={{ scale: 1.2 }} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#variants) variants:Variants\n\nVariants allow you to define animation states and organise them by name. They allow you to control animations throughout a component tree by switching a single `animate` prop.\n\nUsing `transition` options like `delayChildren` and `staggerChildren`, you can orchestrate when children animations play relative to their parent.\n\nAfter passing variants to one or more `motion` component's `variants` prop, these variants can be used in place of values on the `animate`, `initial`, `whileFocus`, `whileTap` and `whileHover` props.\n\n```\n\nconst variants = {\n  active: {\n      backgroundColor: \"#f00\"\n  },\n  inactive: {\n    backgroundColor: \"#fff\",\n    transition: { duration: 2 }\n  }\n}\n\n<motion.div variants={variants} animate=\"active\" />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#style) style:MotionStyle\n\nThe React DOM `style` prop, enhanced with support for `MotionValue` s and separate `transform` values.\n\n```\n\nexport const MyComponent = () => {\n  const x = useMotionValue(0)\n\n  return <motion.div style={{ x, opacity: 1, scale: 0.5 }} />\n}\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/component/\\#\\#layout-animation) Layout animation\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#layout) layout:boolean \\| \"position\" \\| \"size\"\n\nIf `true`, this component will automatically animate to its new position when its layout changes.\n\nThis will perform a layout animation using performant transforms. Part of this technique involved animating an element's scale. This can introduce visual distortions on children, `boxShadow` and `borderRadius`.\n\nTo correct distortion on immediate children, add `layout` to those too.\n\n`boxShadow` and `borderRadius` will automatically be corrected if they are already being animated on this component. Otherwise, set them directly via the `initial` prop.\n\nIf `layout` is set to `\"position\"`, only its position will animate. This is good for text components that don't often look good when stretched.\n\nIf `layout` is set to `\"size\"`, only its size will animate.\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#layoutid) layoutId:string\n\nWhen a component with a layoutId is removed from the React tree, and then added elsewhere, it will visually animate from the previous component's bounding box and its latest animated values.\n\nIf the previous component remains in the tree it will crossfade to the new one.\n\n```\n\n{items.map(item => (\n   <motion.li layout>\n      {item.name}\n      {item.isSelected && <motion.div layoutId=\"underline\" />}\n   </motion.li>\n))}\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#layoutdependency) layoutDependency:any\n\nLayout changes are, by default, detected every render. To improve performance, you can hint when layout changes are likely to take place by passing a value to `layoutDependency`.\n\nThe `motion` component will then only measure itself when the passed value changes, or if the `layoutDependency` of another `motion` component within the same `LayoutGroup` changes.\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#layoutscroll) layoutScroll:boolean\n\nFor layout animations to work correctly within scrollable elements, their scroll offset needs measuring. For performance reasons, Framer Motion doesn't measure the scroll offset of every ancestor. Add the `layoutScroll` prop to elements that should be measured.\n\n```\n\n<motion.div layoutScroll style={{ overflow: \"scroll\" }}>\n  <motion.div layout />\n</motion.div>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#onlayoutanimationstart) onLayoutAnimationStart():void\n\nA callback that will fire when a layout animation on this component starts.\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#onlayoutanimationcomplete) onLayoutAnimationComplete():void\n\nA callback that will fire when a layout animation on this component completes.\n\n### [\\#](https://www.framer.com/motion/component/\\#\\#animation-events) Animation events\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#onupdate) onUpdate(latest):void\n\nCallback with latest motion values, fired max once per frame.\n\nlatest:ResolvedValues\n\n```\n\nfunction onUpdate(latest) {\n  console.log(latest.x, latest.opacity)\n}\n\n<motion.div animate={{ x: 100, opacity: 0 }} onUpdate={onUpdate} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#onanimationstart) onAnimationStart():void\n\nCallback when animation defined in `animate` begins.\n\n```\n\nfunction onStart() {\n  console.log(\"Animation started\")\n}\n\n<motion.div animate={{ x: 100 }} onAnimationStart={onStart} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#onanimationcomplete) onAnimationComplete(definition):void\n\nCallback when animation defined in `animate` is complete.\n\nThe provided callback will be called the triggering animation definition. If this is a variant, it'll be the variant name, and if a target object then it'll be the target object.\n\nThis way, it's possible to figure out which animation has completed.\n\ndefinition:AnimationDefinition\n\n```\n\nfunction onComplete() {\n  console.log(\"Animation completed\")\n}\n\n<motion.div\n  animate={{ x: 100 }}\n  onAnimationComplete={definition => {\n    console.log('Completed animating', definition)\n  }}\n/>\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/component/\\#\\#gestures) Gestures\n\nMotion extends the basic set of event listeners provided by React with a simple yet powerful set of UI gesture recognisers.\n\nLearn more\n\n### [\\#](https://www.framer.com/motion/component/\\#\\#advanced) Advanced\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#inherit) inherit:boolean\n\nSet to `false` to prevent inheriting variant changes from its parent.\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#custom) custom:any\n\nCustom data to use to resolve dynamic variants differently for each animating component.\n\n```\n\nconst variants = {\n  visible: (custom) => ({\n    opacity: 1,\n    transition: { delay: custom * 0.2 }\n  })\n}\n\n<motion.div custom={0} animate=\"visible\" variants={variants} />\n<motion.div custom={1} animate=\"visible\" variants={variants} />\n<motion.div custom={2} animate=\"visible\" variants={variants} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/component/\\#\\#\\#transformtemplate) transformTemplate(transform, generatedTransform):string\n\nWhen animating independent transforms like `x`, `scale` etc, Motion generates a `transform` style with these transforms in a intuitive order.\n\n`transformTemplate` can be used to create a different order, or to append/preprend the automatically generated `transform` property.\n\ntransform:TransformProperties\n\nThe latest animated transform props\n\ngeneratedTransform:string\n\nThe transform string as automatically generated by Framer Motion\n\nreturns:string\n\n```\n\n<motion.div\n  style={{ x: 0, rotate: 180 }}\n  transformTemplate={\n    ({ x, rotate }) => `rotate(${rotate}deg) translateX(${x}px)`\n  }\n/>\n```\n\nCopy\n\n**Note:** `transformTemplate` only applies to independent transforms. It has no effect when animating `transform` directly.\n\n```\n\n<motion.div\n  animate={{ transform: \"translateX(100px)\" }}\n  // No effect!\n  transformTemplate={\n    ({ x, rotate }) => `rotate(${rotate}deg) translateX(${x}px)`\n  }\n/>\n```\n\nCopy\n\n[PreviousTransition](https://www.framer.com/motion/transition/) [NextAnimatePresence](https://www.framer.com/motion/animate-presence/)\n\n##### On this page\n\n- [Import](https://www.framer.com/motion/component/#import)\n- [Supported values](https://www.framer.com/motion/component/#supported-values)\n- [Value types](https://www.framer.com/motion/component/##value-types)\n- [Value type conversion](https://www.framer.com/motion/component/##value-type-conversion)\n- [Transform](https://www.framer.com/motion/component/##transform)\n- [Transform origin](https://www.framer.com/motion/component/##transform-origin)\n- [CSS variables](https://www.framer.com/motion/component/##css-variables)\n- [Custom components](https://www.framer.com/motion/component/#custom-components)\n- [Performance](https://www.framer.com/motion/component/##performance)\n- [Server-side rendering](https://www.framer.com/motion/component/##server-side-rendering)\n- [Props](https://www.framer.com/motion/component/#props)\n- [Animation](https://www.framer.com/motion/component/##animation)\n- [Layout animation](https://www.framer.com/motion/component/##layout-animation)\n- [Animation events](https://www.framer.com/motion/component/##animation-events)\n- [Gestures](https://www.framer.com/motion/component/##gestures)\n- [Advanced](https://www.framer.com/motion/component/##advanced)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/component/",
      "ogUrl": "https://www.framer.com/motion/component/",
      "title": "Motion components | Framer for Developers",
      "og:url": "https://www.framer.com/motion/component/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "Motion components | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "Motion components | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/component/",
      "statusCode": 200,
      "description": "Motion components are DOM primitives optimised for 60fps animation and gestures.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Motion components are DOM primitives optimised for 60fps animation and gestures.",
      "twitter:title": "Motion components | Framer for Developers",
      "og:description": "Motion components are DOM primitives optimised for 60fps animation and gestures.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Motion components are DOM primitives optimised for 60fps animation and gestures.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# Gestures\n\nA powerful gesture recognition system for the browser.\n\nMotion extends the basic set of event listeners provided by React with a simple yet powerful set of UI gesture recognisers.\n\nIt currently has support for hover, tap, pan and drag gesture detection. Each gesture has a series of event listeners that you can attach to your `motion` component.\n\n## [\\#](https://www.framer.com/motion/gestures/\\#animation-helpers) Animation helpers\n\n`motion` components provide multiple gesture animation props: `whileHover`, `whileTap`, `whileFocus`, `whileDrag` and [`whileInView`](https://www.framer.com/docs/scroll-animations/#scroll-triggered-animations). These can define animation targets to temporarily animate to while a gesture is active.\n\n```\n\n<motion.button\n  whileHover={{\n    scale: 1.2,\n    transition: { duration: 1 },\n  }}\n  whileTap={{ scale: 0.9 }}\n/>\n```\n\nCopy\n\nAll props can be set either as a target of values to animate to, or the name of any variants defined via the `variants` prop. Variants will flow down through children as normal.\n\n```\n\n<motion.button\n  whileTap=\"tap\"\n  whileHover=\"hover\"\n  variants={buttonVariants}\n>\n  <svg>\n    <motion.path variants={iconVariants} />\n  </svg>\n</motion.button>\n```\n\nCopy\n\n`motion` components automatically manage the interplay between these `while` props. So for instance, if hovering starts and stops while the tap gesture is active, the tap gesture receives priority and any properties defined on both will remain in their tapped state.\n\nLikewise, if both gestures are defined and tapping ends, the component will know to animate either to the state defined in `whileHover`, or the component's original state, depending on whether tapping ends inside or outside of the component.\n\n### [\\#](https://www.framer.com/motion/gestures/\\#\\#propagation) Propagation\n\nChildren can stop pointer events propagating to parent `motion` components using the `Capture` React props.\n\nFor instance, a child can stop drag and tap gestures and their related `while` animations from firing on parents by passing `e.stopPropagation()` to `onPointerDownCapture`.\n\n```\n\n<motion.div whileTap={{ scale: 2 }}>\n  <button onPointerDownCapture={e => e.stopPropagation()} />\n</motion.div>\n```\n\nCopy\n\n### [\\#](https://www.framer.com/motion/gestures/\\#\\#a-note-on-svg-filters) A note on SVG filters\n\nThe `while` helper properties won't work on SVG `filter` components, as these elements don't have a physical presence and therefore don't receive events. To respond to gestures, you need to introduce React state to the component and attach listeners to the physical element.\n\n```\n\nconst MyComponent = () => {\n  const [isHovered, setHovered] = useState(false)\n\n  // Simplified example\n  return (\n    <svg>\n      <image\n        filter=\"url(#blur)\"\n        onMouseEnter={() => setHovered(true)}\n        onMouseLeave={() => setHovered(false)}\n      />\n      <filter id=\"blur\">\n        <motion.div\n          initial={false}\n          animate={{ stdDeviation: isHovered ? 0 : 2 }}\n        />\n      </filter>\n    </svg>\n  )\n}\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/gestures/\\#hover) Hover\n\nThe hover gesture detects when a pointer hovers over or leaves a component.\n\nIt differs from `onMouseEnter` and `onMouseLeave` in that hover is guaranteed to only fire as a result of actual mouse events (as opposed to browser-generated mice events emulated from touch input).\n\n```\n\n<motion.a\n  whileHover={{ scale: 1.2 }}\n  onHoverStart={e => {}}\n  onHoverEnd={e => {}}\n/>\n```\n\nCopy\n\nFramer Motion: Hover animations - CodeSandbox\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#whilehover) whileHover:VariantLabels \\| TargetAndTransition\n\nProperties or variant label to animate to while the hover gesture is recognised.\n\n```\n\n<motion.div whileHover={{ scale: 1.2 }} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#onhoverstart) onHoverStart(event, info):void\n\nCallback function that fires when pointer starts hovering over the component.\n\nevent:MouseEvent\n\ninfo:EventInfo\n\n```\n\n<motion.div onHoverStart={() => console.log('Hover starts')} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#onhoverend) onHoverEnd(event, info):void\n\nCallback function that fires when pointer stops hovering over the component.\n\nevent:MouseEvent\n\ninfo:EventInfo\n\n```\n\n<motion.div onHoverEnd={() => console.log(\"Hover ends\")} />\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/gestures/\\#focus) Focus\n\nThe focus gesture detects when a component gains or loses focus by the same rules as the [CSS :focus-visible selector](https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible).\n\nTypically, this is when an `input` receives focus by any means, and when other elements receive focus by accessible means (like via keyboard navigation).\n\n```\n\n<motion.a\n  whileFocus={{ scale: 1.2 }}\n  href=\"#\"\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#whilefocus) whileFocus:VariantLabels \\| TargetAndTransition\n\nProperties or variant label to animate to while the focus gesture is recognised.\n\n```\n\n<motion.input whileFocus={{ scale: 1.2 }} />\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/gestures/\\#tap) Tap\n\nThe tap gesture detects when the **primary pointer** (like a left click or first touch point) presses down and releases on the same component.\n\nIt fires a `tap` event when tapping successfully completes on a component, and a `tapCancel` event when tapping ends outside the component.\n\nIf the tappable component is a child of a draggable component, it'll automatically cancel the tap gesture if the pointer moves further than 3 pixels during the gesture.\n\nFramer Motion: Press/tap animations - CodeSandbox\n\n### [\\#](https://www.framer.com/motion/gestures/\\#\\#accessibility) Accessibility\n\nElements with tap events are keyboard-accessible.\n\nAny element with a tap prop will be able to receive focus and `Enter` can be used to trigger tap events on focused elements.\n\n- Pressing `Enter` down will trigger `onTapStart` and `whileTap`\n- Releasing `Enter` will trigger `onTap`\n- If the element loses focus before `Enter` is released, `onTapCancel` will fire.\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#whiletap) whileTap:VariantLabels \\| TargetAndTransition\n\nProperties or variant label to animate to while the component is pressed.\n\n```\n\n<motion.div whileTap={{ scale: 0.8 }} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#ontap) onTap(event, info):void\n\nCallback when the tap gesture successfully ends on this element.\n\nevent:MouseEvent \\| TouchEvent \\| PointerEvent\n\nThe originating pointer event\n\ninfo:TapInfo\n\nA `TapInfo` object containing `x` and `y` values for the `point` relative to the device or page\n\n```\n\nfunction onTap(event, info) {\n  console.log(info.point.x, info.point.y)\n}\n\n<motion.div onTap={onTap} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#ontapstart) onTapStart(event, info):void\n\nCallback when the tap gesture starts on this element.\n\nevent:MouseEvent \\| TouchEvent \\| PointerEvent\n\nThe originating pointer event\n\ninfo:TapInfo\n\nA `TapInfo` object containing `x` and `y` values for the `point` relative to the device or page\n\n```\n\nfunction onTapStart(event, info) {\n  console.log(info.point.x, info.point.y)\n}\n\n<motion.div onTapStart={onTapStart} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#ontapcancel) onTapCancel(event, info):void\n\nCallback when the tap gesture ends outside this element.\n\nevent:MouseEvent \\| TouchEvent \\| PointerEvent\n\nThe originating pointer event\n\ninfo:TapInfo\n\nA `TapInfo` object containing `x` and `y` values for the `point` relative to the device or page\n\n```\n\nfunction onTapCancel(event, info) {\n  console.log(info.point.x, info.point.y)\n}\n\n<motion.div onTapCancel={onTapCancel} />\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/gestures/\\#pan) Pan\n\nThe pan gesture recognises when a pointer presses down on a component and moves further than 3 pixels. The pan gesture is ended when the pointer is released.\n\n```\n\n<motion.div onPan={(e, pointInfo) => {}} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#onpan) onPan(event, info):void\n\nCallback function that fires when the pan gesture is recognised on this element.\n\n**Note:** For pan gestures to work correctly with touch input, the element needs touch scrolling to be disabled on either x/y or both axis with the [`touch-action`](https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action) CSS rule.\n\nevent:MouseEvent \\| TouchEvent \\| PointerEvent\n\nThe originating pointer event\n\ninfo:PanInfo\n\nA `PanInfo` object containing `x` and `y` values for:\n\n- `point`: Relative to the device or page.\n- `delta`: Distance moved since the last event.\n- `offset`: Offset from the original pan event.\n- `velocity`: Current velocity of the pointer.\n\n```\n\nfunction onPan(event, info) {\n  console.log(info.point.x, info.point.y)\n}\n\n<motion.div onPan={onPan} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#onpanstart) onPanStart(event, info):void\n\nCallback function that fires when the pan gesture begins on this element.\n\nevent:MouseEvent \\| TouchEvent \\| PointerEvent\n\nThe originating pointer event\n\ninfo:PanInfo\n\nA `PanInfo` object containing `x` and `y` values for:\n\n- `point`: Relative to the device or page.\n- `delta`: Distance moved since the last event.\n- `offset`: Offset from the original pan event.\n- `velocity`: Current velocity of the pointer.\n\n```\n\nfunction onPanStart(event, info) {\n  console.log(info.point.x, info.point.y)\n}\n\n<motion.div onPanStart={onPanStart} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#onpanend) onPanEnd(event, info):void\n\nCallback function that fires when the pan gesture ends on this element.\n\nevent:MouseEvent \\| TouchEvent \\| PointerEvent\n\nThe originating pointer event\n\ninfo:PanInfo\n\nA `PanInfo` object containing `x` and `y` values for:\n\n- `point`: Relative to the device or page.\n- `delta`: Distance moved since the last event.\n- `offset`: Offset from the original pan event.\n- `velocity`: Current velocity of the pointer.\n\n```\n\nfunction onPanEnd(event, info) {\n  console.log(info.point.x, info.point.y)\n}\n\n<motion.div onPanEnd={onPanEnd} />\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/gestures/\\#drag) Drag\n\nThe drag gesture follows the rules of the pan gesture but applies pointer movement to the x and/or y axis of the component.\n\n```\n\n<motion.div drag />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#whiledrag) whileDrag:VariantLabels \\| TargetAndTransition\n\nProperties or variant label to animate to while the drag gesture is recognised.\n\n```\n\n<motion.div whileDrag={{ scale: 1.2 }} />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#drag) drag:boolean \\| \"x\" \\| \"y\"\n\nEnable dragging for this element. Set to `false` by default. Set `true` to drag in both directions. Set `\"x\"` or `\"y\"` to only drag in a specific direction.\n\n```\n\n<motion.div drag=\"x\" />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#dragconstraints) dragConstraints:false \\| Partial<BoundingBox2D> \\| RefObject<Element>\n\nApplies constraints on the permitted draggable area.\n\nIt can accept an object of optional `top`, `left`, `right`, and `bottom` values, measured in pixels. This will define a distance the named edge of the draggable component.\n\nAlternatively, it can accept a `ref` to another component created with React's `useRef` hook. This `ref` should be passed both to the draggable component's `dragConstraints` prop, and the `ref` of the component you want to use as constraints.\n\n```\n\n// In pixels\n<motion.div\n  drag=\"x\"\n  dragConstraints={{ left: 0, right: 300 }}\n/>\n\n// As a ref to another component\nconst MyComponent = () => {\n  const constraintsRef = useRef(null)\n\n  return (\n     <motion.div ref={constraintsRef}>\n         <motion.div drag dragConstraints={constraintsRef} />\n     </motion.div>\n  )\n}\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#dragsnaptoorigin) dragSnapToOrigin:boolean\n\nIf `true`, the draggable element will animate back to its center/origin when released.\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#dragelastic) dragElastic:DragElastic\n\nThe degree of movement allowed outside constraints. 0 = no movement, 1 = full movement.\n\nSet to `0.5` by default. Can also be set as `false` to disable movement.\n\nBy passing an object of `top`/ `right`/ `bottom`/ `left`, individual values can be set per constraint. Any missing values will be set to `0`.\n\n```\n\n<motion.div\n  drag\n  dragConstraints={{ left: 0, right: 300 }}\n  dragElastic={0.2}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#dragmomentum) dragMomentum:boolean\n\nApply momentum from the pan gesture to the component when dragging finishes. Set to `true` by default.\n\n```\n\n<motion.div\n  drag\n  dragConstraints={{ left: 0, right: 300 }}\n  dragMomentum={false}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#dragtransition) dragTransition:InertiaOptions\n\nAllows you to change dragging inertia parameters. When releasing a draggable Frame, an animation with type `inertia` starts. The animation is based on your dragging velocity. This property allows you to customize it.\n\n```\n\n<motion.div\n  drag\n  dragTransition={{ bounceStiffness: 600, bounceDamping: 10 }}\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#dragpropagation) dragPropagation:boolean\n\nAllows drag gesture propagation to child components. Set to `false` by default.\n\n```\n\n<motion.div drag=\"x\" dragPropagation />\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#dragcontrols) dragControls:DragControls\n\nUsually, dragging is initiated by pressing down on a component and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we might want to initiate dragging from a different component than the draggable one.\n\nBy creating a `dragControls` using the `useDragControls` hook, we can pass this into the draggable component's `dragControls` prop. It exposes a `start` method that can start dragging from pointer events on other components.\n\n```\n\nconst dragControls = useDragControls()\n\nfunction startDrag(event) {\n  dragControls.start(event, { snapToCursor: true })\n}\n\nreturn (\n  <>\n    <div onPointerDown={startDrag} />\n    <motion.div drag=\"x\" dragControls={dragControls} />\n  </>\n)\n```\n\nCopy\n\n**Note:** Given that by setting `dragControls` you are taking control of initiating the drag gesture, it is possible to disable the draggable element as the initiator by setting `dragListener={false}`.\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#draglistener) dragListener:boolean\n\nDetermines whether to trigger the drag gesture from event listeners. If passing `dragControls`, setting this to `false` will ensure dragging can only be initiated by the controls, rather than a `pointerdown` event on the draggable element.\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#ondrag) onDrag(event, info):void\n\nCallback function that fires when the component is dragged.\n\nevent:MouseEvent \\| TouchEvent \\| PointerEvent\n\ninfo:PanInfo\n\n```\n\n<motion.div\n  drag\n  onDrag={\n    (event, info) => console.log(info.point.x, info.point.y)\n  }\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#ondragstart) onDragStart(event, info):void\n\nCallback function that fires when dragging starts.\n\nevent:MouseEvent \\| TouchEvent \\| PointerEvent\n\ninfo:PanInfo\n\n```\n\n<motion.div\n  drag\n  onDragStart={\n    (event, info) => console.log(info.point.x, info.point.y)\n  }\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#ondragend) onDragEnd(event, info):void\n\nCallback function that fires when dragging ends.\n\nevent:MouseEvent \\| TouchEvent \\| PointerEvent\n\ninfo:PanInfo\n\n```\n\n<motion.div\n  drag\n  onDragEnd={\n    (event, info) => console.log(info.point.x, info.point.y)\n  }\n/>\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/gestures/\\#\\#\\#ondirectionlock) onDirectionLock(axis):void\n\nCallback function that fires a drag direction is determined.\n\naxis:\"x\" \\| \"y\"\n\n```\n\n<motion.div\n  drag\n  dragDirectionLock\n  onDirectionLock={axis => console.log(axis)}\n/>\n```\n\nCopy\n\n[PreviousLayout animations](https://www.framer.com/motion/layout-animations/) [NextScroll animations](https://www.framer.com/motion/scroll-animations/)\n\n##### On this page\n\n- [Animation helpers](https://www.framer.com/motion/gestures/#animation-helpers)\n- [Propagation](https://www.framer.com/motion/gestures/##propagation)\n- [A note on SVG filters](https://www.framer.com/motion/gestures/##a-note-on-svg-filters)\n- [Hover](https://www.framer.com/motion/gestures/#hover)\n- [Focus](https://www.framer.com/motion/gestures/#focus)\n- [Tap](https://www.framer.com/motion/gestures/#tap)\n- [Accessibility](https://www.framer.com/motion/gestures/##accessibility)\n- [Pan](https://www.framer.com/motion/gestures/#pan)\n- [Drag](https://www.framer.com/motion/gestures/#drag)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/gestures/",
      "ogUrl": "https://www.framer.com/motion/gestures/",
      "title": "Gestures | Framer for Developers",
      "og:url": "https://www.framer.com/motion/gestures/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "Gestures | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "Gestures | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/gestures/",
      "statusCode": 200,
      "description": "A powerful gesture recognition system for the browser.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "A powerful gesture recognition system for the browser.",
      "twitter:title": "Gestures | Framer for Developers",
      "og:description": "A powerful gesture recognition system for the browser.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "A powerful gesture recognition system for the browser.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# useScroll\n\nCreate scroll-linked animations with the useScroll hook.\n\n`useScroll` is used to create scroll-linked animations, like progress indicators and parallax effects.\n\n## [\\#](https://www.framer.com/motion/use-scroll/\\#usage) Usage\n\nImport `useScroll` from Framer Motion.\n\n```\n\nimport { useScroll } from \"framer-motion\"\n```\n\nCopy\n\n`useScroll` returns four [motion values](https://www.framer.com/docs/motionvalue/):\n\n- `scrollX`/ `Y`: The absolute scroll position, in pixels.\n- `scrollXProgress`/ `YProgress`: The scroll position between the defined offsets, as a value between `0` and `1`.\n\n### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#page-scroll) Page scroll\n\nBy default, useScroll tracks the page scroll.\n\n```\n\nconst { scrollY } = useScroll()\n\nuseMotionValueEvent(scrollY, \"change\", (latest) => {\n  console.log(\"Page scroll: \", latest)\n})\n```\n\nCopy\n\nFor example, we could show a page scroll indicator by passing `scrollYProgress` straight to the `scaleX` style of a progress bar.\n\n```\n\nconst { scrollYProgress } = useScroll()\n\nreturn <motion.div style={{ scaleX: scrollYProgress }} />\n```\n\nCopy\n\nFramer Motion: useScroll - CodeSandbox\n\nAs motion values, we can compose scroll info with other motion value hooks like `useTransform` and `useSpring`.\n\n```\n\nconst { scrollYProgress } = useScroll()\nconst scaleX = useSpring(scrollYProgress)\n\nreturn <motion.div style={{ scaleX }} />\n```\n\nCopy\n\nFramer Motion: useScroll with spring smoothing - CodeSandbox\n\n### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#element-scroll) Element scroll\n\nTo track the scroll position of a scrollable element, instead of that of the page, we can pass a `ref` to both `useScroll`'s `container` option and the element.\n\n```\n\nconst carouselRef = useRef(null)\nconst { scrollX } = useScroll({\n  container: carouselRef\n})\n\nreturn (\n  <div ref={carouselRef}>\n    {children}\n  </div>\n)\n```\n\nCopy\n\nFramer Motion: useScroll element scrolling - CodeSandbox\n\n### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#element-position) Element position\n\nWe can track the progress of an element within the container by passing its `ref` to the `target` option.\n\n```\n\nconst ref = useRef(null)\nconst { scrollYProgress } = useScroll({\n  target: ref,\n  offset: [\"start end\", \"end end\"]\n})\n\nreturn  <div ref={ref}>\n```\n\nCopy\n\nIn this example, each item has its own progress indicator.\n\nFramer Motion: Track element position - CodeSandbox\n\n### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#scroll-offsets) Scroll offsets\n\nIn the previous example we've also set the `offset` option.\n\n`offset` is an array of at least two intersections.\n\nAn intersection describes a point when the `target` and `container` meet. So for example, `\"start end\"` means when the **start of the target** meets the **end of the container**.\n\n#### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#\\#accepted-values) Accepted values\n\nBoth target and container points can be defined as:\n\n- **Number:** A value where `0` represents the start of the axis and `1` represents the end. So to define the top of the target with the middle of the container you could define `\"0 0.5\"`. Values outside this range are permitted.\n- **Names:** `\"start\"`, `\"center\"` and `\"end\"` can be used as clear shortcuts for `0`, `0.5` and `1` respectively.\n- **Pixels:** Pixel values like `\"100px\"`, `\"-50px\"` will be defined as that number of pixels from the start of the target/container.\n- **Percent:** Same as raw numbers but expressed as `\"0%\"` to `\"100%\"`.\n- **Viewport:** `\"vh\"` and `\"vw\"` values are accepted.\n\n#### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#\\#shorthand) Shorthand\n\nIt's also possible to define just one value for both target/container.\n\nNamed values are repeated, so `\"center\"` is equivalent to `\"center center\"` and `\"end\"` is equivalent to `\"end end\"`.\n\nNumerical values like `\"100px\"` are applied to the target only, so `\"100px\"` would define when 100 pixels from the top of the target meets the start of the container.\n\n## [\\#](https://www.framer.com/motion/use-scroll/\\#options) Options\n\n#### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#\\#container) container:RefObject<HTMLElement>\n\nThe scrollable container to track the scroll position of. By default, this is the window viewport. But it can be any scrollable element.\n\n#### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#\\#target) target:RefObject<HTMLElement>\n\nBy default, this is the scrollable area of the container. It can additionally be set as another element, to track its progress within the viewport.\n\n#### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#\\#axis) axis:\"x\" \\| \"y\"\n\n**Default:** `\"y\"`\n\nThe scroll axis to apply `offset`.\n\n#### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#\\#offset) offset:\\[string, string\\]\n\n**Default:** `[\"start start\", \"end end\"]`\n\nA list of scroll offsets to use for resolving scroll progress.\n\n## [\\#](https://www.framer.com/motion/use-scroll/\\#examples) Examples\n\n### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#page-scroll-progress) Page scroll progress\n\n### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#spring-smoothing) Spring smoothing\n\n### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#element-scroll-progress) Element scroll progress\n\n### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#track-element-position) Track element position\n\n### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#parallax) Parallax\n\nFramer Motion: Parallax - CodeSandbox\n\n### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#3d) 3D\n\n### [\\#](https://www.framer.com/motion/use-scroll/\\#\\#scroll-velocity) Scroll velocity\n\n[PrevioususeMotionTemplate](https://www.framer.com/motion/use-motion-template/) [NextuseSpring](https://www.framer.com/motion/use-spring/)\n\n##### On this page\n\n- [Usage](https://www.framer.com/motion/use-scroll/#usage)\n- [Page scroll](https://www.framer.com/motion/use-scroll/##page-scroll)\n- [Element scroll](https://www.framer.com/motion/use-scroll/##element-scroll)\n- [Element position](https://www.framer.com/motion/use-scroll/##element-position)\n- [Scroll offsets](https://www.framer.com/motion/use-scroll/##scroll-offsets)\n- [Options](https://www.framer.com/motion/use-scroll/#options)\n- [Examples](https://www.framer.com/motion/use-scroll/#examples)\n- [Page scroll progress](https://www.framer.com/motion/use-scroll/##page-scroll-progress)\n- [Spring smoothing](https://www.framer.com/motion/use-scroll/##spring-smoothing)\n- [Element scroll progress](https://www.framer.com/motion/use-scroll/##element-scroll-progress)\n- [Track element position](https://www.framer.com/motion/use-scroll/##track-element-position)\n- [Parallax](https://www.framer.com/motion/use-scroll/##parallax)\n- [3D](https://www.framer.com/motion/use-scroll/##3d)\n- [Scroll velocity](https://www.framer.com/motion/use-scroll/##scroll-velocity)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/use-scroll/",
      "ogUrl": "https://www.framer.com/motion/use-scroll/",
      "title": "useScroll | Framer for Developers",
      "og:url": "https://www.framer.com/motion/use-scroll/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "useScroll | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "useScroll | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/use-scroll/",
      "statusCode": 200,
      "description": "Create scroll-linked animations with the useScroll hook.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Create scroll-linked animations with the useScroll hook.",
      "twitter:title": "useScroll | Framer for Developers",
      "og:description": "Create scroll-linked animations with the useScroll hook.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Create scroll-linked animations with the useScroll hook.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# useDragControls\n\nManually start/stop dragging on a motion component.\n\nUsually, dragging is initiated by pressing down on a `motion` component with a [`drag prop`](/examples/drag-handle/) and then moving the pointer.\n\nFor some use-cases, for instance clicking at an arbitrary point on a video scrubber, we might want to initiate that dragging from a different component than the draggable one.\n\nWith useDragControls, we can create a set of controls to manually start dragging from any pointer event.\n\n## [\\#](/motion/use-drag-controls/\\#usage) Usage\n\nImport `useDragControls` from Framer Motion.\n\n```\n\nimport { motion, useDragControls } from \"framer-motion\"\n```\n\nCopy\n\nCreate controls by calling the hook, and then pass these to a draggable `motion` component.\n\n```\n\nfunction Component() {\n  const controls = useDragControls()\n\n  return (\n    <>\n      <div />\n      <motion.div drag=\"x\" dragControls={controls} />\n    </>\n  )\n}\n```\n\nCopy\n\nNow we can start a drag session from another any element's `onPointerDown` event via the `start` method.\n\n```\n\nconst controls = useDragControls()\n\nfunction startDrag(event) {\n  controls.start(event)\n}\n\nreturn (\n  <>\n    <div onPointerDown={startDrag} />\n    <motion.div drag=\"x\" dragControls={controls} />\n  </>\n)\n```\n\nCopy\n\n## [\\#](/motion/use-drag-controls/\\#touch-support) Touch support\n\nTo support touch screens, the triggering element should have the `touch-action: none` style applied.\n\n```\n\n<div onPointerDown={startDrag} style={{ touchAction: \"none\" }} />\n```\n\nCopy\n\n## [\\#](/motion/use-drag-controls/\\#snap-to-cursor) Snap to cursor\n\nBy default, the manual drag gesture will only apply changes in the pointer to the `motion` component.\n\nWe can also make the `motion` component immediately snap to the cursor by passing `snapToCursor: true` to the `start` method.\n\n```\n\ncontrols.start(event, { snapToCursor: true })\n```\n\nCopy\n\n## [\\#](/motion/use-drag-controls/\\#blocking-automatic-drag) Blocking automatic drag\n\nWith this configuration, the `motion` component will still automatically start a drag gesture when it receives a `pointerdown` event itself.\n\nWe can stop this behaviour by passing it a `dragListener={false}` prop.\n\n```\n\n<motion.div\n  drag\n  dragListener={false}\n  dragControls={controls}\n/>\n```\n\nCopy\n\n[PrevioususeAnimationFrame](/motion/use-animation-frame/) [NextuseInView](/motion/use-in-view/)\n\n##### On this page\n\n- [Usage](/motion/use-drag-controls/#usage)\n- [Touch support](/motion/use-drag-controls/#touch-support)\n- [Snap to cursor](/motion/use-drag-controls/#snap-to-cursor)\n- [Blocking automatic drag](/motion/use-drag-controls/#blocking-automatic-drag)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).\n\n![](https://t.co/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=53504cfe-eeba-482b-b6c4-2e55a41f4541&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=6e39145d-3690-4c48-9112-f14478df1016&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fuse-drag-controls%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-QZ2MPXED80&gacid=727041808.1731249504&gtm=45je4b70v9101309483z879263478za200zb79263478&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=101823848~101925629&z=147360045)![](https://analytics.twitter.com/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=53504cfe-eeba-482b-b6c4-2e55a41f4541&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=6e39145d-3690-4c48-9112-f14478df1016&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fuse-drag-controls%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)",
    "metadata": {
      "url": "https://www.framer.com/motion/use-drag-controls/",
      "ogUrl": "https://www.framer.com/motion/use-drag-controls/",
      "title": "useDragControls | Framer for Developers",
      "og:url": "https://www.framer.com/motion/use-drag-controls/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "useDragControls | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "useDragControls | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/use-drag-controls/",
      "statusCode": 200,
      "description": "Manually start/stop dragging on a motion component.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Manually start/stop dragging on a motion component.",
      "twitter:title": "useDragControls | Framer for Developers",
      "og:description": "Manually start/stop dragging on a motion component.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Manually start/stop dragging on a motion component.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# mix\n\nMix two numbers, colors, or complex values.\n\n`mix` can interpolate between two values, based on a `progress` value.\n\n```\n\nconst mixer = mix(0, 100)\nmixer(0.5) // 50\n```\n\nCopy\n\n`mix` is capable of mixing between many different value types:\n\n- Numbers\n- Colors (RGBA, HSLA)\n- Complex strings\n- Arrays and objects of the above\n\nAdditionally, RGB color mixing is performed using the [linear RGB color space](https://www.youtube.com/watch?v=LKnqECcg6Gw), ensuring colors are mixed without the typical CSS brightness dips/greyness.\n\n## [\\#](/motion/mix/\\#usage) Usage\n\nImport from Framer Motion.\n\n```\n\n// React\nimport { mix } from \"framer-motion\"\n\n// Universal\nimport { mix } from \"framer-motion/dom\"\n```\n\nCopy\n\nCreate a mixer by passing two values of the same type:\n\n```\n\nconst mixer = mix(0, 100)\nconst mixer = mix(\"#000\", \"#FFF\")\nconst mixer = mix(\n  { a: \"0px\", b: 10 },\n  { a: \"20px\", b: 0 }\n)\n```\n\nCopy\n\nPass the mixer function a `0`- `1` `progress` to return a mixed value.\n\n```\n\nconst mixer = mix(0, 100)\nmixer(0.25) // 25\n```\n\nCopy\n\nValues outside the `0`- `1` range are also accepted.\n\n```\n\nconst mixer = mix(0, 100)\nmixer(2) // 200\nmixer(-1) // -100\n```\n\nCopy\n\n[PreviousinView](/motion/in-view/) [Nexttransform](/motion/transform-function/)\n\n##### On this page\n\n- [Usage](/motion/mix/#usage)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).\n\n[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-QZ2MPXED80&gacid=300254622.1731249505&gtm=45je4b70v9101309483z879263478za200zb79263478&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=101823848~101925629~102017403&z=350909448)",
    "metadata": {
      "url": "https://www.framer.com/motion/mix/",
      "ogUrl": "https://www.framer.com/motion/mix/",
      "title": "mix | Framer for Developers",
      "og:url": "https://www.framer.com/motion/mix/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "mix | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "mix | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/mix/",
      "statusCode": 200,
      "description": "Mix two numbers, colors, or complex values.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Mix two numbers, colors, or complex values.",
      "twitter:title": "mix | Framer for Developers",
      "og:description": "Mix two numbers, colors, or complex values.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Mix two numbers, colors, or complex values.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# useMotionValueEvent\n\nSubscribe to motion value events from a React component.\n\n`useMotionValueEvent` manages [`MotionValue`](/docs/motionvalue/) event handlers throughout the lifecycle of a React component.\n\n```\n\nfunction Component() {\n  const x = useMotionValue(0)\n\n  useMotionValueEvent(x, \"animationStart\", () => {\n    console.log(\"animation started on x\")\n  })\n\n  useMotionValueEvent(x, \"change\", (latest) => {\n    console.log(\"x changed to\", latest)\n  })\n\n  return <motion.div style={{ x }} />\n}\n```\n\nCopy\n\nWhen the component is unmounted, the event handler will be safely unsubscribed automatically.\n\n## [\\#](/motion/use-motion-value-event/\\#usage) Usage\n\nImport from Framer Motion.\n\n```\n\nimport { useMotionValueEvent } from \"framer-motion\"\n```\n\nCopy\n\nTo add an event listener to a `MotionValue`, provide the value, event name, and callback.\n\n```\n\nuseMotionValueEvent(value, \"change\", (latest) => {\n  console.log(latest)\n})\n```\n\nCopy\n\nAvailable events are:\n\n- `change`\n- `animationStart`\n- `animationComplete`\n- `animationCancel`\n\n`\"change\"` events are provided the latest value of the `MotionValue`.\n\n`useMotionValueEvent` is a helper method for `MotionValue.on`. So it is still possible to set up events yourself in a `useEffect`, but remember to pass the `on` unsubscribe function to `useEffect`'s return function to ensure it is correctly cleaned up.\n\n```\n\nuseEffect(() => {\n  const doSomething = () => {}\n\n  const unsubX = x.on(\"change\", doSomething)\n  const unsubY = y.on(\"change\", doSomething)\n\n  return () => {\n    unsubX()\n    unsubY()\n  }\n}, [x, y])\n```\n\nCopy\n\n[PreviousMotion values overview](/motion/motionvalue/) [NextuseMotionTemplate](/motion/use-motion-template/)\n\n##### On this page\n\n- [Usage](/motion/use-motion-value-event/#usage)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/use-motion-value-event/",
      "ogUrl": "https://www.framer.com/motion/use-motion-value-event/",
      "title": "useMotionValueEvent | Framer for Developers",
      "og:url": "https://www.framer.com/motion/use-motion-value-event/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "useMotionValueEvent | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "useMotionValueEvent | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/use-motion-value-event/",
      "statusCode": 200,
      "description": "Subscribe to motion value events from a React component.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Subscribe to motion value events from a React component.",
      "twitter:title": "useMotionValueEvent | Framer for Developers",
      "og:description": "Subscribe to motion value events from a React component.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Subscribe to motion value events from a React component.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# FramerMotion.\n\nComplete documentation of the Framer Motion animation library. A production-ready motion library for React.\n\n[Get started](/motion/introduction/)\n\n#### Animation\n\n#### Variants\n\n#### Gestures\n\n#### Drag\n\n#### Scroll\n\n#### Path\n\n## Production-ready declarative animations.\n\nA simple declarative syntax means you write less code. Less code means your codebase is easier to read and maintain.\n\nTweak the parameters to animate.\n\n```\n\n<motion.div\n  animate={{\n    x: 0,\n    y: 0,\n    scale: 1,\n    rotate: 0,\n  }}\n/>\n```\n\nX\n\nY\n\nScale\n\nRotate\n\n## Animations that work like magic.\n\nWhen animating between two separate components, Framer Motion will take care of everything in between.\n\nTap to open a card.\n\n```\n\nconst [selectedId, setSelectedId] = useState(null)\n\n{items.map(item => (\n  <motion.div layoutId={item.id} onClick={() => setSelectedId(item.id)}>\n    <motion.h5>{item.subtitle}</motion.h5>\n    <motion.h2>{item.title}</motion.h2>\n  </motion.div>\n))}\n\n<AnimatePresence>\n  {selectedId && (\n    <motion.div layoutId={selectedId}>\n      <motion.h5>{item.subtitle}</motion.h5>\n      <motion.h2>{item.title}</motion.h2>\n      <motion.button onClick={() => setSelectedId(null)} />\n    </motion.div>\n  )}\n</AnimatePresence>\n```\n\n## Complex events and gestures.\n\nFramer Motion offers more advanced listeners and also extends the basic set of React event listeners.\n\nTap and drag the circle.\n\n- onTapCancelpoint: { x: 544, y: 4627 }\n- onDragEndpoint: { x: 7, y: -2 }, delta: { x: 0, y: 0 }, offset: { x: 7, y: -2 }\n- onDragpoint: { x: 7, y: -2 }, delta: { x: 0, y: 0 }, offset: { x: 7, y: -2 }\n- onDragpoint: { x: 6, y: -2 }, delta: { x: 0, y: 0 }, offset: { x: 6, y: -2 }\n- onDragpoint: { x: 6, y: -2 }, delta: { x: 0, y: 0 }, offset: { x: 6, y: -2 }\n- onDragpoint: { x: 6, y: -2 }, delta: { x: 0, y: 0 }, offset: { x: 6, y: -2 }\n- onDragpoint: { x: 6, y: -2 }, delta: { x: 0, y: 0 }, offset: { x: 6, y: -2 }\n- onDragpoint: { x: 6, y: -2 }, delta: { x: 0, y: 0 }, offset: { x: 6, y: -2 }\n- onDragStartpoint: { x: 0, y: 0 }, delta: { x: 3, y: -1 }, offset: { x: 3, y: -1 }\n- onTapStartpoint: { x: 537, y: 4629 }\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).\n\n![](https://t.co/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=82f3587e-6383-4bbc-ba83-9561b9dd37b4&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=1e477eec-7bec-4617-a948-5f42a6de0cc9&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-QZ2MPXED80&gacid=760695233.1731249504&gtm=45je4b70v9101309483z879263478za200zb79263478&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=101823848~101925629&z=587248381)![](https://analytics.twitter.com/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=82f3587e-6383-4bbc-ba83-9561b9dd37b4&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=1e477eec-7bec-4617-a948-5f42a6de0cc9&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)",
    "metadata": {
      "url": "https://www.framer.com/motion/",
      "ogUrl": "https://www.framer.com/motion/",
      "title": "Documentation | Framer for Developers",
      "og:url": "https://www.framer.com/motion/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "Documentation | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "Documentation | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/",
      "statusCode": 200,
      "description": "An open source, production-ready motion library for React on the web.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "An open source, production-ready motion library for React on the web.",
      "twitter:title": "Documentation | Framer for Developers",
      "og:description": "An open source, production-ready motion library for React on the web.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "An open source, production-ready motion library for React on the web.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# MotionConfig\n\nSet configuration options for Framer Motion.\n\nThe `MotionConfig` component can be used to set configuration options for all child `motion` components. Currently, it only accepts one prop, `transition`.\n\n```\n\nimport { motion, MotionConfig } from \"framer-motion\"\n\nexport const MyComponent = ({ isVisible }) => (\n  <MotionConfig transition={{ duration: 1 }}>\n    <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n      />\n  </MotionConfig>\n)\n```\n\nCopy\n\n## [\\#](/motion/motion-config/\\#props) Props\n\n#### [\\#](/motion/motion-config/\\#\\#\\#transition) transition:Transition\n\nDefines a new default transition for the entire tree.\n\n#### [\\#](/motion/motion-config/\\#\\#\\#reducedmotion) reducedMotion:\"user\" \\| \"always\" \\| \"never\"\n\nDefaults to `\"never\"`\n\n`reducedMotion` lets you set a site-wide policy for handling reduced motion:\n\n- `user`: Respect user's device setting.\n- `always`: Enforce reduced motion.\n- `never`: Don't reduce motion.\n\nWhen motion is reduced, transform and layout animations will be disabled. Other animations, like `opacity` and `backgroundColor`, will persist.\n\n**Note:** The types of animations that are disabled and remain enabled should be expected to resolve as we gather feedback.\n\n#### [\\#](/motion/motion-config/\\#\\#\\#nonce) nonce:string\n\nIf using a [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/style-src#unsafe_inline_styles) with a `nonce` attribute, passing the same attribute through `MotionConfig` will allow any `style` blocks generated by Motion to adhere the the security policy.\n\n[PreviousLazyMotion](/motion/lazy-motion/) [NextReorder](/motion/reorder/)\n\n##### On this page\n\n- [Props](/motion/motion-config/#props)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).\n\n![](https://t.co/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=de4a4eed-b4e1-4e62-86e3-fbf1c1368943&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=2419d4d7-3293-4f47-b1bc-08b270a18ac4&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fmotion-config%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)![](https://analytics.twitter.com/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=de4a4eed-b4e1-4e62-86e3-fbf1c1368943&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=2419d4d7-3293-4f47-b1bc-08b270a18ac4&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fmotion-config%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)\n\n[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-QZ2MPXED80&gacid=2028743706.1731249504&gtm=45je4b70v9101309483z879263478za200zb79263478&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=101823848~101925629&z=778389171)",
    "metadata": {
      "url": "https://www.framer.com/motion/motion-config/",
      "ogUrl": "https://www.framer.com/motion/motion-config/",
      "title": "MotionConfig | Framer for Developers",
      "og:url": "https://www.framer.com/motion/motion-config/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "MotionConfig | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "MotionConfig | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/motion-config/",
      "statusCode": 200,
      "description": "Set configuration options for Framer Motion.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Set configuration options for Framer Motion.",
      "twitter:title": "MotionConfig | Framer for Developers",
      "og:description": "Set configuration options for Framer Motion.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Set configuration options for Framer Motion.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# LazyMotion\n\nReduce bundle size by lazy-loading a subset of Motion's features.\n\nThe `LazyMotion` component can help you reduce bundle size by synchronously or asynchronously loading some, or all, of the `motion` component's features.\n\n```\n\n// React\nimport { LazyMotion, domAnimations, m } from \"framer-motion\"\n\n// React Server Components\nimport { LazyMotion, domAnimations } from \"framer-motion\"\nimport * as m from \"framer-motion/m\"\n\nexport const MyComponent = ({ isVisible }) => (\n  <LazyMotion features={domAnimations}>\n    <m.div animate={{ opacity: 1 }} />\n  </LazyMotion>\n)\n```\n\nCopy\n\nBy default, the `motion` component comes pre-bundled with all of its features. The `m` component can be used in exactly the same way as `motion`, but it comes with no features preloaded. These are then provided by `LazyMotion`.\n\nThis can cut initial bundle sizes down to under 5kb.\n\nRead the [Reduce bundle size guide](/motion/guide-reduce-bundle-size/) for full usage instructions.\n\n## [\\#](/motion/lazy-motion/\\#props) Props\n\n#### [\\#](/motion/lazy-motion/\\#\\#\\#features) features:FeatureBundle \\| LazyFeatureBundle\n\nCan be used to provide a feature bundle synchronously or asynchronously.\n\n```\n\n// features.js\nimport { domAnimations } from \"framer-motion\"\nexport default domAnimations\n\n// index.js\nimport { LazyMotion, m } from \"framer-motion\"\n\nconst loadFeatures = import(\"./features.js\")\n  .then(res => res.default)\n\nfunction Component() {\n  return (\n    <LazyMotion features={loadFeatures}>\n      <m.div animate={{ scale: 1.5 }} />\n    </LazyMotion>\n  )\n}\n```\n\nCopy\n\n#### [\\#](/motion/lazy-motion/\\#\\#\\#strict) strict:boolean\n\nIf `true`, will throw an error if a `motion` component renders within a `LazyMotion` component.\n\n```\n\n// This component will throw an error that explains using a motion component\n// instead of the m component will break the benefits of code-splitting.\nfunction Component() {\n  return (\n    <LazyMotion features={domAnimations} strict>\n      <motion.div />\n    </LazyMotion>\n  )\n}\n```\n\nCopy\n\n[PreviousLayoutGroup](/motion/layout-group/) [NextMotionConfig](/motion/motion-config/)\n\n##### On this page\n\n- [Props](/motion/lazy-motion/#props)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).\n\n![](https://t.co/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=147f3d06-b844-4f61-b613-ee17abb8276c&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=c6a88697-974b-474a-afac-53bd78d7ff0a&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Flazy-motion%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-QZ2MPXED80&gacid=2024883608.1731249504&gtm=45je4b70v9101309483z879263478za200zb79263478&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&_ng=1&aip=1&fledge=1&frm=0&tag_exp=101823848~101925629&z=1272633520)![](https://analytics.twitter.com/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=147f3d06-b844-4f61-b613-ee17abb8276c&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=c6a88697-974b-474a-afac-53bd78d7ff0a&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Flazy-motion%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)",
    "metadata": {
      "url": "https://www.framer.com/motion/lazy-motion/",
      "ogUrl": "https://www.framer.com/motion/lazy-motion/",
      "title": "LazyMotion | Framer for Developers",
      "og:url": "https://www.framer.com/motion/lazy-motion/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "LazyMotion | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "LazyMotion | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/lazy-motion/",
      "statusCode": 200,
      "description": "Reduce bundle size by lazy-loading a subset of Motion's features.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Reduce bundle size by lazy-loading a subset of Motion's features.",
      "twitter:title": "LazyMotion | Framer for Developers",
      "og:description": "Reduce bundle size by lazy-loading a subset of Motion's features.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Reduce bundle size by lazy-loading a subset of Motion's features.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# inView\n\nTrigger a callback when elements enter and leave the viewport.\n\n`inView` detects when elements enter and leave the viewport.\n\n```\n\ninView(\"li\", ({ target }) => {\n  animate(target, { opacity: 1 })\n})\n```\n\nCopy\n\nThis information can be used to create effects like:\n\n- Animating elements as they scroll in/out of view.\n- Pausing animations while off-screen.\n- Lazy loading content.\n- Automatically start/stop video playback\n\n`inView` is built on the browser's native [Intersection Observer API](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API) for the best performance and tiny filesize (0.5kb).\n\n**React users:** `inView` _can_ be used with React (inside an effect), but the [`whileInView` animation prop](/motion/scroll-animations/#scroll-triggered-animations) and [`useInView` state hook](/motion/use-in-view/) provide simpler, React-specifics APIs.\n\n## [\\#](/motion/in-view/\\#usage) Usage\n\nImport `inView` from Framer Motion.\n\n```\n\n// React\nimport { inView } from \"framer-motion\"\n\n// Universal\nimport { inView } from \"framer-motion/dom\"\n```\n\nCopy\n\ninView can accept a selector, an `Element`, or an array of `Element` s.\n\n```\n\n// Selector\ninView(\"section\", callback)\n\n// Element\nconst box = document.getElementById(\"box\")\ninView(box, callback)\n```\n\nCopy\n\nBy default, the provided callback will fire just once, when the element first enters the viewport.\n\n```\n\ninView(element, () => {\n  console.log(\"Element has entered the viewport\")\n})\n```\n\nCopy\n\nThis callback is provided [an](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry) [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry) [object](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry) which contains information on the intersection.\n\n```\n\ninView(\"a\", (info) => {\n  console.log(\"The link  \", info.target.id, \" has entered the viewport\")\n})\n```\n\nCopy\n\n### [\\#](/motion/in-view/\\#\\#exiting-the-viewport) Exiting the viewport\n\nA function returned from this callback will fire when the element leaves the viewport.\n\n```\n\ninView(element, (info) => {\n  const animation = animate(info.target, { opacity: 1 })\n\n  // This will fire when the element leaves the viewport\n  return (leaveInfo) => animation.stop()\n})\n```\n\nCopy\n\nAdditionally, the gesture will also continue to fire as the element enters/leaves the viewport.\n\n### [\\#](/motion/in-view/\\#\\#change-viewport) Change viewport\n\nBy default, `inView` detects when the provided element(s) enter/leave the default viewport: The browser window.\n\nBut it can also detect when the element(s) enter/leave the viewport of a scrollable parent element, by passing that element to the `root` option:\n\n```\n\nconst carousel = document.querySelector(\"#carousel\")\n\ninView(\"#carousel li\", callback, { root: carousel })\n```\n\nCopy\n\n### [\\#](/motion/in-view/\\#\\#stop-detection) Stop detection\n\n`inView` returns a function that, when fired, will stop gesture detection.\n\n```\n\nconst stop = inView(element, callback)\n\nstop()\n```\n\nCopy\n\n## [\\#](/motion/in-view/\\#options) Options\n\n#### [\\#](/motion/in-view/\\#\\#\\#root) root:RefObject<HTMLElement>\n\nBy default, `useInView` will track the visibility of an element as it enters/leaves the window viewport. Set `root` to be the ref of a scrollable parent, and it'll use that element to be the viewport instead.\n\n```\n\nfunction Carousel() {\n  const container = useRef(null)\n  const ref = useRef(null)\n  const isInView = useInView({ root: container })\n\n  return (\n    <div ref={container} style={{ overflow: \"scroll\" }}>\n      <div ref={ref} />\n    </div>\n  )\n}\n```\n\nCopy\n\n#### [\\#](/motion/in-view/\\#\\#\\#margin) margin:string\n\nOne or more margins to apply to the `root` element or window viewport. This can extend or contract the point at which the element is considered inside the viewport.\n\nMargins must be defined as `px` or `%`.\n\n```\n\ninView(\n  onEnter,\n  element,\n  { margin: \"0px 100px -50px 0px\" }\n)\n```\n\nCopy\n\n**Note:** For browser security reasons, `margin` [won't take affect within cross-origin iframes](https://w3c.github.io/IntersectionObserver/#dom-intersectionobserver-rootmargin) unless \\`root\\` is explicitly defined.\n\n#### [\\#](/motion/in-view/\\#\\#\\#amount) amount:\"some\" \\| \"all\" \\| number\n\nThe amount of an element that needs to enter the viewport for `inView` to return `true`.\n\nThis is defined as a number between `0` and `1`, where `0` is some or any of the element, and `1` is all of the element.\n\n[Previousscroll](/motion/scroll-function/) [Nextmix](/motion/mix/)\n\n##### On this page\n\n- [Usage](/motion/in-view/#usage)\n- [Exiting the viewport](/motion/in-view/##exiting-the-viewport)\n- [Change viewport](/motion/in-view/##change-viewport)\n- [Stop detection](/motion/in-view/##stop-detection)\n- [Options](/motion/in-view/#options)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/in-view/",
      "ogUrl": "https://www.framer.com/motion/in-view/",
      "title": "inView | Framer for Developers",
      "og:url": "https://www.framer.com/motion/in-view/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "inView | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "inView | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/in-view/",
      "statusCode": 200,
      "description": "Trigger a callback when elements enter and leave the viewport.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Trigger a callback when elements enter and leave the viewport.",
      "twitter:title": "inView | Framer for Developers",
      "og:description": "Trigger a callback when elements enter and leave the viewport.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Trigger a callback when elements enter and leave the viewport.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# LayoutGroup\n\nGroup motion components that should perform layout animations together.\n\nBy default, `motion` components with a `layout` prop will attempt to detect and animate layout changes every time they commit a React render.\n\nIt might be the case that components in different trees affect each other's layout.\n\n```\n\nfunction ToggleContent({ header, content }) {\n  const [isOpen, setIsOpen] = useState(false)\n\n  return (\n    <motion.div\n      layout\n      onClick={() => setIsOpen(!isOpen)}\n    >\n      <motion.h2 layout>{header}</motion.h2>\n      {isOpen ? content : null}\n    </motion.div>\n  )\n}\n\nfunction App() {\n  return (\n    <>\n      <ToggleContent />\n      <ToggleContent />\n    </>\n  )\n}\n```\n\nCopy\n\nWhen the state of one of these `ToggleContent` components changes, its sibling won't rerender, so it won't perform a layout animation.\n\nThis can be fixed by grouping both components with `LayoutGroup`:\n\n```\n\nimport { LayoutGroup } from \"framer-motion\"\n\nfunction App() {\n  return (\n    <LayoutGroup>\n      <ToggleContent />\n      <ToggleContent />\n    </LayoutGroup>\n  )\n}\n```\n\nCopy\n\nNow, whenever one `layout` component within `LayoutGroup` detects and animates layout changes, they all do.\n\n## [\\#](/motion/layout-group/\\#namespace-layoutid) Namespace `layoutId`\n\nComponents expecting to perform shared layout animations are provided a `layoutId` prop.\n\n```\n\nfunction Tab({ label, isSelected }) {\n  return (\n    <li>\n      {label}\n      {isSelected\n        ? <motion.div layoutId=\"underline\" />\n        : null}\n    </li>\n  )\n}\n\nfunction TabRow({ items }) {\n  return items.map(item => <Tab {...item} />)\n}\n```\n\nCopy\n\n`layoutId` is global, so if multiple instances of `TabRow` are rendered, only one with `layoutId=\"underline\"` will render at a time.\n\nTo fix this, `LayoutGroup` can be provided an `id` prop that namespaces the `layoutId` for all components within it.\n\n```\n\nfunction App() {\n  return (\n    <LayoutGroup id=\"top5\">\n      <TabRow />\n    </LayoutGroup>\n    <LayoutGroup id=\"latest\">\n      <TabRow />\n    </LayoutGroup>\n  )\n}\n```\n\nCopy\n\n[PreviousAnimatePresence](/motion/animate-presence/) [NextLazyMotion](/motion/lazy-motion/)\n\n##### On this page\n\n- [Namespace layoutId](/motion/layout-group/#namespace-layoutid)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).\n\n![](https://t.co/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=35db4060-bacb-48af-8f6f-96a375b4ca4b&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=22f5900f-f9e1-4b8f-9a99-3475ab9e706b&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Flayout-group%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-QZ2MPXED80&gacid=934255213.1731249504&gtm=45je4b70v9101309483z879263478za200zb79263478&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&aip=1&fledge=1&frm=0&tag_exp=101823848~101925629&z=1646023958)![](https://analytics.twitter.com/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=35db4060-bacb-48af-8f6f-96a375b4ca4b&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=22f5900f-f9e1-4b8f-9a99-3475ab9e706b&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Flayout-group%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)",
    "metadata": {
      "url": "https://www.framer.com/motion/layout-group/",
      "ogUrl": "https://www.framer.com/motion/layout-group/",
      "title": "LayoutGroup | Framer for Developers",
      "og:url": "https://www.framer.com/motion/layout-group/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "LayoutGroup | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "LayoutGroup | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/layout-group/",
      "statusCode": 200,
      "description": "Group motion components that should perform layout animations together.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Group motion components that should perform layout animations together.",
      "twitter:title": "LayoutGroup | Framer for Developers",
      "og:description": "Group motion components that should perform layout animations together.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Group motion components that should perform layout animations together.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# useInView\n\nA simple state hook for when an element is within the viewport.\n\n`useInView` is a tiny (0.6kb) hook that detects when the provided element is within the viewport.\n\n```\n\nfunction Component() {\n  const ref = useRef(null)\n  const isInView = useInView(ref)\n\n  return <div ref={ref} />\n}\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/use-in-view/\\#usage) Usage\n\nImport `useInView` from Framer Motion.\n\n```\n\nimport { useInView } from \"framer-motion\"\n```\n\nCopy\n\n`useInView` can track the visibility of any HTML element. Pass a `ref` object to both `useInView` and the HTML element.\n\n```\n\nfunction Component() {\n  const ref = useRef(null)\n  const isInView = useInView(ref)\n\n  return <div ref={ref} />\n}\n```\n\nCopy\n\nWhile the element is outside the viewport, `useInView` will return `false`. When it moves inside the view, it'll re-render the component and return `true`.\n\n## [\\#](https://www.framer.com/motion/use-in-view/\\#effects) Effects\n\n`useInView` is vanilla React state, so firing functions when `isInView` changes is a matter of passing it to a `useEffect`.\n\n```\n\nuseEffect(() => {\n  console.log(\"Element is in view: \", isInView)\n}, [isInView])\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/use-in-view/\\#options) Options\n\n#### [\\#](https://www.framer.com/motion/use-in-view/\\#\\#\\#root) root:RefObject<HTMLElement>\n\nBy default, `useInView` will track the visibility of an element as it enters/leaves the window viewport. Set `root` to be the ref of a scrollable parent, and it'll use that element to be the viewport instead.\n\n```\n\nfunction Carousel() {\n  const container = useRef(null)\n  const ref = useRef(null)\n  const isInView = useInView({ root: container })\n\n  return (\n    <div ref={container} style={{ overflow: \"scroll\" }}>\n      <div ref={ref} />\n    </div>\n  )\n}\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/use-in-view/\\#\\#\\#margin) margin:string\n\nOne or more margins to apply to the `root` element or window viewport. This can extend or contract the point at which the element is considered inside the viewport.\n\nMargins must be defined as `px` or `%`.\n\n```\n\nconst isInView = useInView({\n  margin: \"0px 100px -50px 0px\"\n})\n```\n\nCopy\n\n**Note:** For browser security reasons, `margin` [won't take affect within cross-origin iframes](https://w3c.github.io/IntersectionObserver/#dom-intersectionobserver-rootmargin) unless \\`root\\` is explicitly defined.\n\n#### [\\#](https://www.framer.com/motion/use-in-view/\\#\\#\\#once) once:boolean\n\nBy setting `once: true`, once an element is in view, useInView will stop observing the element and always return `true`.\n\n```\n\nconst isInView = useInView(ref, { once: true })\n```\n\nCopy\n\n#### [\\#](https://www.framer.com/motion/use-in-view/\\#\\#\\#amount) amount:\"some\" \\| \"all\" \\| number\n\nThe amount of an element that needs to enter the viewport for `useInView` to return `true`.\n\nThis is defined as a number between `0` and `1`, where `0` is some or any of the element, and `1` is all of the element.\n\n## [\\#](https://www.framer.com/motion/use-in-view/\\#examples) Examples\n\n[PrevioususeDragControls](https://www.framer.com/motion/use-drag-controls/) [NextuseReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### On this page\n\n- [Usage](https://www.framer.com/motion/use-in-view/#usage)\n- [Effects](https://www.framer.com/motion/use-in-view/#effects)\n- [Options](https://www.framer.com/motion/use-in-view/#options)\n- [Examples](https://www.framer.com/motion/use-in-view/#examples)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/use-in-view/",
      "ogUrl": "https://www.framer.com/motion/use-in-view/",
      "title": "useInView | Framer for Developers",
      "og:url": "https://www.framer.com/motion/use-in-view/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "useInView | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "useInView | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/use-in-view/",
      "statusCode": 200,
      "description": "A simple state hook for when an element is within the viewport.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "A simple state hook for when an element is within the viewport.",
      "twitter:title": "useInView | Framer for Developers",
      "og:description": "A simple state hook for when an element is within the viewport.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "A simple state hook for when an element is within the viewport.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# useMotionTemplate\n\nCombine multiple motion values into a new one via string template.\n\n`useMotionTemplate` creates a new [motion value](/docs/motionvalue/) from a [string template](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals) containing other motion values.\n\nWhenever a motion value within the string template updates, the new motion value will update with the latest value.\n\n## [\\#](/motion/use-motion-template/\\#usage) Usage\n\nImport `useMotionTemplate` from Framer Motion.\n\n```\n\nimport { useMotionTemplate } from \"framer-motion\"\n```\n\nCopy\n\n`useMotionValue` is a \"tagged template literal\". So rather than being called like a normal function, it's ended with a string template.\n\n```\n\nuseMotionTemplate``\n```\n\nCopy\n\nThis string template can accept text and other motion values.\n\n```\n\nconst x = useMotionValue(100)\n\n// transform.get() === transform(100px)\nconst transform = useMotionTemplate`transform(${x}px)`\n\nreturn <motion.div style={{ transform }} />\n```\n\nCopy\n\nThe latest value of the returned motion value will be the string template with each provided motion value replaced with its latest value.\n\n```\n\nconst shadowX = useSpring(0)\nconst shadowY = useMotionValue(0)\n\nconst shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\n\nreturn <motion.div style={{ filter: shadow }} />\n```\n\nCopy\n\n[PrevioususeMotionValueEvent](/motion/use-motion-value-event/) [NextuseScroll](/motion/use-scroll/)\n\n##### On this page\n\n- [Usage](/motion/use-motion-template/#usage)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).\n\n![](https://t.co/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=ab99f086-2502-43f8-9062-5104c202d29f&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=12e6a25c-8384-4a2b-86ec-b4e5aa6cfe84&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fuse-motion-template%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)[iframe](https://td.doubleclick.net/td/ga/rul?tid=G-QZ2MPXED80&gacid=1949488751.1731249504&gtm=45je4b70v9101309483z879263478za200zb79263478&dma=0&gcd=13l3l3l3l1l1&npa=0&pscdl=noapi&_ng=1&aip=1&fledge=1&frm=0&tag_exp=101823848~101925629&z=1542385033)![](https://analytics.twitter.com/1/i/adsct?bci=4&dv=America%2FNew_York%26en-US%26Google%20Inc.%26Linux%20x86_64%26255%261280%261024%264%2624%261280%261024%260%26na&eci=3&event=%7B%7D&event_id=ab99f086-2502-43f8-9062-5104c202d29f&integration=advertiser&p_id=Twitter&p_user_id=0&pl_id=12e6a25c-8384-4a2b-86ec-b4e5aa6cfe84&tw_document_href=https%3A%2F%2Fwww.framer.com%2Fmotion%2Fuse-motion-template%2F&tw_iframe_status=0&txn_id=nxmzp&type=javascript&version=2.3.31)",
    "metadata": {
      "url": "https://www.framer.com/motion/use-motion-template/",
      "ogUrl": "https://www.framer.com/motion/use-motion-template/",
      "title": "useMotionTemplate | Framer for Developers",
      "og:url": "https://www.framer.com/motion/use-motion-template/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "useMotionTemplate | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "useMotionTemplate | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/use-motion-template/",
      "statusCode": 200,
      "description": "Combine multiple motion values into a new one via string template.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Combine multiple motion values into a new one via string template.",
      "twitter:title": "useMotionTemplate | Framer for Developers",
      "og:description": "Combine multiple motion values into a new one via string template.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Combine multiple motion values into a new one via string template.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](https://www.framer.com/motion/introduction/)\n- [Examples](https://www.framer.com/motion/examples/)\n\n##### Animation\n\n- [Overview](https://www.framer.com/motion/animation/)\n- [Layout](https://www.framer.com/motion/layout-animations/)\n- [Gestures](https://www.framer.com/motion/gestures/)\n- [Scroll](https://www.framer.com/motion/scroll-animations/)\n- [Transition](https://www.framer.com/motion/transition/)\n\n##### Components\n\n- [motion](https://www.framer.com/motion/component/)\n- [AnimatePresence](https://www.framer.com/motion/animate-presence/)\n- [LayoutGroup](https://www.framer.com/motion/layout-group/)\n- [LazyMotion](https://www.framer.com/motion/lazy-motion/)\n- [MotionConfig](https://www.framer.com/motion/motion-config/)\n- [Reorder](https://www.framer.com/motion/reorder/)\n\n##### Motion values\n\n- [Overview](https://www.framer.com/motion/motionvalue/)\n- [useMotionValueEvent](https://www.framer.com/motion/use-motion-value-event/)\n- [useMotionTemplate](https://www.framer.com/motion/use-motion-template/)\n- [useScroll](https://www.framer.com/motion/use-scroll/)\n- [useSpring](https://www.framer.com/motion/use-spring/)\n- [useTime](https://www.framer.com/motion/use-time/)\n- [useTransform](https://www.framer.com/motion/use-transform/)\n- [useVelocity](https://www.framer.com/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](https://www.framer.com/motion/use-animate/)\n- [useAnimationFrame](https://www.framer.com/motion/use-animation-frame/)\n- [useDragControls](https://www.framer.com/motion/use-drag-controls/)\n- [useInView](https://www.framer.com/motion/use-in-view/)\n- [useReducedMotion](https://www.framer.com/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](https://www.framer.com/motion/animate-function/)\n- [scroll](https://www.framer.com/motion/scroll-function/)\n- [inView](https://www.framer.com/motion/in-view/)\n- [mix](https://www.framer.com/motion/mix/)\n- [transform](https://www.framer.com/motion/transform-function/)\n- [stagger](https://www.framer.com/motion/stagger/)\n- [frame](https://www.framer.com/motion/frame/)\n- [Easing functions](https://www.framer.com/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](https://www.framer.com/motion/three-introduction/)\n- [LayoutCamera](https://www.framer.com/motion/layoutcamera/)\n- [LayoutOrthographicCamera](https://www.framer.com/motion/layoutorthographiccamera/)\n- [MotionCanvas](https://www.framer.com/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](https://www.framer.com/motion/guide-accessibility/)\n- [Reduce bundle size](https://www.framer.com/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](https://www.framer.com/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](https://www.framer.com/r/discord/)\n\n# useTime\n\nA motion value that updates every animation frame with the duration, in ms, since it was created.\n\n`useTime` returns a [motion value](https://www.framer.com/docs/motionvalue/) that updates once per frame with the duration, in milliseconds, since the motion value was first created.\n\nThis is particulary useful for driving animations perpetually.\n\n## [\\#](https://www.framer.com/motion/use-time/\\#usage) Usage\n\nImport from Framer Motion.\n\n```\n\nimport { useTime } from \"framer-motion\"\n```\n\nCopy\n\nWhen called, `useTime` will create a new motion value. This value will update every frame with the time since its creation.\n\nYou can use this either directly or by composing with other motion value hooks.\n\n```\n\nconst time = useTime()\nconst rotate = useTransform(\n  time,\n  [0, 4000], // For every 4 seconds...\n  [0, 360], // ...rotate 360deg\n  { clamp: false }\n)\n```\n\nCopy\n\n## [\\#](https://www.framer.com/motion/use-time/\\#example) Example\n\n[PrevioususeSpring](https://www.framer.com/motion/use-spring/) [NextuseTransform](https://www.framer.com/motion/use-transform/)\n\n##### On this page\n\n- [Usage](https://www.framer.com/motion/use-time/#usage)\n- [Example](https://www.framer.com/motion/use-time/#example)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](https://www.framer.com/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/use-time/",
      "ogUrl": "https://www.framer.com/motion/use-time/",
      "title": "useTime | Framer for Developers",
      "og:url": "https://www.framer.com/motion/use-time/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "useTime | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "useTime | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/use-time/",
      "statusCode": 200,
      "description": "A motion value that updates every animation frame with the duration, in ms, since it was created.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "A motion value that updates every animation frame with the duration, in ms, since it was created.",
      "twitter:title": "useTime | Framer for Developers",
      "og:description": "A motion value that updates every animation frame with the duration, in ms, since it was created.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "A motion value that updates every animation frame with the duration, in ms, since it was created.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# transform\n\nCreate a function that will map a value from one range to another.\n\n`transform` can map a value from one range of values to another.\n\n## [\\#](/motion/transform-function/\\#usage) Usage\n\nImport from Framer Motion.\n\n```\n\n// React\nimport { transform } from \"framer-motion\"\n\n// Universal\nimport { transform } from \"framer-motion/dom\"\n```\n\nCopy\n\n**Note:** React users are recommended to use [`useTransform`](/docs/use-transform/) instead but can still use `transform` directly for low-level use.\n\nCreate a transformation function by passing two ranges, an **input** range and an **output** range:\n\n```\n\nconst transformer = transform([0, 100], [0, 360])\n```\n\nCopy\n\nThe returned function can now be called with an input value, and will return an output value:\n\n```\n\nconst rotate = transformer(50) // 180\n```\n\nCopy\n\nBoth ranges **must always be the same length**.\n\nThe **input range** must always be a linear series of numbers, either counting up or counting down.\n\nThe **output range** must all be of the same type, but can be any type supported by Framer Motion, for instance numbers, colors, shadows etc.\n\n```\n\nconst backgroundColor = transform(\n  [0, 100],\n  [\"#f00\", \"#00f\"]\n)(50)\n```\n\nCopy\n\nIt's possible to provide more than two values to each range. For instance, with the following mapping, the output will only be `1` within an input of `0` and `100`.\n\n```\n\ntransform(\n  [-100, 0, 100, 200],\n  [0, 1, 1, 0]\n)\n```\n\nCopy\n\nIf `clamp: false` is provided, the returned function will map infinitely:\n\n```\n\nconst transformer = transform([0, 100], [0, 360], { clamp: false })\nconst rotation = transformer(200) // 720\n```\n\nCopy\n\n[Previousmix](/motion/mix/) [Nextstagger](/motion/stagger/)\n\n##### On this page\n\n- [Usage](/motion/transform-function/#usage)\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/transform-function/",
      "ogUrl": "https://www.framer.com/motion/transform-function/",
      "title": "transform | Framer for Developers",
      "og:url": "https://www.framer.com/motion/transform-function/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "transform | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "transform | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion/transform-function/",
      "statusCode": 200,
      "description": "Create a function that will map a value from one range to another.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "Create a function that will map a value from one range to another.",
      "twitter:title": "transform | Framer for Developers",
      "og:description": "Create a function that will map a value from one range to another.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "Create a function that will map a value from one range to another.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  },
  {
    "markdown": "Design and publish your first free site today.\n\n##### Getting started\n\n- [Introduction](/motion/introduction/)\n- [Examples](/motion/examples/)\n\n##### Animation\n\n- [Overview](/motion/animation/)\n- [Layout](/motion/layout-animations/)\n- [Gestures](/motion/gestures/)\n- [Scroll](/motion/scroll-animations/)\n- [Transition](/motion/transition/)\n\n##### Components\n\n- [motion](/motion/component/)\n- [AnimatePresence](/motion/animate-presence/)\n- [LayoutGroup](/motion/layout-group/)\n- [LazyMotion](/motion/lazy-motion/)\n- [MotionConfig](/motion/motion-config/)\n- [Reorder](/motion/reorder/)\n\n##### Motion values\n\n- [Overview](/motion/motionvalue/)\n- [useMotionValueEvent](/motion/use-motion-value-event/)\n- [useMotionTemplate](/motion/use-motion-template/)\n- [useScroll](/motion/use-scroll/)\n- [useSpring](/motion/use-spring/)\n- [useTime](/motion/use-time/)\n- [useTransform](/motion/use-transform/)\n- [useVelocity](/motion/use-velocity/)\n\n##### Hooks\n\n- [useAnimate](/motion/use-animate/)\n- [useAnimationFrame](/motion/use-animation-frame/)\n- [useDragControls](/motion/use-drag-controls/)\n- [useInView](/motion/use-in-view/)\n- [useReducedMotion](/motion/use-reduced-motion/)\n\n##### Universal\n\n- [animate](/motion/animate-function/)\n- [scroll](/motion/scroll-function/)\n- [inView](/motion/in-view/)\n- [mix](/motion/mix/)\n- [transform](/motion/transform-function/)\n- [stagger](/motion/stagger/)\n- [frame](/motion/frame/)\n- [Easing functions](/motion/easing-functions/)\n\n##### 3D\n\n- [Introduction](/motion/three-introduction/)\n- [LayoutCamera](/motion/layoutcamera/)\n- [LayoutOrthographicCamera](/motion/layoutorthographiccamera/)\n- [MotionCanvas](/motion/motioncanvas/)\n\n##### Guides\n\n- [Accessibility](/motion/guide-accessibility/)\n- [Reduce bundle size](/motion/guide-reduce-bundle-size/)\n- [Upgrade guides](/motion/guide-upgrade/)\n\n##### Community\n\n- [GitHub](https://github.com/framer/motion)\n- [Discord](/r/discord/)\n\n# FramerMotion.\n\nComplete documentation of the Framer Motion animation library. A production-ready motion library for React.\n\n[Get started](/motion/introduction/)\n\n#### Animation\n\n#### Variants\n\n#### Gestures\n\n#### Drag\n\n#### Scroll\n\n#### Path\n\n## Production-ready declarative animations.\n\nA simple declarative syntax means you write less code. Less code means your codebase is easier to read and maintain.\n\nTweak the parameters to animate.\n\n```\n\n<motion.div\n  animate={{\n    x: 0,\n    y: 0,\n    scale: 1,\n    rotate: 0,\n  }}\n/>\n```\n\nX\n\nY\n\nScale\n\nRotate\n\n## Animations that work like magic.\n\nWhen animating between two separate components, Framer Motion will take care of everything in between.\n\nTap to open a card.\n\n```\n\nconst [selectedId, setSelectedId] = useState(null)\n\n{items.map(item => (\n  <motion.div layoutId={item.id} onClick={() => setSelectedId(item.id)}>\n    <motion.h5>{item.subtitle}</motion.h5>\n    <motion.h2>{item.title}</motion.h2>\n  </motion.div>\n))}\n\n<AnimatePresence>\n  {selectedId && (\n    <motion.div layoutId={selectedId}>\n      <motion.h5>{item.subtitle}</motion.h5>\n      <motion.h2>{item.title}</motion.h2>\n      <motion.button onClick={() => setSelectedId(null)} />\n    </motion.div>\n  )}\n</AnimatePresence>\n```\n\n## Complex events and gestures.\n\nFramer Motion offers more advanced listeners and also extends the basic set of React event listeners.\n\nTap and drag the circle.\n\n- onTapCancelpoint: { x: 544, y: 4627 }\n- onDragEndpoint: { x: 7, y: -2 }, delta: { x: 0, y: 0 }, offset: { x: 7, y: -2 }\n- onDragpoint: { x: 7, y: -2 }, delta: { x: 0, y: 0 }, offset: { x: 7, y: -2 }\n- onDragpoint: { x: 6, y: -2 }, delta: { x: 0, y: 0 }, offset: { x: 6, y: -2 }\n- onDragpoint: { x: 6, y: -2 }, delta: { x: 0, y: 0 }, offset: { x: 6, y: -2 }\n- onDragpoint: { x: 6, y: -2 }, delta: { x: 0, y: 0 }, offset: { x: 6, y: -2 }\n- onDragpoint: { x: 6, y: -2 }, delta: { x: 0, y: 0 }, offset: { x: 6, y: -2 }\n- onDragpoint: { x: 6, y: -2 }, delta: { x: 0, y: 0 }, offset: { x: 6, y: -2 }\n- onDragStartpoint: { x: 0, y: 0 }, delta: { x: 3, y: -1 }, offset: { x: 3, y: -1 }\n- onTapStartpoint: { x: 537, y: 4629 }\n\nBy continuing to use this website, you consent to the use of cookies in accordance with our [Cookie Policy](/support/accounts/cookie-policy).",
    "metadata": {
      "url": "https://www.framer.com/motion/",
      "ogUrl": "https://www.framer.com/motion/",
      "title": "Documentation | Framer for Developers",
      "og:url": "https://www.framer.com/motion/",
      "og:type": "product",
      "ogImage": "https://www.framer.com/images/social/api.png",
      "ogTitle": "Documentation | Framer for Developers",
      "language": "en",
      "og:image": "https://www.framer.com/images/social/api.png",
      "og:title": "Documentation | Framer for Developers",
      "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, viewport-fit=cover",
      "fb:app_id": "216342412279020",
      "sourceURL": "https://www.framer.com/motion",
      "statusCode": 200,
      "description": "An open source, production-ready motion library for React on the web.",
      "twitter:card": "photo",
      "twitter:site": "@framer",
      "ogDescription": "An open source, production-ready motion library for React on the web.",
      "twitter:title": "Documentation | Framer for Developers",
      "og:description": "An open source, production-ready motion library for React on the web.",
      "next-head-count": "38",
      "twitter:creator": "@framer",
      "ogLocaleAlternate": [],
      "twitter:image:src": "https://www.framer.com/images/social/api.png",
      "twitter:description": "An open source, production-ready motion library for React on the web.",
      "mobile-web-app-capable": "yes",
      "google-site-verification": "GyfgsXGMAhgkxb6h-hmxb6ox7PyrFp9lPEkjXDc-pRw",
      "facebook-domain-verification": "2s76n8inov6o9iihmbslm0hnwfi7wp"
    }
  }
]